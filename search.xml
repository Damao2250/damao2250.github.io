<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/10/03/hello-world/"/>
      <url>/2021/10/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>_posts</title>
      <link href="/2021/10/03/index/"/>
      <url>/2021/10/03/index/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git之多SSH-key配置</title>
      <link href="/2021/09/13/git%E4%B9%8B%E5%A4%9ASSH-key%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/09/13/git%E4%B9%8B%E5%A4%9ASSH-key%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="1-生成SSH-Key"><a href="#1-生成SSH-Key" class="headerlink" title="1. 生成SSH-Key"></a>1. 生成SSH-Key</h1><ul><li>Windows系统请使用Git bash操作<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成第一个SSH-Key</span>$ ssh-keygen -t rsa -C <span class="token string">"你的邮箱” -f ~/.ssh/id_rsa_one# 生成第二个SSH-Key$ ssh-keygen -t rsa -C "</span>"你的邮箱”” -f ~/.ssh/id_rsa_two<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>创建完成之后 我们在.ssh的根目录下可以看到文件<ul><li>C:\Users\Administrator.ssh 或者 C:\Users\电脑用户名.ssh</li></ul></li></ul><h1 id="2-添加私钥"><a href="#2-添加私钥" class="headerlink" title="2. 添加私钥"></a>2. 添加私钥</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在终端中执行</span>$ ssh-add ~/.ssh/id_rsa_gitlab$ ssh-add ~/.ssh/id_rsa_github<span class="token comment"># 如果执行ssh-add时提示 Could not open a connection to your authentication agent</span><span class="token comment"># 可以先执行命令:</span>$ ssh-agent <span class="token function">bash</span><span class="token comment"># 然后再重新运行ssh-add命令即可</span><span class="token comment"># 添加成功会出现提示：</span><span class="token comment"># Identity added 等字样</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-查看私钥列表是否存在"><a href="#3-查看私钥列表是否存在" class="headerlink" title="3. 查看私钥列表是否存在"></a>3. 查看私钥列表是否存在</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ssh-add -l<span class="token comment"># 当我们可以看到2条私钥的时候就证明安装成功了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="4-修改配置文件config"><a href="#4-修改配置文件config" class="headerlink" title="4. 修改配置文件config"></a>4. 修改配置文件config</h1><ul><li>若.ssh目录(就是私钥所在的文件夹)下无config文件，那就需要自己创建config文件（可用vs code创建）</li><li>创建后添加一下内容：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># giglab</span>Host giglab.comHostName giglab.comPreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsa_gitlab<span class="token comment"># github</span>Host github.comHostName github.comPreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsa_github<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="5-在gitlab、github网站中设置SSH-keys"><a href="#5-在gitlab、github网站中设置SSH-keys" class="headerlink" title="5. 在gitlab、github网站中设置SSH keys"></a>5. 在gitlab、github网站中设置SSH keys</h1></li><li>在gitlab、github网站中找到用户设置，找到SSH keys</li><li>在.ssh的根目录中找到对应网站的.pub结尾的文件，用记事本打开，然后复制内容到对应网站保存即可<h1 id="6-用ssh命令测试验证"><a href="#6-用ssh命令测试验证" class="headerlink" title="6. 用ssh命令测试验证"></a>6. 用ssh命令测试验证</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ssh</span> -T git@gitlab.com$ <span class="token function">ssh</span> -T git@github.com<span class="token comment"># 如果出现 Are you sure you want to continue connecting? </span><span class="token comment"># 直接输入 yes</span><span class="token comment"># 然后重复上面的命令</span><span class="token comment"># 验证通过会有类似“Welconme”或者“Hi”的欢迎字样</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="7-清空私钥列表"><a href="#7-清空私钥列表" class="headerlink" title="7. 清空私钥列表"></a>7. 清空私钥列表</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ssh-add -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker</title>
      <link href="/2021/08/31/docker%E8%B5%B7%E6%AD%A5%E6%95%99%E7%A8%8B/"/>
      <url>/2021/08/31/docker%E8%B5%B7%E6%AD%A5%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装docker</span>yum <span class="token function">install</span> docker -y<span class="token comment"># 查看docker版本</span>docker -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="自动部署时需要的Dockerfile"><a href="#自动部署时需要的Dockerfile" class="headerlink" title="自动部署时需要的Dockerfile"></a>自动部署时需要的Dockerfile</h1><ul><li>编写Dockerfile时文件名就为Dockerfile，不需要要任何后缀，编写完后放到项目根目录下</li><li>版本1<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">FROM</span> docker<span class="token punctuation">.</span>dm<span class="token operator">-</span>ai<span class="token punctuation">.</span>cn<span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>node<span class="token operator">:</span><span class="token number">10</span><span class="token operator">-</span>frontend<span class="token operator">-</span><span class="token number">0.01</span><span class="token constant">WORKDIR</span> <span class="token operator">/</span>app<span class="token constant">ADD</span> <span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token constant">RUN</span> npm config <span class="token keyword">set</span> registry https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>npm<span class="token punctuation">.</span>dm<span class="token operator">-</span>ai<span class="token punctuation">.</span>cn<span class="token operator">/</span>repository<span class="token operator">/</span>npm <span class="token operator">&amp;&amp;</span> npm i <span class="token operator">&amp;&amp;</span> npm run build<span class="token constant">FROM</span> docker<span class="token punctuation">.</span>dm<span class="token operator">-</span>ai<span class="token punctuation">.</span>cn<span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>nginx<span class="token operator">:</span><span class="token number">1.17</span><span class="token constant">ENV</span> <span class="token constant">TZ</span><span class="token operator">=</span>Asia<span class="token operator">/</span>Shanghai<span class="token constant">WORKDIR</span> <span class="token operator">/</span>www<span class="token constant">COPY</span> –from<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">/</span>app<span class="token operator">/</span>dist <span class="token operator">/</span>www<span class="token constant">COPY</span> –from<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">/</span>app<span class="token operator">/</span>nginx<span class="token punctuation">.</span>conf <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>conf<span class="token punctuation">.</span>d<span class="token operator">/</span><span class="token keyword">default</span><span class="token punctuation">.</span>conf<span class="token constant">EXPOSE</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>版本2（嘉熙版本）<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">FROM</span> docker<span class="token punctuation">.</span>dm<span class="token operator">-</span>ai<span class="token punctuation">.</span>cn<span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>node<span class="token operator">:</span><span class="token number">14</span><span class="token constant">WORKDIR</span> <span class="token operator">/</span>app<span class="token constant">COPY</span> <span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token constant">RUN</span> npm config <span class="token keyword">set</span> registry https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>npm<span class="token punctuation">.</span>dm<span class="token operator">-</span>ai<span class="token punctuation">.</span>cn<span class="token operator">/</span>repository<span class="token operator">/</span>npm<span class="token operator">/</span> \  <span class="token operator">&amp;&amp;</span> npm config <span class="token keyword">set</span> sass_binary_site https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span class="token operator">/</span>mirrors<span class="token operator">/</span>node<span class="token operator">-</span>sass<span class="token operator">/</span> \  <span class="token operator">&amp;&amp;</span> npm i <span class="token operator">&amp;&amp;</span> npm run build<span class="token constant">FROM</span> docker<span class="token punctuation">.</span>dm<span class="token operator">-</span>ai<span class="token punctuation">.</span>cn<span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>nginx<span class="token operator">:</span><span class="token number">1.17</span><span class="token constant">ENV</span> <span class="token constant">TZ</span><span class="token operator">=</span>Asia<span class="token operator">/</span>Shanghai<span class="token constant">COPY</span> <span class="token operator">--</span>from<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">/</span>app<span class="token operator">/</span>dist <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>nginx<span class="token operator">/</span>html<span class="token constant">COPY</span> <span class="token operator">--</span>from<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">/</span>app<span class="token operator">/</span>nginx<span class="token punctuation">.</span>conf <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>conf<span class="token punctuation">.</span>d<span class="token operator">/</span><span class="token keyword">default</span><span class="token punctuation">.</span>conf<span class="token constant">EXPOSE</span> <span class="token number">80</span><span class="token constant">CMD</span> nginx <span class="token operator">-</span>g <span class="token string">"daemon off;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>npm config set registry <a href="https://xxx/">https://xxx</a> —&gt; 设置镜像源地址</li><li>COPY –from=0 &lt;源路径&gt; &lt;目标路径&gt; —&gt; 从指定目录复制文件到指定路径</li><li>EXPOSE —&gt; 声明端口</li><li>使用nginx -g “daemon off;”启动nginx容器的原因<ul><li>背景：Docker 容器启动时，默认会把容器内部第一个进程，也就是pid=1的程序，作为docker容器是否正在运行的依据，如果 docker 容器pid=1的进程挂了，那么docker容器便会直接退出。</li><li>原因：nginx默认是以后台模式启动的，Docker未执行自定义的CMD之前，nginx的pid是1，执行到CMD之后，nginx就在后台运行，bash或sh脚本的pid变成了1。所以一旦执行完自定义CMD，nginx容器也就退出了。为了保持nginx的容器不退出，应该关闭nginx后台运行</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git分支建立及提交规范</title>
      <link href="/2021/08/20/Git%E5%88%86%E6%94%AF%E5%BB%BA%E7%AB%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/"/>
      <url>/2021/08/20/Git%E5%88%86%E6%94%AF%E5%BB%BA%E7%AB%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h1 id="分支建立规范"><a href="#分支建立规范" class="headerlink" title="分支建立规范"></a>分支建立规范</h1><h2 id="Git主要分支说明："><a href="#Git主要分支说明：" class="headerlink" title="Git主要分支说明："></a>Git主要分支说明：</h2><ul><li>Master<ul><li>主分支，维护发布产品的代码，存储了正式发布的历史</li></ul></li><li>Develop<ul><li>开发分支，作为功能的集成分支，维护开发中的代码，代码最终要合入Master分支</li></ul></li><li>Feature<ul><li>开自Develop分支，主要用于开发新功能，开发者根据自己负责模块自行维护，模块开发完成并自测通过后，代码合入Develop分支，新功能提交应该从不直接与master分支交互</li><li>命名规范为：feature/#…，每一个功能都应对应一个issue，…即为issue号</li><li>开发中的合并代码采用rebase方法（可以使分支的提交历史看上去更简洁，详细可见rebase与merge的对比），具体方法如下：<ul><li>新建feature分支：git checkout develop， git branch feature/#…， git checkout feature/#…</li><li>feature分支开发一段功能后：git add.， git commit -m “…”， git checkout develop， git pull origin develop， git checkout feature/#…， git rebase develop（代码依次为提交本次代码，添加提交信息，切换到develop分支并拉取最新分支，切换回feature分支，rebase develop分支）</li><li>在rebase develop分支时，可能会产生conflict，此时仍在rebase过程中，这时需要手动修改代码解决冲突，然后解决完该次冲突（rebase会对比每次未合入develop分支的提交，可能每次提交都会有冲突）后，再执行git add.，git rebase –continue命令，rebase完成后，即可push代码。</li><li>多个分支同时开发时，应当频繁地将测试后可运行的feature分支更新到dev分支，每次更新dev分支时通知其他开发人员，拉取最新的dev分支，将自己正在开发的分支rebase dev分支。这样可以避免较长时间没有进行rebase而导致的冲突较多问题。</li></ul></li></ul></li><li>Bugfix<ul><li>开自Develop分支或者Release分支，主要用于修复当前开发中的功能的已知bug；每一个已发现的bug都应该在gitlab中记录issue，并定期更新当前解决进展，如有有价值的思考或独特的解决方法，可以在issue中评论并在wiki的技术知识库或个人空间博文中进行记录。</li><li>命名规范为：bugfix/#…</li></ul></li><li>Hotfix<ul><li>开自Master分支，主要用于修复当前已发布版本的已知bug；解决bug时注意事项参考Bugfix。这是唯一可以直接从master分支fork出来的分支。修复完成，修改应该马上合并回master分支和develop分支（当前的发布分支），master分支应该用新的版本号打好Tag。为Bug修复使用专门分支，让团队可以处理掉问题而不用打断其它工作或是等待下一个发布循环。你可以把它想成是一个直接在master分支上处理的临时发布。</li><li>命名规范为：hotfix/#…</li></ul></li><li>Release<ul><li>开自Develop分支，主要用于发布版本，一旦develop分支上有了做一次发布（或者说快到了既定的发布日）的足够功能，就从develop分支上fork一个发布分支。新建的分支用于开始发布循环，所以从这个时间点开始之后新的功能不能再加到这个分支上 —— 这个分支只应该做Bug修复、文档生成和其它面向发布任务。一旦对外发布的工作都完成了，执行以下三个操作：</li><li>合并Release分支到Master；</li><li>给Master打上对应版本的标签tag；</li><li>Release回归，这些从新建发布分支以来的做的修改要合并回develop分支。</li><li>命名规范为：release/…，…即为版本号<h1 id="代码提交规范"><a href="#代码提交规范" class="headerlink" title="代码提交规范"></a>代码提交规范</h1></li></ul></li><li>建议经常用命令git status查看当前所在分支并用git log查看当前分支记录，每次提交前与checkout分支时都先查看当前分支再进行下一步操作</li><li>提交信息的说明，禁止无意义的日志语言，如modify，修改xxx文件等，任何修改都应该简要说明</li><li>Commit message格式 <type>: <subject> 注意冒号后面有空格</li><li>type 用于说明 commit 的类别，只允许使用下面7个标识<ul><li>feat：新功能（feature）</li><li>fix：修补bug</li><li>docs：文档（documentation）</li><li>style： 格式（不影响代码运行的变动）</li><li>refactor：重构（即不是新增功能，也不是修改bug的代码变动）</li><li>test：增加测试</li><li>chore：构建过程或辅助工具的变动</li></ul></li><li>subject<ul><li>subject是 commit 目的的简短描述，不超过50个字符，且结尾不加句号（.）。</li><li>提交分支合并请求之前的基础原则，如本地编译通过、手工或者自动化验收的测试通过</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于React三千问</title>
      <link href="/2021/07/08/%E5%85%B3%E4%BA%8EReact%E4%B8%89%E5%8D%83%E9%97%AE/"/>
      <url>/2021/07/08/%E5%85%B3%E4%BA%8EReact%E4%B8%89%E5%8D%83%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="如何理解React？有哪些新特性？"><a href="#如何理解React？有哪些新特性？" class="headerlink" title="如何理解React？有哪些新特性？"></a>如何理解React？有哪些新特性？</h1><h2 id="一、是什么"><a href="#一、是什么" class="headerlink" title="一、是什么"></a>一、是什么</h2><ul><li><p>React，用于构建用户界面的 JavaScript 库，提供了 UI 层面的解决方案</p></li><li><p>遵循组件设计模式、声明式编程范式和函数式编程概念，以使前端应用程序更高效</p></li><li><p>使用虚拟DOM来有效地操作真实DOM，遵循从高阶组件到低阶组件的单向数据流</p></li><li><p>帮助我们将界面分成了各个独立的小块，每一个块就是组件，这些组件之间可以组合、嵌套，构成整体页面</p></li><li><p>React 类组件使用一个名为 render() 的方法或者函数组件return，接收输入的数据并返回需要展示的内容</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">HelloMessage</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        Hello <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>  <span class="token operator">&lt;</span>HelloMessage name<span class="token operator">=</span><span class="token string">"Taylor"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'hello-example'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、特性"><a href="#二、特性" class="headerlink" title="二、特性"></a>二、特性</h2><p>React特性有很多，如：</p></li><li><p>JSX语法</p></li><li><p>单向数据绑定</p></li><li><p>虚拟DOM</p></li><li><p>声明式编程</p></li><li><p>Component</p></li></ul><p>着重介绍下声明式编程及Component</p><h3 id="声明式编程"><a href="#声明式编程" class="headerlink" title="声明式编程"></a>声明式编程</h3><ul><li><p>声明式编程是一种编程范式，它关注的是你要做什么，而不是如何做</p></li><li><p>它表达逻辑而不显式地定义步骤。这意味着我们需要根据逻辑的计算来声明要显示的组件</p></li><li><p>如实现一个标记的地图：</p></li><li><p>通过命令式创建地图、创建标记、以及在地图上添加的标记的步骤如下：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 创建地图</span><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token punctuation">.</span>map</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'map'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    zoom<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>    center<span class="token operator">:</span> <span class="token punctuation">&#123;</span>lat<span class="token punctuation">,</span>lng<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建标记</span><span class="token keyword">const</span> marker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token punctuation">.</span>marker</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    position<span class="token operator">:</span> <span class="token punctuation">&#123;</span>lat<span class="token punctuation">,</span> lng<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    title<span class="token operator">:</span> <span class="token string">'Hello Marker'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 地图上添加标记</span>marker<span class="token punctuation">.</span><span class="token function">setMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而用React实现上述功能则如下：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>Map zoom<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span> center<span class="token operator">=</span><span class="token punctuation">&#123;</span>lat<span class="token punctuation">,</span> lng<span class="token punctuation">&#125;</span><span class="token operator">></span>    <span class="token operator">&lt;</span>Marker position<span class="token operator">=</span><span class="token punctuation">&#123;</span>lat<span class="token punctuation">,</span> lng<span class="token punctuation">&#125;</span> title<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'Hello Marker'</span><span class="token punctuation">&#125;</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>Map<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>声明式编程方式使得React组件很容易使用，最终的代码简单易于维护</p></li></ul><h3 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h3><ul><li><p>在React 中，一切皆为组件。通常将应用程序的整个逻辑分解为小的单个部分。我们将每个单独的部分称为组件</p></li><li><p>组件可以是一个函数或者是一个类，接受数据输入，处理它并返回在UI中呈现的React元素</p></li><li><p>函数式组件（无状态组件）如下：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">Header</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span><span class="token punctuation">(</span>        <span class="token operator">&lt;</span>Jumbotron style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>backgroundColor<span class="token operator">:</span><span class="token string">'orange'</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>            <span class="token operator">&lt;</span>h1<span class="token operator">></span><span class="token constant">TODO</span> App<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>Jumbotron<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>类组件（有状态组件）如下：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Dashboard</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"dashboard"</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>ToDoForm <span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>ToDolist <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一个组件该有的特点如下：</p></li><li><p>可组合：个组件易于和其它组件一起使用，或者嵌套在另一个组件内部</p></li><li><p>可重用：每个组件都是具有独立功能的，它可以被使用在多个UI场景</p></li><li><p>可维护：每个小的组件仅仅包含自身的逻辑，更容易被理解和维护</p><h2 id="三、优势"><a href="#三、优势" class="headerlink" title="三、优势"></a>三、优势</h2></li><li><p>通过上面的初步了解，可以感受到React存在的优势：</p><ul><li>高效灵活</li><li>声明式的设计，简单使用</li><li>组件式开发，提高代码复用率</li><li>单向响应的数据流会比双向绑定的更安全，速度更快<h1 id="Real-DOM-与-Virtual-DOM-的区别？有何优缺点？"><a href="#Real-DOM-与-Virtual-DOM-的区别？有何优缺点？" class="headerlink" title="Real DOM 与 Virtual DOM 的区别？有何优缺点？"></a>Real DOM 与 Virtual DOM 的区别？有何优缺点？</h1><h2 id="一、是什么-1"><a href="#一、是什么-1" class="headerlink" title="一、是什么"></a>一、是什么</h2></li></ul></li><li><p>Real DOM，真实DOM， 意思为文档对象模型，是一个结构化文本的抽象，在页面渲染出的每一个结点都是一个真实DOM结构，如下：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello world<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>Virtual Dom，本质上是以 JavaScript 对象形式存在的对 DOM 的描述</p></li><li><p>创建虚拟DOM目的就是为了更好将虚拟的节点渲染到页面视图中，虚拟DOM对象的节点与真实DOM的属性一一照应</p></li><li><p>在React中，JSX是其一大特性，可以让你在JS中通过使用XML的方式去直接声明界面的DOM结构</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> vDom <span class="token operator">=</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello World<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span> <span class="token comment">// 创建h1标签，右边千万不能加引号</span><span class="token keyword">const</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span> <span class="token comment">// 找到&lt;div id="root">&lt;/div>节点</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>vDom<span class="token punctuation">,</span> root<span class="token punctuation">)</span> <span class="token comment">// 把创建的h1标签渲染到root节点上</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>上述中，ReactDOM.render()用于将你创建好的虚拟DOM节点插入到某个真实节点上，并渲染到页面上</p></li><li><p>JSX实际是一种语法糖，在使用过程中会被babel进行编译转化成JS代码，上述VDOM转化为如下：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> vDom <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>  <span class="token string">'h1'</span>，   <span class="token punctuation">&#123;</span> className<span class="token operator">:</span> <span class="token string">'hClass'</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token string">'hId'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token string">'hello world'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>可以看到，JSX就是为了简化直接调用React.createElement() 方法：</p></li><li><p>第一个参数是标签名，例如h1、span、table…</p></li><li><p>第二个参数是个对象，里面存着标签的一些属性，例如id、class等</p></li><li><p>第三个参数是节点中的文本</p></li><li><p>通过console.log(VDOM)，则能够得到虚拟VDOM消息</p></li><li><p>所以可以得到，JSX通过babel的方式转化成React.createElement执行，返回值是一个对象，也就是虚拟DOM</p></li></ul><h2 id="二、区别"><a href="#二、区别" class="headerlink" title="二、区别"></a>二、区别</h2><ul><li><p>两者的区别如下：</p><ul><li>虚拟DOM不会进行排版与重绘操作，而真实DOM会频繁重排与重绘</li><li>虚拟DOM的总损耗是“虚拟DOM增删改 + 真实DOM差异增删改+排版与重绘”，真实DOM的总损耗是“真实DOM完全增删改+排版与重绘”</li></ul></li><li><p>传统的原生api或jQuery去操作DOM时，浏览器会从构建DOM树开始从头到尾执行一遍流程</p></li><li><p>当你在一次操作时，需要更新10个DOM节点，浏览器没这么智能，收到第一个更新DOM请求后，并不知道后续还有9次更新操作，因此会马上执行流程，最终执行10次流程</p></li><li><p>而通过VNode，同样更新10个DOM节点，虚拟DOM不会立即操作DOM，而是将这10次更新的diff内容保存到本地的一个js对象中，最终将这个js对象一次性attach到DOM树上，避免大量的无谓计算</p></li></ul><h2 id="三、优缺点"><a href="#三、优缺点" class="headerlink" title="三、优缺点"></a>三、优缺点</h2><ul><li>真实DOM的优势：<ul><li>易用</li></ul></li><li>缺点：<ul><li>效率低，解析速度慢，内存占用量过高</li><li>性能差：频繁操作真实DOM，易于导致重绘与回流</li></ul></li><li>使用虚拟DOM的优势如下：<ul><li>简单方便：如果使用手动操作真实DOM来完成页面，繁琐又容易出错，在大规模应用下维护起来也很困难</li><li>性能方面：使用Virtual DOM，能够有效避免真实DOM数频繁更新，减少多次引起重绘与回流，提高性能</li><li>跨平台：React借助虚拟DOM， 带来了跨平台的能力，一套代码多端运行</li></ul></li><li>缺点：<ul><li>在一些性能要求极高的应用中虚拟 DOM 无法进行针对性的极致优化</li><li>首次渲染大量DOM时，由于多了一层虚拟DOM的计算，速度比正常稍慢<h1 id="React生命周期有哪些不同的阶段？每个阶段对应的方法是？"><a href="#React生命周期有哪些不同的阶段？每个阶段对应的方法是？" class="headerlink" title="React生命周期有哪些不同的阶段？每个阶段对应的方法是？"></a>React生命周期有哪些不同的阶段？每个阶段对应的方法是？</h1><h1 id="对State-和-Porps的理解？有何区别？"><a href="#对State-和-Porps的理解？有何区别？" class="headerlink" title="对State 和 Porps的理解？有何区别？"></a>对State 和 Porps的理解？有何区别？</h1><h1 id="super-和-super-props-有何区别？"><a href="#super-和-super-props-有何区别？" class="headerlink" title="super() 和 super(props) 有何区别？"></a>super() 和 super(props) 有何区别？</h1><h1 id="React中的setState执行机制？"><a href="#React中的setState执行机制？" class="headerlink" title="React中的setState执行机制？"></a>React中的setState执行机制？</h1><h1 id="对React的执行机制如何理解？"><a href="#对React的执行机制如何理解？" class="headerlink" title="对React的执行机制如何理解？"></a>对React的执行机制如何理解？</h1><h1 id="React事件绑定方式有哪些？有何区别？"><a href="#React事件绑定方式有哪些？有何区别？" class="headerlink" title="React事件绑定方式有哪些？有何区别？"></a>React事件绑定方式有哪些？有何区别？</h1><h1 id="React构建组件的方式有哪些？有何区别？"><a href="#React构建组件的方式有哪些？有何区别？" class="headerlink" title="React构建组件的方式有哪些？有何区别？"></a>React构建组件的方式有哪些？有何区别？</h1><h1 id="React中组件通信方式有哪些？"><a href="#React中组件通信方式有哪些？" class="headerlink" title="React中组件通信方式有哪些？"></a>React中组件通信方式有哪些？</h1><h1 id="React中的key有什么作用？"><a href="#React中的key有什么作用？" class="headerlink" title="React中的key有什么作用？"></a>React中的key有什么作用？</h1><h1 id="对React-refs的理解？有何应用场景？"><a href="#对React-refs的理解？有何应用场景？" class="headerlink" title="对React refs的理解？有何应用场景？"></a>对React refs的理解？有何应用场景？</h1><h1 id="对React中类组件和函数组件的理解？有何区别？"><a href="#对React中类组件和函数组件的理解？有何区别？" class="headerlink" title="对React中类组件和函数组件的理解？有何区别？"></a>对React中类组件和函数组件的理解？有何区别？</h1></li></ul></li></ul><p><a href="#">来源：JS每日一题</a></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6的两个特性：Class类和类的继承extens</title>
      <link href="/2021/06/25/ES6%E7%9A%84%E4%B8%A4%E4%B8%AA%E7%89%B9%E6%80%A7%EF%BC%9AClass%E7%B1%BB%E5%92%8C%E7%B1%BB%E7%9A%84%E7%BB%A7%E6%89%BFextens/"/>
      <url>/2021/06/25/ES6%E7%9A%84%E4%B8%A4%E4%B8%AA%E7%89%B9%E6%80%A7%EF%BC%9AClass%E7%B1%BB%E5%92%8C%E7%B1%BB%E7%9A%84%E7%BB%A7%E6%89%BFextens/</url>
      
        <content type="html"><![CDATA[<h1 id="Class类"><a href="#Class类" class="headerlink" title="Class类"></a>Class类</h1><ul><li><p>ES6引入Class(类)的概念，让类的写法更接近传统语言的写法，ES6的类可以看作是语法糖，它的绝大部分功能，ES5都可以做得到，新的class写法只是让对象原型的写法更加清晰、更像面向对象编程的语法</p></li><li><p>对比ES5和ES6创建class的写法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ================= ES5 start =================</span><span class="token comment">// ES5 -> 构造函数、原型方法、静态属性</span><span class="token comment">// 构造函数</span><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 原型方法</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 静态属性</span>Person<span class="token punctuation">.</span>info <span class="token operator">=</span> <span class="token string">"Person的静态属性"</span><span class="token punctuation">;</span><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"Damao"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Damao</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Person的静态属性</span><span class="token comment">// ================= ES5 end =================</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ================= ES6 start =================</span><span class="token comment">// ES6 -> 构造函数、原型方法、静态属性</span><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 构造函数</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 原型方法（无需加function）</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 静态属性</span>Person<span class="token punctuation">.</span>info <span class="token operator">=</span> <span class="token string">"Person的静态属性"</span><span class="token punctuation">;</span><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"Damao"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Damao</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Person的静态属性</span><span class="token comment">// ================= ES6 end =================</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>ES6 class中，用static修饰即为类的静态方法（可以直接用类名访问），即在这个类（构造函数）对象本身上的方法，加上static表示该方法不会被实例继承</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span><span class="token keyword">static</span> <span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"this is static method"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span><span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// this is static method</span><span class="token comment">//</span><span class="token comment">// 静态方法不可以通过实例来即成，即不能通过实例调用，如</span><span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TypeError: person.classMethod is not a function</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="类的继承extends"><a href="#类的继承extends" class="headerlink" title="类的继承extends"></a>类的继承extends</h1></li><li><p>Class可以通过extends关键字来实现继承，而ES5则需要通过修改原型链来实现继承</p></li><li><p>对比ES5和ES6继承的写法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ================= ES5 start =================</span><span class="token comment">// ES5 -> 利用原型让一个引用类型继承另一个引用类型的属性和方法，即让原型对象等于另一个类型的实例</span><span class="token comment">// 原型继承缺点：父类公有和私有属性方法都为子类公有</span><span class="token comment">// </span><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"Damao"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">SuperPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>superName <span class="token operator">=</span> <span class="token string">"Damao2250"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 继承 Person</span><span class="token class-name">SuperPerson</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SuperPerson</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> SuperPerson<span class="token punctuation">;</span><span class="token class-name">SuperPerson</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getSuperName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>superName<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> superPerson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>superPerson<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Damao</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>superPerson<span class="token punctuation">.</span><span class="token function">getSuperName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Damao2250</span><span class="token comment">// ================= ES5 end =================</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ================= ES6 start =================</span><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 构造函数</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 原型方法（无需加function）</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">SuperPerson</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> superName</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 在继承的构造函数中，必须调用一次super方法，它表示构造函数的继承；必须在this前调用</span>  <span class="token comment">// super()是将父类中的this对象继承给子类</span>  <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>superName <span class="token operator">=</span> superName<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">superGetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// super 直接调用父级的原型方法</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>superName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperPerson</span><span class="token punctuation">(</span><span class="token string">"Damao"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"Damao2250"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Damao</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">superGetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Damao  Damao2250</span><span class="token comment">// ================= ES6 end =================</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
            <tag> Class </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一道基础Vue生命周期的面试题</title>
      <link href="/2021/05/11/%E4%B8%80%E9%81%93%E5%9F%BA%E7%A1%80Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
      <url>/2021/05/11/%E4%B8%80%E9%81%93%E5%9F%BA%E7%A1%80Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="根据Vue的生命周期说出console打印出来的值"><a href="#根据Vue的生命周期说出console打印出来的值" class="headerlink" title="根据Vue的生命周期说出console打印出来的值"></a>根据Vue的生命周期说出console打印出来的值</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    num1<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    num2<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>num1 <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>num2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"beforeCreated"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// undefined    (页面载入触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"created"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 3     (页面载入触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">beforeMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"beforeMount"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3     (页面载入触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"mounted"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3     (页面载入触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">beforeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"beforeUpdate"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3     (有数据更新时才会触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">updated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"updated"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3     (有数据更新时才会触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">beforeDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"beforeDestroy"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3     (离开组件时才会触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">destroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"destroyed"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3    (离开组件时才会触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><ul><li>父子组件生命周期如何执行<ul><li>父beforeCreate -&gt; 父created -&gt; 父beforeMount -&gt;</li><li>子beforeCreate -&gt; 子created -&gt; 子beforeMount -&gt; 子mounted -&gt;</li><li>父mounted -&gt;</li><li>父beforeUpdate -&gt; 子beforeUpdate -&gt; 子updated -&gt; 父updated -&gt;</li><li>父beforeDestroy-&gt; 子beforeDestroy -&gt; 子destroyed -&gt; 父destroyed</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组的一些操作技巧</title>
      <link href="/2021/05/08/%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/"/>
      <url>/2021/05/08/%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="快速复制数组"><a href="#快速复制数组" class="headerlink" title="快速复制数组"></a>快速复制数组</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> sameArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"arr: "</span><span class="token punctuation">,</span> arr<span class="token punctuation">,</span> <span class="token string">"\n"</span><span class="token punctuation">,</span> <span class="token string">"sameArr: "</span><span class="token punctuation">,</span> sameArr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// arr:[1, 2, 3, 4]</span><span class="token comment">// sameArr:[1, 2, 3, 4]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="快速合并数组"><a href="#快速合并数组" class="headerlink" title="快速合并数组"></a>快速合并数组</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> mergedArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">,</span> <span class="token operator">...</span>arr3<span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"mergedArr: "</span><span class="token punctuation">,</span> mergedArr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// mergedArr:[1, 2, 3, 4, 5, 6, 7, 8, 9]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="快速过滤掉相同元素"><a href="#快速过滤掉相同元素" class="headerlink" title="快速过滤掉相同元素"></a>快速过滤掉相同元素</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> uniqueArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"uniqueArr: "</span><span class="token punctuation">,</span> uniqueArr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// uniqueArr: [1, 2, 3, 4, 5, 8, 9, 6]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><ul><li><p>ES6 之 new Set()</p><ul><li>Set 是 es6 新增的数据结构，似于数组，但它的一大特性就是所有元素都是唯一的，没有重复的值，我们一般称为集合。<ul><li>Set 对象方法</li><li>add 添加某个值，返回 Set 对象本身</li><li>clear 删除所有的键/值对，没有返回值</li><li>delete 删除某个键，返回 true，如果删除失败，返回 false</li><li>forEach 对每个元素执行指定操作</li><li>has 返回一个布尔值，表示某个键是否在当前 Set 对象之中<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// Array 转 Set</span><span class="token keyword">var</span> mySet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"value1"</span><span class="token punctuation">,</span> <span class="token string">"value2"</span><span class="token punctuation">,</span> <span class="token string">"value3"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 用...操作符，将 Set 转 Array</span><span class="token keyword">var</span> myArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>mySet<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// String 转 Set</span><span class="token keyword">var</span> mySet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Set(4) &#123;"h", "e", "l", "o"&#125;</span><span class="token comment">// 注：Set 中 toString 方法是不能将 Set 转换成 String</span>Set 对象作用<span class="token comment">// 数组去重</span><span class="token keyword">var</span> mySet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token operator">...</span>mySet<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3, 4]</span><span class="token comment">// 并集</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> union <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123;1, 2, 3, 4&#125;</span><span class="token comment">// 交集</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> intersect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span> b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123;2, 3&#125;</span><span class="token comment">// 差集</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> difference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span>b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123;1&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="过滤符合条件的数组项"><a href="#过滤符合条件的数组项" class="headerlink" title="过滤符合条件的数组项"></a>过滤符合条件的数组项</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token string">"apple"</span><span class="token punctuation">,</span>  <span class="token string">"banana"</span><span class="token punctuation">,</span>  <span class="token string">"pear"</span><span class="token punctuation">,</span>  <span class="token string">"watermelon"</span><span class="token punctuation">,</span>  <span class="token string">"strawberry"</span><span class="token punctuation">,</span>  <span class="token string">"arbutus"</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> hFruits <span class="token operator">=</span> fruits<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fruit</span><span class="token punctuation">)</span> <span class="token operator">=></span> fruit<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"hFruits: "</span><span class="token punctuation">,</span> hFruits<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// hFruits: ["apple", "arbutus"]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="检查数组中的某些项目是否匹配条件"><a href="#检查数组中的某些项目是否匹配条件" class="headerlink" title="检查数组中的某些项目是否匹配条件"></a>检查数组中的某些项目是否匹配条件</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">isEven</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span>isEven<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span>isEven<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="数组的交集"><a href="#数组的交集" class="headerlink" title="数组的交集"></a>数组的交集</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> intersection <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=></span> arr2<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>intersection<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [4, 5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="筛选数组的差异部分"><a href="#筛选数组的差异部分" class="headerlink" title="筛选数组的差异部分"></a>筛选数组的差异部分</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> difference <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span>arr2<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> allDifference <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token operator">...</span>arr1<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span>arr2<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token operator">...</span>arr2<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span>arr1<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>difference<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>allDifference<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3, 6, 7, 8, 9]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="对数组中的项目进行排序"><a href="#对数组中的项目进行排序" class="headerlink" title="对数组中的项目进行排序"></a>对数组中的项目进行排序</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 升序</span><span class="token keyword">const</span> asc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>numbers<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>asc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [9, 16, 20, 23, 52, 99]</span><span class="token comment">// 降序</span><span class="token keyword">const</span> desc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>numbers<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> b <span class="token operator">-</span> a<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [99, 52, 23, 20, 16, 9]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Tips-1"><a href="#Tips-1" class="headerlink" title="Tips"></a>Tips</h1><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2></li></ul></li></ul></li><li><p>实现原理</p><ul><li>数组中有 n 个数，比较每相邻两个数，如果前者大于后者，就把两个数交换位置；这样一来，第一轮就可以选出一个最大的数放在最后面；那么经过 n-1（数组的 length - 1） 轮，就完成了所有数的排序。<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/sort%E6%8E%92%E5%BA%8F.gif" alt="sort排序"></li></ul></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> max <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> max<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 声明一个变量，作为标志位</span>    <span class="token keyword">var</span> done <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> max <span class="token operator">-</span> j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>        done <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> arr<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">bubbleSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 1、外层 for 循环控制循环次数</span><span class="token comment">// 2、内层 for 循环进行两数交换，找每次的最大数，排到最后</span><span class="token comment">// 3、设置一个标志位，减少不必要的循环</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个简单的柯里化函数示例</title>
      <link href="/2021/04/19/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%9F%AF%E9%87%8C%E5%8C%96%E5%87%BD%E6%95%B0%E7%A4%BA%E4%BE%8B/"/>
      <url>/2021/04/19/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%9F%AF%E9%87%8C%E5%8C%96%E5%87%BD%E6%95%B0%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是柯里化"><a href="#什么是柯里化" class="headerlink" title="什么是柯里化"></a>什么是柯里化</h1><ul><li>柯里化就是把一个多参数的函数转换为一系列只带单个参数的函数<h2 id="未柯里化前的函数"><a href="#未柯里化前的函数" class="headerlink" title="未柯里化前的函数"></a>未柯里化前的函数</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> a <span class="token operator">*</span> b <span class="token operator">*</span> c<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">1</span>，<span class="token number">2</span>，<span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="柯里化后的函数"><a href="#柯里化后的函数" class="headerlink" title="柯里化后的函数"></a>柯里化后的函数</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token parameter">b</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token parameter">c</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> a <span class="token operator">*</span> b <span class="token operator">*</span> c<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="柯里化过程"><a href="#柯里化过程" class="headerlink" title="柯里化过程"></a>柯里化过程</h2></li><li>将 <code>multiply(1，2，3)</code> 函数调用转换为 <code>multiply(1)(2)(3)</code> 调用</li><li>拆分<code>multiply(1)(2)(3)</code>便于理解<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> multiply1 <span class="token operator">=</span> <span class="token function">multiplytiply</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> multiply2 <span class="token operator">=</span> <span class="token function">multiply1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> multiply3 <span class="token operator">=</span> <span class="token function">multiply2</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>multiply3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令速查表</title>
      <link href="/2021/04/15/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
      <url>/2021/04/15/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><table><thead><tr><th align="left">Tips</th><th></th></tr></thead><tbody><tr><td align="left">master：</td><td>默认开发分支</td></tr><tr><td align="left">origin：</td><td>默认远程版本库</td></tr></tbody></table><h1 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h1><table><thead><tr><th align="left">创建版本库</th><th></th></tr></thead><tbody><tr><td align="left">$ git clone <url></td><td>#克隆远程版本库</td></tr><tr><td align="left">$ git init</td><td>#初始化本地版本库</td></tr></tbody></table><h1 id="修改和提交"><a href="#修改和提交" class="headerlink" title="修改和提交"></a>修改和提交</h1><table><thead><tr><th align="left">修改和提交</th><th></th></tr></thead><tbody><tr><td align="left">$ git status</td><td>#查看当前修改状况</td></tr><tr><td align="left">$ git diff</td><td>#查看变更的内容</td></tr><tr><td align="left">$ git add .</td><td>#把所有修改的文件添加到缓存（跟踪文件）</td></tr><tr><td align="left">$ git add <file></td><td>#把指定的文件添加到缓存</td></tr><tr><td align="left">$ git mv <old_file> <new_file></td><td>#修改文件名</td></tr><tr><td align="left">$ git rm <file></td><td>#删除文件</td></tr><tr><td align="left">$ git rm –cached <file></td><td>#停止跟踪文件但不删除</td></tr><tr><td align="left">$ git commit -m “message”</td><td>#提交所有更新过的文件</td></tr><tr><td align="left">$ git commit –amend</td><td>#修改最后一次提交</td></tr></tbody></table><h1 id="查看提交历史"><a href="#查看提交历史" class="headerlink" title="查看提交历史"></a>查看提交历史</h1><table><thead><tr><th align="left">查看提交历史</th><th></th></tr></thead><tbody><tr><td align="left">$ git log</td><td>#查看提交历史</td></tr><tr><td align="left">$ git log -p <file></td><td>#查看指定文件提交历史</td></tr><tr><td align="left">$ git blame <file></td><td>#以列表的方式查看指定文件提交历史</td></tr></tbody></table><h1 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h1><table><thead><tr><th align="left">撤销</th><th></th></tr></thead><tbody><tr><td align="left">$ git reset –hard HEAD</td><td>#撤销工作目录中所有未提交文件的修改内容</td></tr><tr><td align="left">$ git checkout HEAD <file></td><td>#撤销指定未提交文件的修改内容</td></tr><tr><td align="left">$ git revert <commit></td><td>#撤销指定的提交</td></tr></tbody></table><h1 id="分支与标签"><a href="#分支与标签" class="headerlink" title="分支与标签"></a>分支与标签</h1><table><thead><tr><th align="left">分支与标签</th><th></th></tr></thead><tbody><tr><td align="left">$ git branch</td><td>#显示所有本地分支</td></tr><tr><td align="left">$ git branch -r</td><td>#显示所有远程分支</td></tr><tr><td align="left">$ git branch -a</td><td>#显示所有本地和远程分支</td></tr><tr><td align="left">$ git checkout &lt;branch/tag&gt;</td><td>#切换到指定分支或标签</td></tr><tr><td align="left">$ git branch <new_branch></td><td>#创建新分支</td></tr><tr><td align="left">$ git checkout -b <new_branch></td><td>#创建并切换到新分支</td></tr><tr><td align="left">$ git branch -d <branch></td><td>#删除本地分支</td></tr><tr><td align="left">$ git tag</td><td>#显示所有本地标签</td></tr><tr><td align="left">$ git tag <tagname></td><td>#基于最新提交创建标签</td></tr><tr><td align="left">$ git tag -d <tagname></td><td>#删除标签</td></tr></tbody></table><h1 id="合并与衍合"><a href="#合并与衍合" class="headerlink" title="合并与衍合"></a>合并与衍合</h1><table><thead><tr><th align="left">合并与衍合</th><th></th></tr></thead><tbody><tr><td align="left">$ git merge <branch></td><td>#合并指定分支到当前分支</td></tr><tr><td align="left">$ git rebase <branch></td><td>#衍合指定分支到当前分支</td></tr></tbody></table><h1 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h1><table><thead><tr><th align="left">远程操作</th><th></th></tr></thead><tbody><tr><td align="left">$ git remote -v</td><td>#查看远程版本库信息</td></tr><tr><td align="left">$ git remote show <remote></td><td>#查看指定远程版本库信息</td></tr><tr><td align="left">$ git remote add <remote> <url></td><td>#添加远程版本库</td></tr><tr><td align="left">$ git fetch <remote></td><td>#从远程库获取代码</td></tr><tr><td align="left">$ git pull <remote> <branch></td><td>#从远程库拉去代码并快速合并</td></tr><tr><td align="left">$ git push <remote> <branch></td><td>#上传代码到远程库并快速合并</td></tr><tr><td align="left">$ git push <remote> -d &lt;branch/tag&gt;</td><td>#删除远程分支或标签</td></tr><tr><td align="left">$ git push –tags</td><td>#上传所有标签</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Element-Ui封装一个滑动组件</title>
      <link href="/2021/04/08/%E7%94%A8Element-Ui%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%AA%E6%BB%91%E5%8A%A8%E7%BB%84%E4%BB%B6/"/>
      <url>/2021/04/08/%E7%94%A8Element-Ui%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%AA%E6%BB%91%E5%8A%A8%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="基于Element-Ui的“Slider滑块”组件封装一个前端滑动滑动验证组件"><a href="#基于Element-Ui的“Slider滑块”组件封装一个前端滑动滑动验证组件" class="headerlink" title="基于Element-Ui的“Slider滑块”组件封装一个前端滑动滑动验证组件"></a>基于Element-Ui的“Slider滑块”组件封装一个前端滑动滑动验证组件</h2><ul><li>主要用于登录验证</li><li>纯前端验证（滑着过瘾）目前无法与后端进行校验</li><li>封装还可以优化</li><li>直接看代码吧<h3 id="slider组件"><a href="#slider组件" class="headerlink" title="slider组件"></a>slider组件</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// slider/index.vue'</span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"bar"</span> ref<span class="token operator">=</span><span class="token string">"bar"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>slider      <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"slider"</span>      ref<span class="token operator">=</span><span class="token string">"slider"</span>      v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"value"</span>      <span class="token operator">:</span>show<span class="token operator">-</span>tooltip<span class="token operator">=</span><span class="token string">"false"</span>      @change<span class="token operator">=</span><span class="token string">"sliderChange"</span>      <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"sliderDisabled"</span>    <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>slider<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"slider-text-before"</span> ref<span class="token operator">=</span><span class="token string">"barText"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"noReset?'run run-no-slider':'run'"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"!isSuccess"</span><span class="token operator">></span>拖动滑块验证<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>span v<span class="token operator">-</span><span class="token keyword">else</span> style<span class="token operator">=</span><span class="token string">"color:#fff;"</span><span class="token operator">></span>验证通过<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">"slider"</span><span class="token punctuation">,</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    reset<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    noReset<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      value<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      isSuccess<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      sliderDisabled<span class="token operator">:</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function-variable function">reset</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sliderReset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">noReset</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>bar<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"no-slider"</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>bar<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"no-slider"</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">value</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">,</span>val<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>slider<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button1<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button<span class="token punctuation">)</span>    <span class="token comment">// this.$refs.slider.$refs.button1.$refs.button.style = ""</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>slider<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button1<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button<span class="token punctuation">.</span>lastChild<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span>      <span class="token string">"&lt;i class='el-icon-d-arrow-right icon-arrow-right'>&lt;/i>"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">sliderChange</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">===</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sliderSucceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sliderReset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">sliderSucceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>isSuccess <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>slider<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button1<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button<span class="token punctuation">.</span>lastChild<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span>        <span class="token string">"&lt;i class='el-icon-success icon-success'>&lt;/i>"</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>sliderDisabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">sliderReset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>isSuccess <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>sliderDisabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"update:reset"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>slider<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button1<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button<span class="token punctuation">.</span>lastChild<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span>        <span class="token string">"&lt;i class='el-icon-d-arrow-right icon-arrow-right'>&lt;/i>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">"scss"</span> scoped<span class="token operator">></span>$color<span class="token operator">:</span> #<span class="token number">67</span>c23a<span class="token punctuation">;</span><span class="token comment">// $color: #409EFF;</span>$slider_button_width<span class="token operator">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span>$slider_button_height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span><span class="token punctuation">.</span>bar <span class="token punctuation">&#123;</span>  position<span class="token operator">:</span> relative<span class="token punctuation">;</span>  width<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #e4e7ed<span class="token punctuation">;</span>  border<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>  <span class="token punctuation">.</span>slider<span class="token operator">-</span>text<span class="token operator">-</span>before <span class="token punctuation">&#123;</span>    position<span class="token operator">:</span> absolute<span class="token punctuation">;</span>    left<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    top<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    transform<span class="token operator">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>    letter<span class="token operator">-</span>spacing<span class="token operator">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>    user<span class="token operator">-</span>select<span class="token operator">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">.</span>run <span class="token punctuation">&#123;</span>      padding<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">30</span>px<span class="token punctuation">;</span>      color<span class="token operator">:</span> transparent<span class="token punctuation">;</span>      <span class="token operator">-</span>moz<span class="token operator">-</span>user<span class="token operator">-</span>select<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>user<span class="token operator">-</span>select<span class="token operator">:</span> none<span class="token punctuation">;</span>      user<span class="token operator">-</span>select<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token operator">-</span>o<span class="token operator">-</span>user<span class="token operator">-</span>select<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token operator">-</span>ms<span class="token operator">-</span>user<span class="token operator">-</span>select<span class="token operator">:</span> none<span class="token punctuation">;</span>      background<span class="token operator">:</span> <span class="token operator">-</span>webkit<span class="token operator">-</span><span class="token function">gradient</span><span class="token punctuation">(</span>        linear<span class="token punctuation">,</span>        left top<span class="token punctuation">,</span>        right top<span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> #<span class="token number">333</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">,</span> #<span class="token number">333</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> #fff<span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">,</span> #<span class="token number">333</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> #<span class="token number">333</span><span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>background<span class="token operator">-</span>clip<span class="token operator">:</span> text<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>text<span class="token operator">-</span>fill<span class="token operator">-</span>color<span class="token operator">:</span> transparent<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>text<span class="token operator">-</span>size<span class="token operator">-</span>adjust<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">:</span> slidetounlock <span class="token number">3</span>s infinite<span class="token punctuation">;</span>      animation<span class="token operator">:</span> slidetounlock <span class="token number">3</span>s infinite<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>run<span class="token operator">-</span>no<span class="token operator">-</span>slider<span class="token punctuation">&#123;</span>      background<span class="token operator">:</span> <span class="token operator">-</span>webkit<span class="token operator">-</span><span class="token function">gradient</span><span class="token punctuation">(</span>        linear<span class="token punctuation">,</span>        left top<span class="token punctuation">,</span>        right top<span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> #<span class="token constant">F56C6C</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">,</span> #<span class="token constant">F56C6C</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> #fff<span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">,</span> #<span class="token constant">F56C6C</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> #<span class="token constant">F56C6C</span><span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>background<span class="token operator">-</span>clip<span class="token operator">:</span> text<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>text<span class="token operator">-</span>fill<span class="token operator">-</span>color<span class="token operator">:</span> transparent<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>text<span class="token operator">-</span>size<span class="token operator">-</span>adjust<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">:</span> slidetounlock <span class="token number">3</span>s infinite<span class="token punctuation">;</span>      animation<span class="token operator">:</span> slidetounlock <span class="token number">3</span>s infinite<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token punctuation">.</span>slider<span class="token operator">-</span>text<span class="token operator">-</span>after <span class="token punctuation">&#123;</span>    position<span class="token operator">:</span> absolute<span class="token punctuation">;</span>    left<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    top<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    transform<span class="token operator">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    z<span class="token operator">-</span>index<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">;</span>    color<span class="token operator">:</span> #fff<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token punctuation">.</span>slider <span class="token punctuation">&#123;</span>    width<span class="token operator">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">%</span> <span class="token operator">-</span> #<span class="token punctuation">&#123;</span>$slider_button_width<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__runway <span class="token punctuation">&#123;</span>      margin<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__bar <span class="token punctuation">&#123;</span>      height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>      background<span class="token operator">-</span>color<span class="token operator">:</span> $color<span class="token punctuation">;</span>      border<span class="token operator">-</span>top<span class="token operator">-</span>left<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>      border<span class="token operator">-</span>bottom<span class="token operator">-</span>left<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__runway <span class="token punctuation">&#123;</span>      height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__button<span class="token operator">-</span>wrapper <span class="token punctuation">&#123;</span>      top<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      width<span class="token operator">:</span> $slider_button_width<span class="token punctuation">;</span>      height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>      margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token punctuation">(</span>$slider_button_width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">:</span>hover <span class="token punctuation">&#123;</span>        transform<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__button <span class="token punctuation">&#123;</span>      width<span class="token operator">:</span> $slider_button_width<span class="token punctuation">;</span>      height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>      border<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      border<span class="token operator">-</span>color<span class="token operator">:</span> #dcdfe6<span class="token punctuation">;</span>      <span class="token operator">:</span>hover <span class="token punctuation">&#123;</span>        transform<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__button<span class="token punctuation">.</span>dragging<span class="token punctuation">,</span>    <span class="token punctuation">.</span>el<span class="token operator">-</span>slider__button<span class="token punctuation">.</span>hover<span class="token punctuation">,</span>    <span class="token punctuation">.</span>el<span class="token operator">-</span>slider__button<span class="token operator">:</span>hover <span class="token punctuation">&#123;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> none <span class="token operator">!</span>important<span class="token punctuation">;</span>      transform<span class="token operator">:</span> none <span class="token operator">!</span>important<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__runway<span class="token punctuation">.</span>disabled <span class="token punctuation">.</span>el<span class="token operator">-</span>slider__button<span class="token operator">:</span>hover <span class="token punctuation">&#123;</span>      cursor<span class="token operator">:</span> grab <span class="token operator">!</span>important<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>icon<span class="token operator">-</span>arrow<span class="token operator">-</span>right <span class="token punctuation">&#123;</span>      line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token punctuation">(</span>$slider_button_height <span class="token operator">-</span> <span class="token number">4</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>      font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>      color<span class="token operator">:</span> #<span class="token number">4</span>c4c4c<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>icon<span class="token operator">-</span>success <span class="token punctuation">&#123;</span>      line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token punctuation">(</span>$slider_button_height <span class="token operator">-</span> <span class="token number">4</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>      font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>      color<span class="token operator">:</span> $color<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>@<span class="token operator">-</span>webkit<span class="token operator">-</span>keyframes slidetounlock <span class="token punctuation">&#123;</span>  from <span class="token punctuation">&#123;</span>    background<span class="token operator">-</span>position<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">70</span>px <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  to <span class="token punctuation">&#123;</span>    background<span class="token operator">-</span>position<span class="token operator">:</span> <span class="token number">80</span>px <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>no<span class="token operator">-</span>slider<span class="token punctuation">&#123;</span>  animation<span class="token operator">:</span> shake <span class="token number">800</span>ms ease<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>out<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@keyframes shake <span class="token punctuation">&#123;</span>    <span class="token number">10</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span> transform<span class="token operator">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span>px<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token number">20</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span> transform<span class="token operator">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">2</span>px<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token number">30</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span> transform<span class="token operator">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span>px<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token number">40</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span> transform<span class="token operator">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">4</span>px<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token number">50</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span> transform<span class="token operator">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span>px<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入</span><span class="token keyword">import</span> slider <span class="token keyword">from</span> <span class="token string">'./slider'</span><span class="token comment">// 使用</span> <span class="token operator">&lt;</span>slider v<span class="token operator">-</span>bind<span class="token operator">:</span>reset<span class="token punctuation">.</span>sync<span class="token operator">=</span><span class="token string">"isResetSlider"</span> <span class="token operator">:</span>noReset<span class="token operator">=</span><span class="token string">"isNoReset"</span> @value<span class="token operator">=</span><span class="token string">"sliderValue"</span> @success<span class="token operator">=</span><span class="token string">"sliderSuccess"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>slider<span class="token operator">></span>components<span class="token operator">:</span><span class="token punctuation">&#123;</span>  slider<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    isResetSlider<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    isSeccess<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    sliderVal<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    isNoReset<span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 滑动验证</span>  <span class="token function">sliderSuccess</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>isSeccess <span class="token operator">=</span> val  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">sliderValue</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>sliderVal <span class="token operator">=</span> val  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">submitForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sliderVal <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>isNoReset <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>isNoReset <span class="token operator">=</span> <span class="token boolean">false</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">900</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isSeccess<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"submit"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>isResetSlider <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>isSeccess <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"请滑动滑块验证"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>效果截图</li><li>滑动验证-未滑动</li></ul><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E6%BB%91%E5%8A%A8%E9%AA%8C%E8%AF%81-%E6%9C%AA%E6%BB%91%E5%8A%A8.jpg" alt="滑动验证-未滑动"><br>滑动验证-未滑动</p><ul><li>滑动验证-滑动中</li></ul><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E6%BB%91%E5%8A%A8%E9%AA%8C%E8%AF%81-%E6%BB%91%E5%8A%A8%E4%B8%AD.jpg" alt="滑动验证-滑动中"><br>滑动验证-滑动中</p><ul><li>滑动验证-滑动成功</li></ul><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E6%BB%91%E5%8A%A8%E9%AA%8C%E8%AF%81-%E6%BB%91%E5%8A%A8%E6%88%90%E5%8A%9F.jpg" alt="滑动验证-滑动成功"><br>滑动验证-滑动成功</p><ul><li>滑动验证GIF</li></ul><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E6%BB%91%E5%8A%A8%E9%AA%8C%E8%AF%81-DIF.gif" alt="滑动验证GIF"><br>滑动验证GIF</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Element-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动端1px问题</title>
      <link href="/2021/04/08/%E7%A7%BB%E5%8A%A8%E7%AB%AF1px%E9%97%AE%E9%A2%98/"/>
      <url>/2021/04/08/%E7%A7%BB%E5%8A%A8%E7%AB%AF1px%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="为什么会出现？"><a href="#为什么会出现？" class="headerlink" title="为什么会出现？"></a>为什么会出现？</h1><ul><li><p>首先了解两个像素：设备的 物理像素[设备像素] &amp; 虚拟像素[CSS像素] &amp; 逻辑像素[设备独立像素]</p><ul><li>物理像素：移动设备出厂时，不同设备的屏幕自带的不同屏幕像素，也称硬件像素；</li><li>虚拟像素：即css中记录的像素</li><li>逻辑像素：计算机坐标系统中的一个点，是由程序使用的虚拟像素(比如: CSS 像素)，这个点没有固定大小，越小越清晰，可由相关系统转换为物理像素</li></ul></li><li><p>devicePixelRatio（DPR）：反应css中的像素与设备的像素比</p><ul><li>DPR为设备像素（物理像素）和设备独立像素（逻辑像素）的比例</li><li>DPR = 物理像素 / 独立设备像素</li></ul></li><li><p>1px变粗的原因：</p><ul><li>viewport的设置和屏幕物理分辨率是按比例而不是相同的. 移动端window对象有个devicePixelRatio属性,它表示设备物理像素和css像素的比例, 在retina屏的iphone手机上, 这个值为2或3,css里写的1px长度映射到物理像素上就有2px或3px那么长<h1 id="如何解决（最佳解决方案）？"><a href="#如何解决（最佳解决方案）？" class="headerlink" title="如何解决（最佳解决方案）？"></a>如何解决（最佳解决方案）？</h1></li></ul></li><li><p>transform: scale(0.5) 方案</p><ul><li>设置height: 1px，根据媒体查询结合transform缩放为相应尺寸<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span>1px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span>#000<span class="token punctuation">;</span>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-transform-origin</span><span class="token punctuation">:</span>0 0<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>用::after和::befor,设置border-bottom：1px solid #000,然后在缩放-webkit-transform: scaleY(0.5);可以实现两根边线的需求<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div::after</span><span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span>    <span class="token property">border-bottom</span><span class="token punctuation">:</span>1px solid #000<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>用::after设置border：1px solid #000; width:200%; height:200%,然后再缩放scaleY(0.5); 优点可以实现圆角，京东就是这么实现的，缺点是按钮添加active比较麻烦<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.div::after</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 200%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 200%<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #bfbfbf<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">,</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">,</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-transform-origin</span><span class="token punctuation">:</span> top left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>媒体查询 + transfrom<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 2倍屏 */</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">-webkit-min-device-pixel-ratio</span><span class="token punctuation">:</span> 2.0<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.border-bottom::after</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 3倍屏 */</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">-webkit-min-device-pixel-ratio</span><span class="token punctuation">:</span> 3.0<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.border-bottom::after</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.33<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.33<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 移动端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 移动端1px </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何快速给类、函数和变量命名</title>
      <link href="/2021/03/26/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E7%BB%99%E7%B1%BB%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D/"/>
      <url>/2021/03/26/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E7%BB%99%E7%B1%BB%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="A-HC-LC-命名法"><a href="#A-HC-LC-命名法" class="headerlink" title="A/HC/LC 命名法"></a>A/HC/LC 命名法</h1><h2 id="P-A-HC-LC是什么"><a href="#P-A-HC-LC是什么" class="headerlink" title="(P)A/HC/LC是什么"></a>(P)A/HC/LC是什么</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">prefix<span class="token operator">?</span> <span class="token punctuation">(</span><span class="token constant">P</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">action</span> <span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">)</span> <span class="token operator">+</span> high <span class="token function">context</span> <span class="token punctuation">(</span><span class="token constant">HC</span><span class="token punctuation">)</span> <span class="token operator">+</span> low context<span class="token operator">?</span> <span class="token punctuation">(</span><span class="token constant">LC</span><span class="token punctuation">)</span><span class="token comment">// 前缀 + 动作 + 高语境 + 低语境</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Prefix"><a href="#Prefix" class="headerlink" title="Prefix"></a>Prefix</h3><ul><li>prefix（前缀）增加函数的可读性<h3 id="is-是什么"><a href="#is-是什么" class="headerlink" title="- is (是什么)"></a>- is (是什么)</h3></li><li>描述当前上下文（语境）的特征或状态,通常为布尔值。<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token string">'blue'</span><span class="token keyword">const</span> isBlue <span class="token operator">=</span> <span class="token punctuation">(</span> color <span class="token operator">===</span> <span class="token string">'blue'</span> <span class="token punctuation">)</span> <span class="token comment">// 特征</span><span class="token keyword">const</span> isPresent <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 状态</span><span class="token keyword">if</span> <span class="token punctuation">(</span>isBlue <span class="token operator">&amp;&amp;</span> isPresent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>‘Blue is present’<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="has-有什么"><a href="#has-有什么" class="headerlink" title="- has (有什么)"></a>- has (有什么)</h3></li><li>描述当前上下文（语境）是否具有某个特定的值或状态，通常为布尔值<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* Bad */</span><span class="token keyword">const</span> isProductsExist <span class="token operator">=</span> <span class="token punctuation">(</span>productsCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span> areProductsPresent <span class="token operator">=</span> <span class="token punctuation">(</span>productsCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">/* Good */</span><span class="token keyword">const</span> hasProducts <span class="token operator">=</span> <span class="token punctuation">(</span>productsCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="should-应该做什么"><a href="#should-应该做什么" class="headerlink" title="- should (应该做什么)"></a>- should (应该做什么)</h3></li><li>映射具有明确动作的条件语句，通常为布尔值<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">shouldUpdateUrl</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> expectedUrl</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>url <span class="token operator">!==</span> expectedUrl<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="函数的核心是-Actions"><a href="#函数的核心是-Actions" class="headerlink" title="函数的核心是 Actions"></a>函数的核心是 <code>Actions</code></h2><ul><li>Actions（动作），是函数名的动词部分，描述这个函数要做什么</li></ul><h3 id="get-获取数据"><a href="#get-获取数据" class="headerlink" title="- get (获取数据)"></a>- get (获取数据)</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 快速获取内部数据</span><span class="token keyword">function</span> <span class="token function">getFruitsCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fruits<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="set-设置数据"><a href="#set-设置数据" class="headerlink" title="- set (设置数据)"></a>- set (设置数据)</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 将某个变量的值由A变为B</span><span class="token keyword">let</span> fruits <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">function</span> <span class="token function">setFruits</span><span class="token punctuation">(</span><span class="token parameter">nextFruits</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  fruits <span class="token operator">=</span> nextFruits<span class="token punctuation">&#125;</span><span class="token function">setFruits</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token comment">// 5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="reset-还原数据"><a href="#reset-还原数据" class="headerlink" title="- reset (还原数据)"></a>- reset (还原数据)</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 将某个变量的值设为其初始值或状态</span><span class="token keyword">let</span> initialFruits <span class="token operator">=</span> <span class="token number">5</span><span class="token keyword">let</span> fruits <span class="token operator">=</span> initialFruits<span class="token function">setFruits</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token comment">// 10</span><span class="token keyword">function</span> <span class="token function">resetFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  fruits <span class="token operator">=</span> initialFruits<span class="token punctuation">&#125;</span><span class="token function">resetFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token comment">// 5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="fetch-请求数据"><a href="#fetch-请求数据" class="headerlink" title="- fetch (请求数据)"></a>- fetch (请求数据)</h3><ul><li>通常为一个比较耗时的操作，如：异步请求<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">fetchPosts</span><span class="token punctuation">(</span><span class="token parameter">postCount</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>‘https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>api<span class="token punctuation">.</span>dev<span class="token operator">/</span>posts'<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>…<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="remove-移除数据"><a href="#remove-移除数据" class="headerlink" title="- remove (移除数据)"></a>- remove (移除数据)</h3><ul><li>逻辑上的删除，数据可能只是被移动某个特定的地方了</li><li>假设页面有个搜索过滤器，可以通过 <code>removeFilter</code> 来移除过滤器的某个值，而不是 <code>deleteFilter</code><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">removeFilter</span><span class="token punctuation">(</span><span class="token parameter">filterName<span class="token punctuation">,</span> filters</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> filters<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">name</span> <span class="token operator">=></span> name <span class="token operator">!==</span> filterName<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> selectedFilters <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">,</span> <span class="token string">'availability'</span><span class="token punctuation">,</span> <span class="token string">'size'</span><span class="token punctuation">]</span><span class="token function">removeFilter</span><span class="token punctuation">(</span><span class="token string">'price'</span><span class="token punctuation">,</span> selectedFilters<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="delete-删除数据"><a href="#delete-删除数据" class="headerlink" title="- delete (删除数据)"></a>- delete (删除数据)</h3></li><li>将某个数据彻底删除, 是物理上的删除.</li><li>假设你是一个文章审核员, 看到一篇不合规的文章, 当你想彻底删除这篇文章并点击 删除文章 按钮的时候, 执行的应该是一个 deletePost 的删除动作, 而不是 removePost<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">deletePost</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> database<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> id <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="compose-组合数据"><a href="#compose-组合数据" class="headerlink" title="- compose (组合数据)"></a>- compose (组合数据)</h3></li><li>基于现有的数据来创建一个新的数据, 适用于字符串、对象和函数<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">composePageUrl</span><span class="token punctuation">(</span><span class="token parameter">pageName<span class="token punctuation">,</span> pageId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> $<span class="token punctuation">&#123;</span>pageName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">-</span>$<span class="token punctuation">&#123;</span>pageId<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="handle-处理数据"><a href="#handle-处理数据" class="headerlink" title="- handle (处理数据)"></a>- handle (处理数据)</h3><ul><li>处理某个动作, 通常用来声明一个回调函数<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">handleLinkClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Clicked a link!'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>link<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> handleLinkClick<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="最后是-Context"><a href="#最后是-Context" class="headerlink" title="最后是 Context"></a>最后是 Context</h2></li><li>context 是一个域, 指代当前函数的执行环境</li><li>函数通常是处理某件事的一个动作, 所以注明函数所属的域, 或者至少注明一个预期的数据类型是很重要的<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* 基于内置方法的纯函数 */</span><span class="token keyword">function</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">predicate<span class="token punctuation">,</span> list</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>predicate<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* 确切的表明这个函数是处理 posts 的 */</span><span class="token keyword">function</span> <span class="token function">getRecentPosts</span><span class="token punctuation">(</span><span class="token parameter">posts</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">filter</span><span class="token punctuation">(</span>posts<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token operator">=></span> post<span class="token punctuation">.</span>date <span class="token operator">===</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>一些编程语言允许你省略 context, 比如在 JavaScript 中 filter 方法只存在于数组上, 所以没必要给函数添加 context.</li></ul><h2 id="综上总结"><a href="#综上总结" class="headerlink" title="综上总结"></a>综上总结</h2><table><thead><tr><th align="left">Name</th><th>Prefix</th><th>Action(A)</th><th>High context(HC)</th><th>Low context(LC)</th></tr></thead><tbody><tr><td align="left">getPost</td><td></td><td>get</td><td>Post</td><td></td></tr><tr><td align="left">getPostData</td><td></td><td>get</td><td>Post</td><td>Data</td></tr><tr><td align="left">handleClickOutside</td><td></td><td>handle</td><td>Click</td><td>Outside</td></tr><tr><td align="left">shouldDisplayMessage</td><td>should</td><td>Display</td><td>Message</td><td></td></tr></tbody></table><h2 id="提高代码可读性的变量命名技巧参考"><a href="#提高代码可读性的变量命名技巧参考" class="headerlink" title="提高代码可读性的变量命名技巧参考"></a>提高代码可读性的变量命名技巧参考</h2><ol><li>遵循 S-I-D 原则<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* Bad */</span><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">5</span> <span class="token comment">// "a" 没有什么含义</span><span class="token keyword">const</span> isPaginatable <span class="token operator">=</span> <span class="token punctuation">(</span>postsCount <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// "Paginatable" 听起来很不自然</span><span class="token keyword">const</span> shouldPaginatize <span class="token operator">=</span> <span class="token punctuation">(</span>postsCount <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// "Paginatize" 编造一个动词更加荒谬!</span><span class="token comment">/* Good */</span><span class="token keyword">const</span> postsCount <span class="token operator">=</span> <span class="token number">5</span><span class="token keyword">const</span> hasPagination <span class="token operator">=</span> <span class="token punctuation">(</span>postsCount <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">const</span> shouldDisplayPagination <span class="token operator">=</span> <span class="token punctuation">(</span>postsCount <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// alternatively</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ul><li>避免缩写</li><li>不要使用缩写形式, 这会降低代码可读性. 起一个简短并且语义化的名称可能有点难度, 但是不要让这成为你使用缩写的借口<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* Bad */</span><span class="token keyword">const</span> <span class="token function-variable function">onItmClk</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Good */</span><span class="token keyword">const</span> <span class="token function-variable function">onItemClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>避免重复的上下文</li><li>如果命名中的 context 存在与否不会降低其可读性的话, 最好还是移除它:<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">MenuItem</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* 命名中的 "MenuItem" 与类名的域重复 */</span>  <span class="token function-variable function">handleMenuItemClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span>  <span class="token comment">/* 去掉 "MenuItem", 看起来更简洁 */</span>  <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>应该映射预期结果<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* Bad */</span><span class="token keyword">const</span> isEnabled <span class="token operator">=</span> <span class="token punctuation">(</span>itemsCount <span class="token operator">></span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token operator">&lt;</span>Button disabled<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token operator">!</span>isEnabled<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span><span class="token comment">/* Good */</span><span class="token keyword">const</span> isDisabled <span class="token operator">=</span> <span class="token punctuation">(</span>itemsCount <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token operator">&lt;</span>Button disabled<span class="token operator">=</span><span class="token punctuation">&#123;</span>isDisabled<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>考虑单数和复数形式</li><li>因为一个变量可能拥有单个或多个值, 所以命名的时候也要考虑单数和复数形式.</li></ul><h2 id="参考原文链接"><a href="#参考原文链接" class="headerlink" title="参考原文链接"></a><a href="https://betterprogramming.pub/a-useful-framework-for-naming-your-classes-functions-and-variables-e7d186e3189f">参考原文链接</a></h2>]]></content>
      
      
      <categories>
          
          <category> 项目规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于typescript改造旧项目的一些坑</title>
      <link href="/2021/02/26/%E5%85%B3%E4%BA%8Etypescript%E6%94%B9%E9%80%A0%E6%97%A7%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
      <url>/2021/02/26/%E5%85%B3%E4%BA%8Etypescript%E6%94%B9%E9%80%A0%E6%97%A7%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h2 id="‘-‘-引入组件报红问题"><a href="#‘-‘-引入组件报红问题" class="headerlink" title="‘@/‘ 引入组件报红问题"></a>‘@/‘ 引入组件报红问题</h2><ul><li>使用 ‘@/xxx/xxx’ 引入组件，vetur报红 找不到module，但是可以正常运行问题</li><li>解决办法：1.把项目目录放工作区根目录；2.项目一定排列在第一位<h2 id="引入第三方包报红"><a href="#引入第三方包报红" class="headerlink" title="引入第三方包报红"></a>引入第三方包报红</h2></li><li>引入第三方库 报红找不到module，无法正常使用包，如qs、jQuery</li><li>解决办法1：使用@types进行包管理，然后正常引入<pre class="line-numbers language-js" data-language="js"><code class="language-js">npm i @types<span class="token operator">/</span>qs<span class="token keyword">import</span> qs <span class="token keyword">from</span> <span class="token string">'qs'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>解决办法2：有些包不能用@types管理，自己写声明 XX.d.ts  不推荐</li></ul><h2 id="router配置里引入component组件的时候必须添加-vue后缀"><a href="#router配置里引入component组件的时候必须添加-vue后缀" class="headerlink" title="router配置里引入component组件的时候必须添加.vue后缀"></a>router配置里引入component组件的时候必须添加.vue后缀</h2><h2 id="Element表单验证报红问题"><a href="#Element表单验证报红问题" class="headerlink" title="Element表单验证报红问题"></a>Element表单验证报红问题</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 报错信息如下</span><span class="token comment">// Property 'validate' does not exist on type 'Vue | Element | Vue[] | Element[]'.</span><span class="token comment">// Property 'validate' does not exist on type 'Vue'.</span><span class="token comment">// 解决办法</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Form <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"element-ui"</span><span class="token punctuation">;</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>loginForm <span class="token keyword">as</span> Form <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">valid<span class="token operator">:</span> boolean</span> <span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 如果不引入Form，把Form换成any也可以，但是typescript会报警告⚠</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用axios封装的请求，然后解构请求结果报错<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 报错信息</span><span class="token comment">// Property 'XXX' does not exist on type 'AxiosResponse&lt;any>'</span><span class="token comment">// 解决办法</span><span class="token comment">// 新建axios.d.ts文案，添加如下内容，重启项目</span><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span>declare module <span class="token string">'axios'</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">interface</span> <span class="token class-name">AxiosInstance</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>any<span class="token operator">></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>@typescript<span class="token operator">/</span>esline 报错 xxx_x is not <span class="token keyword">in</span> camel <span class="token keyword">case</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="关闭esline驼峰校验"><a href="#关闭esline驼峰校验" class="headerlink" title="关闭esline驼峰校验"></a>关闭esline驼峰校验</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 在.eslinetrc.js中配置如下：</span>rules<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span>  <span class="token string">'@typescript-eslint/camelcase'</span><span class="token operator">:</span> <span class="token string">'off'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="TS使用”require”报错"><a href="#TS使用”require”报错" class="headerlink" title="TS使用”require”报错"></a>TS使用”require”报错</h2></li><li>提示报错信息：Cannot find name ‘require’. Do you need to install type definitions for node? Try ‘npm i –save-dev @types/node’</li><li>解决方案：<ul><li>1.安装@types/node，npm i –save-dev @types/node；</li><li>2.在tsconfig.json中的compilerOptions中的types添加”node”；</li><li>3.在使用require前面添加declare var require:any<h2 id="TS使用”this-xxx”报错"><a href="#TS使用”this-xxx”报错" class="headerlink" title="TS使用”this.xxx”报错"></a>TS使用”this.xxx”报错</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 使用"this.$router.push("/xxx")" => Property '$router' does not exist on type 'Experiment'.</span><span class="token comment">// 解决：</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"/xxx"</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span><span class="token parameter">mainVideo</span> <span class="token operator">=></span> Property <span class="token string">'clientWidth'</span> does not exist on type <span class="token string">'Vue | Element | Vue[] | Element[]'</span><span class="token punctuation">.</span><span class="token comment">// Property 'clientWidth' does not exist on type 'Vue'</span><span class="token comment">// 解决：</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>mainVideo <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span>clientWidth<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序通知推送</title>
      <link href="/2020/12/29/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%80%9A%E7%9F%A5%E6%8E%A8%E9%80%81/"/>
      <url>/2020/12/29/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%80%9A%E7%9F%A5%E6%8E%A8%E9%80%81/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序推送通知方式（订阅消息-amp-消息模板）"><a href="#小程序推送通知方式（订阅消息-amp-消息模板）" class="headerlink" title="小程序推送通知方式（订阅消息&amp;消息模板）"></a>小程序推送通知方式（订阅消息&amp;消息模板）</h1><h2 id="小程序发送小程序的订阅消息-推送到服务通知"><a href="#小程序发送小程序的订阅消息-推送到服务通知" class="headerlink" title="小程序发送小程序的订阅消息(推送到服务通知)"></a>小程序发送小程序的订阅消息(推送到服务通知)</h2><ul><li>准备1：登录小程序-功能-订阅消息（未开通的，需要先开通）-从模板库中添加消息模板并获得模板ID（也可以申请消息模板）</li><li>步骤：<ul><li>获取下发权限 （用户发生点击行为或者发起支付回调后）— 调用接口下发订阅消息</li><li>获取js_code</li><li>根据js_code获取OpenId和UnionID</li><li>获取小程序access_token</li><li>根据access_token调用接口下发订阅消息</li></ul></li><li>参考的开发文档<br>  -<a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/subscribe-message/wx.requestSubscribeMessage.html">获取下发权限</a><br>  -<a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/subscribe-message/subscribeMessage.send.html">调用接口下发订阅消息</a><h2 id="小程序调用公众号的消息模板-推送到微信公众号"><a href="#小程序调用公众号的消息模板-推送到微信公众号" class="headerlink" title="小程序调用公众号的消息模板(推送到微信公众号)"></a>小程序调用公众号的消息模板(推送到微信公众号)</h2></li><li>准备1：注册微信开放平台，将微信公众号和小程序绑定到微信开放平台（目的：获取UnionID）</li><li>准备2：微信公众号添加消息模板功能，从模板库中添加消息模板并获得模板ID，也可以申请模板</li><li>步骤：(根据用户唯一的UnionID去寻找用户在公众号的OpenId,再根据微信公众号的OpenId发送通知到相应的用户)<ul><li>批量获取微信公众号关注的用户Openid</li><li>根据用户Openid获取微信公众号关注的用户UnionID</li><li>将微信公众号关注的用户Openid、UnionID保存到数据库</li><li>两种方式获取小程序用户UnionID<ul><li>根据js_code获取小程序的OpenId和UnionID</li><li>根据小程序的OpenId、access_token获取用户信息UserInfo，根据UserInfo的encryptedData字段解密出小程序的UnionID（不推荐）</li></ul></li><li>根据小程序appid、secret获取小程序access_token</li><li>根据小程序的UnionID去数据库匹配用户在公众号的OpenId</li><li>根据用户在公众号的OpenId、access_token发送消息模板到对应用户</li></ul></li><li>参考的开发文档<ul><li><a href="https://open.weixin.qq.com/">微信开放平台登录</a></li><li><a href="https://mp.weixin.qq.com/">微信公众号登录</a></li><li><a href="https://mp.weixin.qq.com/">微信小程序登录</a></li><li><a href="https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Template_Message_Interface.html">公众号消息模板接口</a></li><li><a href="https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Receiving_event_pushes.html">公众号关注/取消关注事件</a>：微信公众号-开发-基本配置-服务器配置-启用</li><li><a href="https://developers.weixin.qq.com/doc/offiaccount/Basic_Information/Access_Overview.html">服务器配置</a></li><li>[公众号获取用户列表/获取OpenId]<a href="https://developers.weixin.qq.com/doc/offiaccount/User_Management/Getting_a_User_List.html">https://developers.weixin.qq.com/doc/offiaccount/User_Management/Getting_a_User_List.html</a>)</li><li><a href="https://developers.weixin.qq.com/doc/offiaccount/User_Management/Get_users_basic_information_UnionID.html#UinonId">公众号获取用户基本信息(UnionID)</a></li><li><a href="https://developers.weixin.qq.com/doc/offiaccount/Basic_Information/Get_access_token.html">公众号获取Access token</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html">小程序获取js_code</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/login/auth.code2Session.html">小程序获取OpenId和UnionID/获取code2Session</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html">小程序获取access_token</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/user-info/wx.getUserInfo.html">小程序获取用户信息UserInfo</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html#%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95">UserInfo解密算法解密</a></li><li><a href="https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Template_Message_Interface.html#5">公众号消息模板发送</a></li></ul></li></ul><h2 id="下发统一服务消息（官方不支持了）"><a href="#下发统一服务消息（官方不支持了）" class="headerlink" title="下发统一服务消息（官方不支持了）"></a>下发统一服务消息（官方不支持了）</h2><ul><li>下发小程序和公众号统一的服务消息（需要填小程序模板id和公众号模板id）<h2 id="小程序消息模板（已废弃）"><a href="#小程序消息模板（已废弃）" class="headerlink" title="小程序消息模板（已废弃）"></a>小程序消息模板（已废弃）</h2><h2 id="预备知识："><a href="#预备知识：" class="headerlink" title="预备知识："></a>预备知识：</h2></li><li>小程序openid：小程序用户的唯一id</li><li>公众号openid：公众号用户的唯一id</li><li>unionid：同一用户，对同一个微信开放平台下的不同应用，unionid是相同的</li><li>准备：<ol><li>将小程序与公众号绑定（绑定后才可获取unionid），官方文档：小程序与公众号绑定获取unionid</li><li>接入微信公众平台开发，也就是给服务号配置一下开发者服务器。当有用户关注/取消服务号时，微信服务器会推送关注/取消的事件给我们的服务器。官方文档：接入微信公众平台开发</li><li>获取公众号用户列表，即所有用户的公众号openid。官方文档：获取公众号用户列表</li><li>通过公众号openid获取用户的unionid。官方文档：通过公众号openid获取unionid</li><li>推送服务号消息。官方文档：公众号发送模版消息</li></ol><ul><li>注意：</li></ul><ol start="6"><li>在上述的一些接口中，需要获取access_token。小程序和公众号的access_token是不同的，需要用各自的appid和secret去获取。</li><li>access_token每天只能获取200次，有效期是7200秒。所以应该把它加入缓存，而不是每次都去获取新的access_token。<h2 id="开始开发"><a href="#开始开发" class="headerlink" title="开始开发"></a>开始开发</h2></li></ol></li><li>将小程序用户与公众号用户关联：<ul><li>小程序用户openid→unionid←公众号用户openid</li><li>要想将小程序与公众号用户关联，第一件事就是获取用户的unionid。</li><li>我们可以在两种情况下获取用户的unionid：</li></ul></li><li>一、如果用户已经关注了公众号，那么在用户登录的时候，就可以获取到unionid</li><li>二、如果用户没有关注公众号，那么得让前端调用wx.getUserInfo，把加密数据给后端解密拿到unionid。<ul><li>解密需要session_key，而session_key又有有效期，得注意它过期的情况。</li><li>当用户关注公众号时，微信会推送事件给我们（本文准备条件的第2条）。</li><li>通过关注事件，我们可以拿到用户的公众号openid，再获取unionid（本文准备条件的第4条）。拿到unionid后，去数据库查询这个unionid的用户，并把公众号openid保存。</li><li>但是，还有两个情况没有考虑到：<ol><li>在我们开发之前，已经关注了公众号的用户没有去关联<ul><li>解决方案：</li><li>获取微信公众号的用户列表，再依次获取用户unionid（本文准备条件的第3、4条）。注意，此操作非常耗时。</li></ul></li><li>用户先关注了公众号，但是从来没用过小程序（数据库里没有unionid，导致无法关联）<ul><li>解决方案：</li><li>新建一张表，把这个公众号用户先记录下来。当小程序用户登录时，先检查一遍这张表尝试关联。</li></ul></li></ol></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一份参考用的axios封装</title>
      <link href="/2020/11/19/%E4%B8%80%E4%BB%BD%E5%8F%82%E8%80%83%E7%94%A8%E7%9A%84axios%E5%B0%81%E8%A3%85/"/>
      <url>/2020/11/19/%E4%B8%80%E4%BB%BD%E5%8F%82%E8%80%83%E7%94%A8%E7%9A%84axios%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="一份拷贝即用的axios封装代码"><a href="#一份拷贝即用的axios封装代码" class="headerlink" title="一份拷贝即用的axios封装代码"></a>一份拷贝即用的axios封装代码</h1><h2 id="安装Axios"><a href="#安装Axios" class="headerlink" title="安装Axios"></a>安装Axios</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">npm install axios<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> axios<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> AxiosRequestConfig<span class="token punctuation">,</span> AxiosResponse <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token keyword">const</span> <span class="token function-variable function">showStatus</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status<span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">''</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token number">400</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'请求错误(400)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">401</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'未授权，请重新登录(401)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">403</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'拒绝访问(403)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">404</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'请求出错(404)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">408</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'请求超时(408)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">500</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'服务器错误(500)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">501</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'服务未实现(501)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">502</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'网络错误(502)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">503</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'服务不可用(503)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">504</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'网络超时(504)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">505</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'HTTP版本不受支持(505)'</span>      <span class="token keyword">break</span>    <span class="token keyword">default</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">连接出错(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>status<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)!</span><span class="token template-punctuation string">`</span></span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>message<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">，请检查网络或联系管理员！</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 联调</span>  baseURL<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">'production'</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">'/apis'</span><span class="token punctuation">,</span>  headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    get<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'application/x-www-form-urlencoded;charset=utf-8'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    post<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'application/json;charset=utf-8'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 是否跨站点访问控制请求</span>  withCredentials<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  timeout<span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>  transformRequest<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> data  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token function">validateStatus</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 使用async-await，处理reject情况较为繁琐，所以全部返回resolve，在业务代码中处理异常</span>    <span class="token keyword">return</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  transformResponse<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data <span class="token operator">===</span> <span class="token string">'string'</span> <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'&#123;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> data  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 请求拦截器</span>service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">config<span class="token operator">:</span> AxiosRequestConfig</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 错误抛到业务代码</span>    error<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    error<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">'服务器异常，请联系管理员！'</span>    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 响应拦截器</span>service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response<span class="token operator">:</span> AxiosResponse</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> status <span class="token operator">=</span> response<span class="token punctuation">.</span>status    <span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">&lt;</span> <span class="token number">200</span> <span class="token operator">||</span> status <span class="token operator">>=</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 处理http错误，抛到业务代码</span>        msg <span class="token operator">=</span> <span class="token function">showStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> response<span class="token punctuation">.</span>data <span class="token operator">===</span> <span class="token string">'string'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            response<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>msg<span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg <span class="token operator">=</span> msg        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> response<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 错误抛到业务代码</span>    error<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    error<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">'请求超时或服务器异常，请检查网络或联系管理员！'</span>    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一些关于Axios的注释"><a href="#一些关于Axios的注释" class="headerlink" title="一些关于Axios的注释"></a>一些关于Axios的注释</h2><ul><li>请求方法应为小写：method: get/post/put/delete在axios内部全部转为小写</li><li>Axios实现原理是基于 XMLHttpRequest 详细可见’axios/lib/adapters/xhr.js’#20</li><li>‘axios/lib/adapters/xhr.js’ -&gt; 浏览器请求模块</li><li>‘axios/lib/cancel/Cancel.js’ -&gt; 取消请求模块</li><li>‘axios/lib/core/Axios.js’ -&gt; 发送请求模块</li><li>‘axios/Defaults.js’ -&gt; 默认配置模块</li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页安全策略---CSP</title>
      <link href="/2020/11/18/%E7%BD%91%E9%A1%B5%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5---CSP/"/>
      <url>/2020/11/18/%E7%BD%91%E9%A1%B5%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5---CSP/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Content Security Policy （网页安全策略或内容安全策略，简称 CSP)，主要用于检测并削弱某些特定类型的攻击，如跨站脚本(xss)、数据注入攻击等，相当于是让浏览器自动禁止外部注入恶意脚本</p></li><li><p>CSP的实质就是白名单制度，开发者明确告诉客户端，哪些外部资源可以加载和执行，它的实现和执行全部由浏览器完成，开发者只需要提供配置</p></li><li><p>两种启用CSP方式</p><ul><li>①通过HTTP头部信息的Content-Security-Policy字段添加指定策略<pre class="line-numbers language-js" data-language="js"><code class="language-js">Content<span class="token operator">-</span>Security<span class="token operator">-</span>Policy<span class="token operator">:</span> script<span class="token operator">-</span>src <span class="token string">'self'</span><span class="token punctuation">;</span> boject<span class="token operator">-</span>src <span class="token string">'none'</span><span class="token punctuation">;</span> style<span class="token operator">-</span>src cdn<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org third<span class="token operator">-</span>party<span class="token punctuation">.</span>org<span class="token punctuation">;</span> child<span class="token operator">-</span>src https<span class="token operator">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>②通过网页的<meta>标签<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">'Content-Security-Policy'</span> content<span class="token operator">=</span><span class="token string">"script-src 'self'; boject-src 'none'; style-src cdn.example.org third-party.org; child-src https:"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><ul><li>以上代码的配置信息：</li><li>脚本：只信任当前域名</li><li>标签，不信任任何URL，即不加载任何资源</li><li>样式表：只信任cdn.example.org third-party.org</li><li>框架(frame)：必须使用HTTPS协议加载</li><li>其他资源：没有限制</li><li>资源限制选项<ul><li>script-src: 外部脚本</li><li>style-src: 样式表</li><li>img-src: 图片</li><li>media-src: 媒体文件</li><li>font-src: 字体文件</li><li>object-src: 插件，如Flash</li><li>child-src: 框架</li><li>frame-ancestors: 嵌入的外部资源，如：frame、iframe</li><li>content-src: HTTP连接（通过XHR、WebSockets）</li><li>worker-src: worker脚本</li><li>manifest-src: manifest文件</li></ul></li><li>default-src 选项<ul><li>用来限制各个选项的默认值<pre class="line-numbers language-js" data-language="js"><code class="language-js">Content<span class="token operator">-</span>Security<span class="token operator">-</span>Policy<span class="token operator">:</span> <span class="token keyword">default</span><span class="token operator">-</span>src <span class="token string">'self'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li>以上代码限制所有资源只能从当前域名加载</li></ul></li><li><p>参考</p><ul><li><a href="http://www.ruanyifeng.com/blog/2016/09/csp.html">http://www.ruanyifeng.com/blog/2016/09/csp.html</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> CSP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github搜索技巧</title>
      <link href="/2020/11/12/Github%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/"/>
      <url>/2020/11/12/Github%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="1-搜索关键字"><a href="#1-搜索关键字" class="headerlink" title="1.搜索关键字"></a>1.搜索关键字</h2><ul><li>Vue in:name 表示在项目名称中搜索 Vue 关键字</li><li>Vue in:readme 表示在项目readme中搜索 Vue 关键字</li><li>Vue in:description 表示在 项目描述中搜索 Vue 关键字</li><li>Vue in:USERNAME 表示在USERNAME中搜索 Vue 关键字</li><li>Vue in:ORGNAME 表示在组织或机构名中搜索 Vue 关键字<h2 id="2-按照项目大小搜索"><a href="#2-按照项目大小搜索" class="headerlink" title="2.按照项目大小搜索"></a>2.按照项目大小搜索</h2></li><li>size:&gt;=5000 Vue 搜索大小超过5M 的包含 Vue 关键字项目<h2 id="3-按照Stars量搜索"><a href="#3-按照Stars量搜索" class="headerlink" title="3.按照Stars量搜索"></a>3.按照Stars量搜索</h2></li><li>stars:&gt;1000 搜索Stars量大于1000的项目</li><li>Vue stars:&gt;1000 搜索Stars量大于1000的Vue项目</li><li>language:Vue stars:&gt;10000搜索开发语言为Vue且stars数大于10000的所有项目<h2 id="4-按照语言搜索"><a href="#4-按照语言搜索" class="headerlink" title="4.按照语言搜索"></a>4.按照语言搜索</h2></li><li>language:Vue location:china 搜索国内的开发者，语言限定为Vue<h2 id="5-Github高级搜索"><a href="#5-Github高级搜索" class="headerlink" title="5.Github高级搜索"></a>5.Github高级搜索</h2></li><li><a href="https://github.com/search/advanced">https://github.com/search/advanced</a><h2 id="6-每天-每周-每月热门"><a href="#6-每天-每周-每月热门" class="headerlink" title="6.每天/每周/每月热门"></a>6.每天/每周/每月热门</h2></li><li><a href="https://github.com/trending">https://github.com/trending</a><h2 id="7-git如何统计代码行数"><a href="#7-git如何统计代码行数" class="headerlink" title="7.git如何统计代码行数"></a>7.git如何统计代码行数</h2></li><li>git中有个中自带的查询提交行数的命令<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> log --since<span class="token operator">=</span><span class="token number">2018</span>-01-01 --until<span class="token operator">=</span><span class="token number">2018</span>-12-31 --author<span class="token operator">=</span><span class="token string">"like"</span> --pretty<span class="token operator">=</span>tformat: --numstat <span class="token operator">|</span> <span class="token function">gawk</span> <span class="token string">'&#123; add += $1 ; subs += $2 ; loc += $1 - $2 &#125; END &#123; printf "added lines: %s removed lines : %s total lines: %s\n",add,subs,loc &#125;'</span> -<span class="token comment"># 设置对应时间段，--author后面改成自己的名字或空</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一个无聊的canvas</title>
      <link href="/2020/11/11/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%AA%E6%97%A0%E8%81%8A%E7%9A%84canvas/"/>
      <url>/2020/11/11/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%AA%E6%97%A0%E8%81%8A%E7%9A%84canvas/</url>
      
        <content type="html"><![CDATA[<h2 id="先看效果"><a href="#先看效果" class="headerlink" title="先看效果"></a>先看效果</h2><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/fish.png" alt="flying-fish"><br>flying-fish</p><p>GIF<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/fish.gif" alt="flying-fish-gif"><br>flying-fish-gif</p><h2 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a>代码如下</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- index.html --></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">*</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#jsi-flying-fish-container</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>      <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>      <span class="token property">z-index</span><span class="token punctuation">:</span> 999<span class="token punctuation">;</span>      <span class="token property">bottom</span><span class="token punctuation">:</span> 240px<span class="token punctuation">;</span>      <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>      <span class="token property">max-height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.bootcdn.net/ajax/libs/jquery/2.2.0/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jsi-flying-fish-container<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1221<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>241<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./fish.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// fish.js</span><span class="token keyword">var</span> <span class="token constant">RENDERER</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token constant">POINT_INTERVAL</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token constant">FISH_COUNT</span> <span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>    <span class="token constant">MAX_INTERVAL_COUNT</span> <span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>    <span class="token constant">INIT_HEIGHT_RATE</span> <span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>    <span class="token constant">THRESHOLD</span> <span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>    <span class="token function-variable function">init</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reconstructMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bindEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">setParameters</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$window <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$container <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#jsi-flying-fish-container'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$canvas <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;canvas />'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$canvas<span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>points <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fishes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>watchIds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">createSurfacePoints</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> count <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">POINT_INTERVAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pointInterval <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token punctuation">(</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SURFACE_POINT</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SURFACE_POINT</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> i <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pointInterval<span class="token punctuation">)</span><span class="token punctuation">,</span>                previous <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            point<span class="token punctuation">.</span><span class="token function">setPreviousPoint</span><span class="token punctuation">(</span>previous<span class="token punctuation">)</span><span class="token punctuation">;</span>            previous<span class="token punctuation">.</span><span class="token function">setNextPoint</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">reconstructMethods</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>watchWindowSize <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">watchWindowSize</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>jdugeToStopResize <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">jdugeToStopResize</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>startEpicenter <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startEpicenter</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>moveEpicenter <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveEpicenter</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>reverseVertical <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reverseVertical</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>render <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">setup</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>watchIds<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>intervalCount <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">MAX_INTERVAL_COUNT</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fishCount <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">FISH_COUNT</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">500</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">500</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$canvas<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>width <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> height <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>reverse <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FISH</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createSurfacePoints</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">watchWindowSize</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">clearTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tmpWidth <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tmpHeight <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>watchIds<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>jdugeToStopResize<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">WATCH_INTERVAL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">clearTimer</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>watchIds<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">clearTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>watchIds<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">jdugeToStopResize</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> width <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            stopped <span class="token operator">=</span> <span class="token punctuation">(</span>width <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tmpWidth <span class="token operator">&amp;&amp;</span> height <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tmpHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tmpWidth <span class="token operator">=</span> width<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tmpHeight <span class="token operator">=</span> height<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>stopped<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">bindEvent</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>watchWindowSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startEpicenter<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>moveEpicenter<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reverseVertical<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">getAxis</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> offset <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            x <span class="token operator">:</span> event<span class="token punctuation">.</span>clientX <span class="token operator">-</span> offset<span class="token punctuation">.</span>left <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            y <span class="token operator">:</span> event<span class="token punctuation">.</span>clientY <span class="token operator">-</span> offset<span class="token punctuation">.</span>top <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">startEpicenter</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>axis <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAxis</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">moveEpicenter</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> axis <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAxis</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>axis<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>axis <span class="token operator">=</span> axis<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateEpicenter</span><span class="token punctuation">(</span>axis<span class="token punctuation">.</span>x<span class="token punctuation">,</span> axis<span class="token punctuation">.</span>y<span class="token punctuation">,</span> axis<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>axis<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>axis <span class="token operator">=</span> axis<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">generateEpicenter</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> velocity</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">THRESHOLD</span> <span class="token operator">||</span> y <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">THRESHOLD</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> index <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>x <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pointInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> index <span class="token operator">>=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">interfere</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> velocity<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">reverseVertical</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>reverse <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>reverse<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverseVertical</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">controlStatus</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">updateSelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">updateNeighbors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fishCount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">--</span><span class="token keyword">this</span><span class="token punctuation">.</span>intervalCount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>intervalCount <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">MAX_INTERVAL_COUNT</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FISH</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">render</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">controlStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'#0184b2'</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>globalCompositeOperation <span class="token operator">=</span> <span class="token string">'xor'</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reverse <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reverse <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">SURFACE_POINT</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">renderer<span class="token punctuation">,</span> x</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>renderer <span class="token operator">=</span> renderer<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">SURFACE_POINT</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token constant">SPRING_CONSTANT</span> <span class="token operator">:</span> <span class="token number">0.03</span><span class="token punctuation">,</span>    <span class="token constant">SPRING_FRICTION</span> <span class="token operator">:</span> <span class="token number">0.9</span><span class="token punctuation">,</span>    <span class="token constant">WAVE_SPREAD</span> <span class="token operator">:</span> <span class="token number">0.3</span><span class="token punctuation">,</span>    <span class="token constant">ACCELARATION_RATE</span> <span class="token operator">:</span> <span class="token number">0.01</span><span class="token punctuation">,</span>    <span class="token function-variable function">init</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>initHeight <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">INIT_HEIGHT_RATE</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>initHeight<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>force <span class="token operator">=</span> <span class="token punctuation">&#123;</span>previous <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> next <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">setPreviousPoint</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">previous</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>previous <span class="token operator">=</span> previous<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">setNextPoint</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">interfere</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">y<span class="token punctuation">,</span> velocity</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">ACCELARATION_RATE</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">-</span> y<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>velocity<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">updateSelf</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fy <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">SPRING_CONSTANT</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>initHeight <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fy <span class="token operator">*=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">SPRING_FRICTION</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fy<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">updateNeighbors</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>previous<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">.</span>previous <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">WAVE_SPREAD</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>previous<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">WAVE_SPREAD</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">render</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>previous<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>previous<span class="token punctuation">.</span>height <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">.</span>previous<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>previous<span class="token punctuation">.</span>fy <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">.</span>previous<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token punctuation">.</span>height <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token punctuation">.</span>fy <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        context<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">FISH</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">renderer</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>renderer <span class="token operator">=</span> renderer<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">FISH</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token constant">GRAVITY</span> <span class="token operator">:</span> <span class="token number">0.4</span><span class="token punctuation">,</span>    <span class="token function-variable function">init</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.5</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>width <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">THRESHOLD</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">THRESHOLD</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>previousY <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>vx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>vy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token number">6</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token number">9</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>vy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.05</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>isOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>theta <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>phi <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">getRandomValue</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> min <span class="token operator">+</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">reverseVertical</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>isOut <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isOut<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ay <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">controlStatus</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>previousY <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vx<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vy<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>vy <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ay<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">INIT_HEIGHT_RATE</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>vy <span class="token operator">-=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GRAVITY</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>isOut <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isOut<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>ay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>isOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">INIT_HEIGHT_RATE</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>vy <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GRAVITY</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>isOut <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isOut<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>ay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.05</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>isOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isOut<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>theta <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">20</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>theta <span class="token operator">%=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>phi <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>phi <span class="token operator">%=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token function">generateEpicenter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">THRESHOLD</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>previousY<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vx <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>width <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">THRESHOLD</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vx <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">THRESHOLD</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">render</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        context<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">atan2</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vy<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.9</span> <span class="token operator">+</span> <span class="token number">0.2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>theta<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">quadraticCurveTo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">quadraticCurveTo</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">quadraticCurveTo</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">quadraticCurveTo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">3</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>phi<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>reverse <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        context<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">controlStatus</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token constant">RENDERER</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Canvas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Element-Ui的select二次封装的下拉搜索组件</title>
      <link href="/2020/11/09/%E5%9F%BA%E4%BA%8EElement-Ui%E7%9A%84select%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85%E7%9A%84%E4%B8%8B%E6%8B%89%E6%90%9C%E7%B4%A2%E7%BB%84%E4%BB%B6/"/>
      <url>/2020/11/09/%E5%9F%BA%E4%BA%8EElement-Ui%E7%9A%84select%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85%E7%9A%84%E4%B8%8B%E6%8B%89%E6%90%9C%E7%B4%A2%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="少了罗嗦，直接看代码"><a href="#少了罗嗦，直接看代码" class="headerlink" title="少了罗嗦，直接看代码"></a>少了罗嗦，直接看代码</h2><ul><li>注意代码不能直接使用，只是提供一种封装思路，其中 dSearchList 及样式需要自己重新写, dCountryList 来自 dropListMixin</li><li>还有很多方法并未加进来，可根据实际自行添加<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// select/index.vue</span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>select      <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"value"</span>      <span class="token operator">:</span>placeholder<span class="token operator">=</span><span class="token string">"placeholder"</span>      <span class="token operator">:</span>filterable<span class="token operator">=</span><span class="token string">"true"</span>      <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"customStyle"</span>      <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"customClass"</span>      <span class="token operator">:</span>remote<span class="token operator">=</span><span class="token string">"true"</span>      <span class="token operator">:</span>size<span class="token operator">=</span><span class="token string">"size"</span>      <span class="token operator">:</span>remote<span class="token operator">-</span>method<span class="token operator">=</span><span class="token string">"dSearchList('countryList')"</span>      <span class="token operator">:</span>loading<span class="token operator">=</span><span class="token string">"dLoading"</span>      <span class="token operator">:</span>clearable<span class="token operator">=</span><span class="token string">"true"</span>      @input<span class="token operator">=</span><span class="token string">"onChange($event)"</span>      @change<span class="token operator">=</span><span class="token string">"(val) => onSelectChange(val)"</span>    <span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>option        v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"item in dCountryList"</span>        <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item[optionKey]"</span>        <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"item[optionLabel]"</span>        <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"item[optionValue]"</span>      <span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"d-f f-jc-sb"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>code <span class="token operator">||</span> <span class="token string">""</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>          <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">""</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>          <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>numCode <span class="token operator">||</span> <span class="token string">""</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> dropListMixin <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@/mixins/drop_list_mixin"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  mixins<span class="token operator">:</span> <span class="token punctuation">[</span>dropListMixin<span class="token punctuation">]</span><span class="token punctuation">,</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    value<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    placeholder<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    customStyle<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"width: 100%;"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    customClass<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    clearable<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    size<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"small"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    optionKey<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"code"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    optionLabel<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    optionValue<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"code"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dInit</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"countryList"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">onSelectChange</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"selectChange"</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token comment">//   使用示例 </span>  <span class="token operator">&lt;</span>country<span class="token operator">-</span>select <span class="token operator">:</span>size<span class="token operator">=</span><span class="token string">"medium"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"formData.countryCode"</span> @selectChange<span class="token operator">=</span><span class="token string">"val => onCountrySelect(val,'countryCode')"</span> <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>country<span class="token operator">-</span>select<span class="token operator">></span> <span class="token comment">//   使用示例 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Element-ui </tag>
            
            <tag> UI框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于js中对小数的计算</title>
      <link href="/2020/10/03/%E5%85%B3%E4%BA%8Ejs%E4%B8%AD%E5%AF%B9%E5%B0%8F%E6%95%B0%E7%9A%84%E8%AE%A1%E7%AE%97/"/>
      <url>/2020/10/03/%E5%85%B3%E4%BA%8Ejs%E4%B8%AD%E5%AF%B9%E5%B0%8F%E6%95%B0%E7%9A%84%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><ul><li><p>在js的小数计算中，0.1+0.2=0.30000000000000004</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span><span class="token keyword">let</span> num2 <span class="token operator">=</span> <span class="token number">0.2</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> num1 <span class="token operator">+</span> num2 <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 0.30000000000000004 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h1></li><li><p>为什么出现这样的结果，我们把小数转换成计算机能读得懂的二进制就比较明了了</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 0.1 -> 0.1.toString(2) -> 0.0001100110011001100110011001100110011001100110011001101(无限循环…)</span><span class="token comment">// 0.2 -> 0.1.toString(2) -> 0.001100110011001100110011001100110011001100110011001101(无限循环…)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>双精度浮点数的小数部分最多支持 52 位，所以两者相加之后得到这么一串 </p><ul><li>0.0100110011001100110011001100110011001100110011001100 </li></ul></li><li><p>因浮点数小数位的限制而截断的二进制数字，这时候，我们再把它转换为十进制，就成了 0.30000000000000004</p></li></ul><h1 id="如何处理此类问题？"><a href="#如何处理此类问题？" class="headerlink" title="如何处理此类问题？"></a>如何处理此类问题？</h1><ul><li>为了避免产生精度差异，我们要把需要计算的数字乘以 10 的 n 次幂，换算成计算机能够精确识别的整数，然后再除以 10 的 n 次幂，大部分编程语言都是这样处理精度差异的，我们就借用过来处理一下 JS 中的浮点数精度误差。</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function-variable function">formatNum</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">num<span class="token punctuation">,</span> digit</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> m <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span> <span class="token number">10</span><span class="token punctuation">,</span> digit <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span> num <span class="token operator">*</span> m<span class="token punctuation">,</span> <span class="token number">10</span> <span class="token punctuation">)</span> <span class="token operator">/</span> m<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span><span class="token keyword">let</span> num2 <span class="token operator">=</span> <span class="token number">0.2</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> num1 <span class="token operator">+</span> num2 <span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token function">formatNum</span><span class="token punctuation">(</span> num1 <span class="token operator">+</span> num2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Tips:</span><span class="token comment">// pow() 方法可返回 x 的 y 次幂的值。</span><span class="token comment">// parseInt() 函数可解析一个字符串，并返回一个整数。（第二个参数取值2-36，省略该参数或其值为 0，则数字将以 10 为基础来解析。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用SVG实现边框特效及绘制图形</title>
      <link href="/2020/06/16/%E4%BD%BF%E7%94%A8SVG%E5%AE%9E%E7%8E%B0%E8%BE%B9%E6%A1%86%E7%89%B9%E6%95%88%E5%8F%8A%E7%BB%98%E5%88%B6%E5%9B%BE%E5%BD%A2/"/>
      <url>/2020/06/16/%E4%BD%BF%E7%94%A8SVG%E5%AE%9E%E7%8E%B0%E8%BE%B9%E6%A1%86%E7%89%B9%E6%95%88%E5%8F%8A%E7%BB%98%E5%88%B6%E5%9B%BE%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h2><ul><li><p>SVG 指可伸缩矢量图形 (Scalable Vector Graphics)</p></li><li><p>SVG 用来定义用于网络的基于矢量的图形</p></li><li><p>SVG 使用 XML 格式定义图形</p></li><li><p>SVG 图像在放大或改变尺寸的情况下其图形质量不会有所损失</p></li><li><p>SVG 是万维网联盟的标准</p></li><li><p>SVG 与诸如 DOM 和 XSL 之类的 W3C 标准是一个整体</p><h2 id="SVG绘制矩形和圆角矩形"><a href="#SVG绘制矩形和圆角矩形" class="headerlink" title="SVG绘制矩形和圆角矩形"></a>SVG绘制矩形和圆角矩形</h2></li><li><p>rect:绘制矩形标签;</p></li><li><p>x:矩形的左侧位置,定义矩形到<svg>左侧的距离是Xpx;</p></li><li><p>y:矩形的顶端位置,定义矩形到<svg>顶部的距离是Ypx;</p></li><li><p>rx/ry:是圆角半径;</p></li><li><p>style:</p></li><li><p>fill:填充颜色;</p></li><li><p>fill-opacity:填充颜色透明度;</p></li><li><p>stroke:描边颜色;</p></li><li><p>stroke-Width:描边宽度;</p></li><li><p>stroke-opacity:描边透明度;</p><h2 id="SVG绘制椭圆–"><a href="#SVG绘制椭圆–" class="headerlink" title="SVG绘制椭圆–"></a>SVG绘制椭圆–</h2></li><li><p>ellipse:绘制椭圆标签;</p></li><li><p>cx:定义椭圆中心的X坐标;</p></li><li><p>cy:定义椭圆中心的Y坐标;</p></li><li><p>rx:定义椭圆的水平半径;</p></li><li><p>ry:定义椭圆的垂直半径;</p><h2 id="SVG绘制直线–"><a href="#SVG绘制直线–" class="headerlink" title="SVG绘制直线–"></a>SVG绘制直线–</h2></li><li><p>line:绘制直线标签;</p></li><li><p>x1:直线起始点X坐标;</p></li><li><p>y1:直线起始点Y坐标;</p></li><li><p>x2:直线终止点X坐标;</p></li><li><p>y2:直线终止点Y坐标;</p><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><style>  .svg-main {    width: 200px;  }  svg {    width: 200px;    height: 50px;    margin-bottom: 20px;    background: #444;    cursor: default;  }  rect#shape {    fill: transparent;    stroke: white;    stroke-width: 6px;    stroke-dasharray: 0 500;    stroke-dashoffset: 0;    transition: 0.5s ease;    /* animation:dong 2s ease-in-out infinite alternate;  */  }  svg:hover #shape {    stroke-dasharray: 500 0;    stroke-width: 6px;    stroke: rgb(32, 213, 226);  }  @keyframes dong {    100% {      stroke-dasharray: 500 0;      stroke-width: 6px;      /* stroke-dashoffset:-250;  */      stroke: white;    }  }  rect#one {    fill: transparent;    stroke: yellowgreen;    stroke-width: 6px;    stroke-dasharray: 0 500;    stroke-dashoffset: 250;    animation: dong1 2s ease-in-out infinite alternate;  }  @keyframes dong1 {    100% {      stroke-dasharray: 500 0;      stroke-width: 6px;      /* stroke-dashoffset:0;  */      stroke: greenyellow;    }  }  rect#two {    fill: transparent;    stroke: rgb(233, 43, 43);    stroke-width: 6px;    stroke-dasharray: 200 300;    stroke-dashoffset: 250;    animation: dong2 2s ease-in-out infinite alternate;  }  @keyframes dong2 {    100% {      stroke-dasharray: 200 0;      stroke-width: 6px;      /* stroke-dashoffset:0;  */      stroke: rgb(233, 43, 43);    }  }  rect#three {    fill: transparent;    stroke: rgb(233, 220, 43);    stroke-width: 6px;    stroke-dasharray: 50 450;    stroke-dashoffset: 50;    animation: dong3 2s ease-in-out infinite alternate;  }  rect#threes {    fill: transparent;    stroke: rgb(233, 103, 43);    stroke-width: 6px;    stroke-dasharray: 50 450;    stroke-dashoffset: -200;    animation: dong3 2s ease-in-out infinite alternate;  }  @keyframes dong3 {    100% {      stroke-dasharray: 500 0;      stroke-width: 6px;      /* stroke-dashoffset:-250;  */      stroke: rgb(233, 220, 43);    }  }  rect#four {    fill: transparent;    stroke: skyblue;    stroke-width: 6px;    stroke-dasharray: 50 450;    stroke-dashoffset: 150;    transition: 0.5s ease;    /* animation:dong4 2s ease infinite alternate;  */  }  svg:hover #four {    stroke-dasharray: 250 250;  }  rect#fours {    fill: transparent;    stroke: blue;    stroke-width: 6px;    stroke-dasharray: 50 450;    stroke-dashoffset: 200;    transition: 0.5s ease;    /* animation:dong4s 2s ease infinite alternate;  */  }  svg:hover #fours {    stroke-dasharray: 250 50;  }  @keyframes dong4 {    100% {      stroke-dasharray: 250 250;    }  }  @keyframes dong4s {    100% {      stroke-dasharray: 250 50;    }  }  text {    fill: white;    font-size: 30px;    transition: 0.5s linear;  }  svg:hover text {    fill: rgb(30, 129, 223);  }  svg:hover .four {    fill: rgb(231, 105, 21);  }  #five {    fill: transparent;    stroke: rgb(255, 0, 179);    stroke-width: 6px;    stroke-dasharray: 50 400;    stroke-dashoffset: -75;    stroke-opacity: 0;    animation: dong5 1s linear infinite alternate;  }  @keyframes dong5 {    100% {      stroke-opacity: 1;      stroke: rgb(192, 44, 180);      stroke-dasharray: 50 20;    }  }  #six {    fill: transparent;    stroke: rgb(0, 255, 21);    stroke-width: 6px;    stroke-dasharray: 50 400;    stroke-dashoffset: 50;    animation: dong6 1s linear infinite alternate;  }  @keyframes dong6 {    100% {      stroke: rgb(231, 250, 59);      stroke-dasharray: 20 1;    }  }  rect#svg-border {    fill: transparent;    stroke: white;    stroke-width: 6px;    stroke-dasharray: 0, 200, 0, 50, 0, 200, 0, 50;    stroke-dashoffset: 0;    transition: all .3s ease;  }  svg:hover #svg-border {    stroke-dasharray: 200, 0, 50, 0, 200, 0, 50, 0;    stroke-width: 6px;    stroke: #58bc58;  }</style><main class="">  <svg>    <rect id="shape" height="50" width="200"></rect>    <text x="70" y="35"><a href="###">百度</a></text>  </svg>  <svg>    <rect id="one" height="50" width="200"></rect>  </svg>  <svg>    <rect id="two" height="50" width="200"></rect>  </svg>  <svg>    <rect id="three" height="50" width="200"></rect>    <rect id="threes" height="50" width="200"></rect>  </svg>  <svg>    <rect id="fours" height="50" width="200"></rect>    <rect id="four" height="50" width="200"></rect>    <text class="four" x="70" y="35"><a href="###">淘宝</a></text>  </svg>  <svg>    <rect id="five" height="50" width="200"></rect>  </svg>  <svg>    <rect id="six" height="50" width="200"></rect>  </svg>  <svg>    <rect id="svg-border" height="50" width="200"></rect>    <text x="55" y="35"><a href="###">四边框</a></text>  </svg>  <svg>    <circle cx="100" cy="25" r="20" stroke="orange" stroke-width="6" fill="#ff5" />  </svg>  <svg>    <rect x="25" y="10" width="150" height="30" style="fill:#ccc; stroke:orange; stroke-width:5px;" />  </svg>  <svg>    <rect x="25" y="10" rx="15" ry="15" width="150" height="30"      style="fill:#ccc; stroke:orange; stroke-width:5px; stroke-opacity:.5; fill-opacity:.9;" />  </svg>  <svg >     <line x1="5" y1="5" x2="190" y2="40" style="stroke:rgba(255, 0, 0, .5); stroke-width:5px;" />   </svg>  <svg>     <ellipse cx="100" cy="25" rx="50" ry="15" stroke="orange" stroke-width="5" fill="#000" fill-opacity=".5" />   </svg></main></li></ul><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">body,    html</span> <span class="token punctuation">&#123;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>      <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>      <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>      <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> #696969<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">main</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> #444<span class="token punctuation">;</span>      <span class="token property">cursor</span><span class="token punctuation">:</span> default<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#shape</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 0 500<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s ease<span class="token punctuation">;</span>      <span class="token comment">/* animation:dong 2s ease-in-out infinite alternate;    */</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg:hover #shape</span> <span class="token punctuation">&#123;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 500 0<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>32<span class="token punctuation">,</span> 213<span class="token punctuation">,</span> 226<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 500 0<span class="token punctuation">;</span>        <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>        <span class="token comment">/* stroke-dashoffset:-250;    */</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#one</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> yellowgreen<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 0 500<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 250<span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> dong1 2s ease-in-out infinite alternate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong1</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 500 0<span class="token punctuation">;</span>        <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>        <span class="token comment">/* stroke-dashoffset:0;    */</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> greenyellow<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#two</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 43<span class="token punctuation">,</span> 43<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 200 300<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 250<span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> dong2 2s ease-in-out infinite alternate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong2</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 200 0<span class="token punctuation">;</span>        <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>        <span class="token comment">/* stroke-dashoffset:0;    */</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 43<span class="token punctuation">,</span> 43<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#three</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 220<span class="token punctuation">,</span> 43<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 450<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 50<span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> dong3 2s ease-in-out infinite alternate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#threes</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 103<span class="token punctuation">,</span> 43<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 450<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> -200<span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> dong3 2s ease-in-out infinite alternate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong3</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 500 0<span class="token punctuation">;</span>        <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>        <span class="token comment">/* stroke-dashoffset:-250;    */</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 220<span class="token punctuation">,</span> 43<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#four</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 450<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 150<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s ease<span class="token punctuation">;</span>      <span class="token comment">/* animation:dong4 2s ease infinite alternate;    */</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg:hover #four</span> <span class="token punctuation">&#123;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 250 250<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#fours</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 450<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 200<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s ease<span class="token punctuation">;</span>      <span class="token comment">/* animation:dong4s 2s ease infinite alternate;    */</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg:hover #fours</span> <span class="token punctuation">&#123;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 250 50<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong4</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 250 250<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong4s</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 250 50<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">text</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s linear<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg:hover text</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>30<span class="token punctuation">,</span> 129<span class="token punctuation">,</span> 223<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg:hover .four</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>231<span class="token punctuation">,</span> 105<span class="token punctuation">,</span> 21<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#five</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 179<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 400<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> -75<span class="token punctuation">;</span>      <span class="token property">stroke-opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> dong5 1s linear infinite alternate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong5</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>192<span class="token punctuation">,</span> 44<span class="token punctuation">,</span> 180<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 20<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#six</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 21<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 400<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 50<span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> dong6 1s linear infinite alternate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong6</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>231<span class="token punctuation">,</span> 250<span class="token punctuation">,</span> 59<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 20 1<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#svg-border</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 0<span class="token punctuation">,</span> 200<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 50<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 200<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 50<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> all .3s ease<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg:hover #svg-border</span> <span class="token punctuation">&#123;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 200<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 50<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 200<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 50<span class="token punctuation">,</span> 0<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> #58bc58<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>shape<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>70<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>###<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>one<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>two<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>three<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>threes<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fours<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>four<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>four<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>70<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>###<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>淘宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>five<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>six<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>svg-border<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>###<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>四边框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>orange<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#ff5<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>150<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">fill</span><span class="token punctuation">:</span>#ccc<span class="token punctuation">;</span> <span class="token property">stroke</span><span class="token punctuation">:</span>orange<span class="token punctuation">;</span> <span class="token property">stroke-width</span><span class="token punctuation">:</span>5px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">rx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span> <span class="token attr-name">ry</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>150<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>        <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">fill</span><span class="token punctuation">:</span>#ccc<span class="token punctuation">;</span> <span class="token property">stroke</span><span class="token punctuation">:</span>orange<span class="token punctuation">;</span> <span class="token property">stroke-width</span><span class="token punctuation">:</span>5px<span class="token punctuation">;</span> <span class="token property">stroke-opacity</span><span class="token punctuation">:</span>.5<span class="token punctuation">;</span> <span class="token property">fill-opacity</span><span class="token punctuation">:</span>.9<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>line</span> <span class="token attr-name">x1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">y1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">x2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>190<span class="token punctuation">"</span></span> <span class="token attr-name">y2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">stroke</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">stroke-width</span><span class="token punctuation">:</span>5px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ellipse</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span> <span class="token attr-name">rx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">ry</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>orange<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#000<span class="token punctuation">"</span></span> <span class="token attr-name">fill-opacity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.5<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SVG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SVG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React Native for Windows 0.61 起步</title>
      <link href="/2020/05/14/01-React-Native-Windows%E4%B9%8B%E8%B5%B7%E6%AD%A5/"/>
      <url>/2020/05/14/01-React-Native-Windows%E4%B9%8B%E8%B5%B7%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h1><ul><li><p>Windows 10</p><h1 id="开发依赖"><a href="#开发依赖" class="headerlink" title="开发依赖"></a>开发依赖</h1></li><li><p>安装 Visual Studio 2019</p></li><li><p>安装 Visual Studio 2019 的这些选项</p><ul><li>工作负载 -&gt; 通用 Windows 平台开发 -&gt; 勾选可选项里的 “C++ (v141)通用 Windows 平台工具”</li><li>工作负载 -&gt; 使用 C++ 的桌面开发</li><li>单个组件 -&gt; 编译器、生成工具和运行时 -&gt; MSVC v141 – VS 2017 C++ x64/x86 生成工具(v14.16)</li><li>单个组件 -&gt; 编译器、生成工具和运行时 -&gt; MSVC v141 – VS 2017 C++ ARM64 生成工具(v14.16)</li><li>单个组件 -&gt; 开发活动 -&gt; Node.js 开发工具</li><li>预计安装所需空间大小：21.64GB<h1 id="安装-React-Native-的开发依赖"><a href="#安装-React-Native-的开发依赖" class="headerlink" title="安装 React Native 的开发依赖"></a>安装 React Native 的开发依赖</h1></li></ul></li><li><p>安装标准的 React Native 开发依赖，中文文档</p></li><li><p>安装 node.js，确保node的版本是12.9.1或是更高，12.9.1是构建 React Native for Windows 推荐的版本</p></li><li><p>安装 Chrome，用于调式JS,可选</p></li><li><p>安装 Yarn，可选安装，如果你想为 react-native-windows 添砖加瓦则续安装</p><h1 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h1></li><li><p>如果在运行应用程序后，打包程序未更新或应用程序未显示 React Native 内容-请关闭打包程序命令提示符窗口，并确保该应用程序已打开，然后运行 yarn start 并再次从 Visual Studio 运行该应用程序。</p></li><li><p>如果您在UWP应用程序窗口中看到带有错误消息：的红色错误框，请 ERROR: Instance failed to start. A connection with the server cannot be established 确保您正在使用打包 yarn start 程序运行，然后再次运行该应用程序。</p><h1 id="安装-React-Native-for-Windows"><a href="#安装-React-Native-for-Windows" class="headerlink" title="安装 React Native for Windows"></a>安装 React Native for Windows</h1></li><li><p>在需要创建项目的目录下面执行 <code>react-native init</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">npx react<span class="token operator">-</span>native init <span class="token operator">&lt;</span>project name<span class="token operator">></span> <span class="token operator">--</span>version <span class="token operator">^</span><span class="token number">0.61</span><span class="token number">.5</span><span class="token comment">// npx 还能避免全局安装的模块,安装模块时会下载到一个临时目录，使用以后再删除</span><span class="token comment">// –version ^0.61.5 指定版本号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="安装-Windows-扩展"><a href="#安装-Windows-扩展" class="headerlink" title="安装 Windows 扩展"></a>安装 Windows 扩展</h1></li><li><p>安装 React Native for Windows 软件包</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">cd <span class="token operator">&lt;</span>project name<span class="token operator">></span> npx react<span class="token operator">-</span>native<span class="token operator">-</span>windows<span class="token operator">-</span>init <span class="token operator">--</span>overwrite<span class="token comment">// 切换到创建项目的目录下面然后安装</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="运行-React-Native-Windows-应用"><a href="#运行-React-Native-Windows-应用" class="headerlink" title="运行 React Native Windows 应用"></a>运行 React Native Windows 应用</h1></li><li><p>运行前确保浏览器已经打开</p></li><li><p>在 VS Code 中运行</p><ul><li>安装 VS Code 插件： React Native Tools</li><li>在应用程根目录创建文件 .vscode/launch.json，并粘贴如下内容<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>    <span class="token string">"version"</span><span class="token operator">:</span> <span class="token string">"0.2.0"</span><span class="token punctuation">,</span>    <span class="token string">"configurations"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"Debug Windows"</span><span class="token punctuation">,</span>            <span class="token string">"cwd"</span><span class="token operator">:</span> <span class="token string">"$&#123;workspaceFolder&#125;"</span><span class="token punctuation">,</span>            <span class="token string">"type"</span><span class="token operator">:</span> <span class="token string">"reactnative"</span><span class="token punctuation">,</span>            <span class="token string">"request"</span><span class="token operator">:</span> <span class="token string">"launch"</span><span class="token punctuation">,</span>            <span class="token string">"platform"</span><span class="token operator">:</span> <span class="token string">"windows"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js">npx react<span class="token operator">-</span>native run<span class="token operator">-</span>windows<span class="token comment">// 第一次启动会有点慢，安装后会淡出一个命令提示符窗口，请按回车以继续</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>按 “r” 键可以重载应用</p></li></ul><h1 id="在-Visual-Studio-中运行"><a href="#在-Visual-Studio-中运行" class="headerlink" title="在 Visual Studio 中运行"></a>在 Visual Studio 中运行</h1><ul><li>在 Visual Studio 中打开解决方案文件（如：”\windowsAppDemo\windows\windowsAppDemo.sln”）</li><li>如果 Visual Studio 显示无法加载，可以关闭 Visual Studio 然后重新打开</li><li>在项目目录项目下打开命令行提示符运行yarn start</li><li>在 Visual Studio 中的菜单下面选 Debug -&gt; x64 -&gt; 本地计算机（点击绿色三角按钮启动）<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/welcome-react-native-for-windows.png" alt="应用运行成功截图"><!-- 应用运行成功截图 --></li></ul>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React Native </tag>
            
            <tag> React-Native-Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用正则表达式</title>
      <link href="/2020/05/14/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2020/05/14/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="匹配数字或版本号"><a href="#匹配数字或版本号" class="headerlink" title="匹配数字或版本号"></a>匹配数字或版本号</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// a.b（eg: 1.0, 1.100, 甚至 1.1000）</span><span class="token comment">// a.b.c (eg: 1.1.1, 1.12.1, 甚至 1.121.1)</span><span class="token comment">// a（a可能>5位）</span><span class="token comment">// 不限长度版本</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\d+$|^\d+\.\d+$|^\d+(\.\d+)&#123;1,2&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span><span class="token comment">// 限制长度（每一位版本号应该是一位数）</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\d$|^\d\.\d$|^\d(\.\d)&#123;1,2&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="正数的正则表达式"><a href="#正数的正则表达式" class="headerlink" title="正数的正则表达式"></a>正数的正则表达式</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 正数的正则表达式(包括0，小数保留两位)：</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^((0&#123;1&#125;\.\d&#123;1,2&#125;)|([1-9]\d*\.&#123;1&#125;\d&#123;1,2&#125;)|([1-9]+\d*)|0)$</span><span class="token regex-delimiter">/</span></span><span class="token comment">// 正数的正则表达式(不包括0，小数保留两位)：</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^((0&#123;1&#125;\.\d&#123;1,2&#125;)|([1-9]\d*\.&#123;1&#125;\d&#123;1,2&#125;)|([1-9]+\d*))$</span><span class="token regex-delimiter">/</span></span><span class="token comment">// 正整数的正则表达式(包括0)：</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[+]&#123;0,1&#125;(\d+)$</span><span class="token regex-delimiter">/</span></span><span class="token comment">// 正整数的正则表达式(不包括0)：</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9]\d*$</span><span class="token regex-delimiter">/</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="折扣正则表达式"><a href="#折扣正则表达式" class="headerlink" title="折扣正则表达式"></a>折扣正则表达式</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 折扣（0-1）的小数的正则表达式(包括1)：</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(0\.\d+|1)$</span><span class="token regex-delimiter">/</span></span><span class="token comment">// 折扣（0-1）的小数的正则表达式(不包括1)：</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(0\.\d+)$</span><span class="token regex-delimiter">/</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 正则 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>抽象组件实现节流/防抖</title>
      <link href="/2020/05/04/%E6%8A%BD%E8%B1%A1%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81and%E9%98%B2%E6%8A%96/"/>
      <url>/2020/05/04/%E6%8A%BD%E8%B1%A1%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81and%E9%98%B2%E6%8A%96/</url>
      
        <content type="html"><![CDATA[<h1 id="节流-防抖"><a href="#节流-防抖" class="headerlink" title="节流/防抖"></a>节流/防抖</h1><ul><li>节流：<ul><li>一个函数执行一行后，只有大于设定的执行周期后才会被执行第二次(点击事件)</li><li>有个需要频繁触发的函数，出于优化性能角度，在规定时间内，只让函数触发的第一次生效后面不生效</li></ul></li><li>防抖：<ul><li>一个需要频繁触发的函数，在规定时间内，只让最后一次生效，前面不生效<h1 id="Vue实现函数防抖组件"><a href="#Vue实现函数防抖组件" class="headerlink" title="Vue实现函数防抖组件"></a>Vue实现函数防抖组件</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 组件</span><span class="token keyword">const</span> <span class="token function-variable function">throttle</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> wait <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">,</span> isDebounce<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> timer  <span class="token keyword">let</span> lastCall <span class="token operator">=</span> <span class="token number">0</span>  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>isDebounce<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>      timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> params<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> lastCall <span class="token operator">&lt;</span> wait<span class="token punctuation">)</span> <span class="token keyword">return</span>      lastCall <span class="token operator">=</span> now      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> params<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">"Throttle"</span><span class="token punctuation">,</span>  abstract<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    time<span class="token operator">:</span> Number<span class="token punctuation">,</span>    events<span class="token operator">:</span> String<span class="token punctuation">,</span>    isDebounce<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>eventKeys <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>originMap <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>throttledMap <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">.</span>default<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>eventKeys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> target <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on<span class="token punctuation">[</span>key<span class="token punctuation">]</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>originMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>throttledMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>throttledMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>originMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> target        <span class="token keyword">this</span><span class="token punctuation">.</span>throttledMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">throttle</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>time<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>isDebounce<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>        vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>throttledMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> vnode  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 通过第三个参数 isDebounce来控制切换防抖节流</span><span class="token comment">// 在 main.js 引入</span><span class="token keyword">import</span> Throttle <span class="token keyword">from</span> <span class="token string">"./Throttle"</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"Throttle"</span><span class="token punctuation">,</span> Throttle<span class="token punctuation">)</span><span class="token comment">// 使用</span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>Throttle <span class="token operator">:</span>timer<span class="token operator">=</span><span class="token string">"1000"</span> events<span class="token operator">=</span><span class="token string">"click"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>botton @click<span class="token operator">=</span><span class="token string">"onClick($event, 1)"</span><span class="token operator">></span>click <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>val<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>botton<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>Throttle<span class="token operator">></span>  <span class="token operator">&lt;</span>Throttle <span class="token operator">:</span>timer<span class="token operator">=</span><span class="token string">"1000"</span> events<span class="token operator">=</span><span class="token string">"click"</span> <span class="token operator">:</span>isDebounce<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>botton @click<span class="token operator">=</span><span class="token string">"onAdd"</span><span class="token operator">></span>click <span class="token operator">+</span> <span class="token number">3</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>val<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>botton<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>Throttle<span class="token operator">></span>  <span class="token operator">&lt;</span>Throttle <span class="token operator">:</span>timer<span class="token operator">=</span><span class="token string">"3300"</span> events<span class="token operator">=</span><span class="token string">"mouseleave"</span> <span class="token operator">:</span>isDebounce<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>botton @mouseleave<span class="token punctuation">.</span>prevent<span class="token operator">=</span><span class="token string">"onAdd"</span><span class="token operator">></span>click <span class="token operator">+</span> <span class="token number">3</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>val<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>botton<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>Throttle<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  el<span class="token operator">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      val<span class="token operator">:</span> <span class="token number">0</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token parameter">$ev<span class="token punctuation">,</span>val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function">onAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">+=</span> <span class="token number">3</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="实现一个防抖函数"><a href="#实现一个防抖函数" class="headerlink" title="实现一个防抖函数"></a>实现一个防抖函数</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 在第一次触发事件时，不立即执行，而是在给定的时间值后，如果没有再次触发就执行，如果触发了，就取消当前的计时，然后重新计时</span><span class="token comment">/** *  * @param &#123;Function&#125; fn 需要防抖的函数 * @param &#123;Number&#125; delay 毫秒，防抖时间值 */</span><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">300</span></span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> delay<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h1 id="实现一个节流函数"><a href="#实现一个节流函数" class="headerlink" title="实现一个节流函数"></a>实现一个节流函数</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 类似控制阀门定期开放的函数，即让函数执行一次后，在间隔的时间里暂时失效不能再次执行，等过了间隔时间又重新激活（相当于冷却时间）</span><span class="token comment">/** *  * @param &#123;Function&#125; fn 需要节流的函数 * @param &#123;Number&#125; delay 毫秒，节流间隔时间值 */</span><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">300</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> valid <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>valid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 休息时间，不执行函数</span>      <span class="token keyword">return</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 工作时间，执行函数，并且在间隔期间内把状态设为无效</span>    valid <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      valid <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 节流/防抖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git分支管理策略</title>
      <link href="/2020/03/02/Git%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86%E7%AD%96%E7%95%A5/"/>
      <url>/2020/03/02/Git%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86%E7%AD%96%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="Git分支管理策略"><a href="#Git分支管理策略" class="headerlink" title="Git分支管理策略"></a>Git分支管理策略</h1><h2 id="一-主分支Master"><a href="#一-主分支Master" class="headerlink" title="一. 主分支Master"></a>一. 主分支Master</h2><ul><li><p>首先，代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。</p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/master.png" alt="master分支"></p></li><li><p>Git主分支的名字，默认叫做Master。它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。</p></li></ul><h2 id="二、开发分支Develop"><a href="#二、开发分支Develop" class="headerlink" title="二、开发分支Develop"></a>二、开发分支Develop</h2><ul><li><p>主分支只用来分布重大版本，日常开发应该在另一条分支上完成。我们把开发用的分支，叫做Develop。</p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/Develop.png" alt="Develop分支"></p></li><li><p>这个分支可以用来生成代码的最新隔夜版本（nightly）。如果想正式对外发布，就在Master分支上，对Develop分支进行”合并”（merge）。</p></li><li><p>Git创建Develop分支的命令：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout <span class="token operator">-</span>b develop master<span class="token comment">//后面是跟一个master说明，创建的develop分支是基于当前的master， 如果当前就在master分支，则可以不写。 如果当前分支HEAD指向的是别的分支，又想基于master分支创建，就必须写master</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>将Develop分支发布到Master分支的命令：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 切换到Master分支</span>git checkout master<span class="token comment">// 对Develop分支进行合并</span>git merge <span class="token operator">--</span>no<span class="token operator">-</span>ff develop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>git merge –no-ff develop 中的 –no-ff 参数是什么意思。默认情况下，Git执行”快进式合并”（fast-farward merge），会直接将Master分支指向Develop分支。</p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/merge1.png" alt="快速marge"></p></li><li><p>使用–no-ff参数后，会执行正常合并(如下图)，在Master分支上生成一个新节点。(更希望使用这种做法，保证版本演进清晰)</p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/merge2.png" alt="正常marge"></p><h2 id="三、临时性分支"><a href="#三、临时性分支" class="headerlink" title="三、临时性分支"></a>三、临时性分支</h2></li><li><p>前面讲到版本库的两条主要分支：Master和Develop。前者用于正式发布，后者用于日常开发。其实，常设分支只需要这两条就够了，不需要其他了。</p></li><li><p>但是，除了常设分支以外，还有一些临时性分支，用于应对一些特定目的的版本开发。临时性分支主要有三种：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 功能（feature）分支</span><span class="token comment">// 预发布（release）分支</span><span class="token comment">// 修补bug（fixbug）分支</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>这三种分支都属于临时性需要，使用完以后，应该删除，使得代码库的常设分支始终只有Master和Develop。</p></li></ul><h2 id="四、-功能分支"><a href="#四、-功能分支" class="headerlink" title="四、 功能分支"></a>四、 功能分支</h2><ul><li><p>功能分支，它是为了开发某种特定功能，从Develop分支上面分出来的。开发完成后，要再并入Develop。</p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/feature-develop.png" alt="功能分支"></p></li><li><p>功能分支的名字，可以采用feature-*的形式命名。</p></li><li><p>创建一个功能分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout <span class="token operator">-</span>b feature<span class="token operator">-</span>x develop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>开发完成后，将功能分支合并到develop分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout developgit merge <span class="token operator">--</span>no<span class="token operator">-</span>ff feature<span class="token operator">-</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>删除feature分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git branch <span class="token operator">-</span>d feature<span class="token operator">-</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="五、预发布分支"><a href="#五、预发布分支" class="headerlink" title="五、预发布分支"></a>五、预发布分支</h2></li><li><p>预发布分支，它是指发布正式版本之前（即合并到Master分支之前），我们可能需要有一个预发布的版本进行测试。</p></li><li><p>预发布分支是从Develop分支上面分出来的，预发布结束以后，必须合并进Develop和Master分支。它的命名，可以采用release-*的形式。</p></li><li><p>创建一个预发布分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout <span class="token operator">-</span>b release<span class="token operator">-</span><span class="token number">1.2</span> develop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>确认没有问题后，合并到master分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout mastergit merge <span class="token operator">--</span>no<span class="token operator">-</span>ff release<span class="token operator">-</span><span class="token number">1.2</span><span class="token comment">// 对合并生成的新节点，做一个标签</span>git tag <span class="token operator">-</span>a <span class="token number">1.2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>再合并到develop分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout developgit merge <span class="token operator">--</span>no<span class="token operator">-</span>ff release<span class="token operator">-</span><span class="token number">1.2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>最后，删除预发布分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git branch <span class="token operator">-</span>d release<span class="token operator">-</span><span class="token number">1.2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="六、修补bug分支"><a href="#六、修补bug分支" class="headerlink" title="六、修补bug分支"></a>六、修补bug分支</h2></li><li><p>最后一种是修补bug分支。软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行bug修补。</p></li><li><p>修补bug分支是从Master分支上面分出来的。修补结束以后，再合并进Master和Develop分支。它的命名，可以采用fixbug-*的形式。</p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/fixbug.png" alt="修补bug分支"></p></li><li><p>创建一个修补bug分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout <span class="token operator">-</span>b fixbug<span class="token operator">-</span><span class="token number">0.1</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修补结束后，合并到master分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout mastergit merge <span class="token operator">--</span>no<span class="token operator">-</span>ff fixbug<span class="token operator">-</span><span class="token number">0.1</span>git tag <span class="token operator">-</span>a <span class="token number">0.1</span><span class="token number">.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>再合并到develop分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout developgit merge <span class="token operator">--</span>no<span class="token operator">-</span>ff fixbug<span class="token operator">-</span><span class="token number">0.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>最后，删除”修补bug分支”：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git branch <span class="token operator">-</span>d fixbug<span class="token operator">-</span><span class="token number">0.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些自己的项目规范</title>
      <link href="/2020/02/13/%E4%B8%80%E4%BA%9B%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%A7%84%E8%8C%83/"/>
      <url>/2020/02/13/%E4%B8%80%E4%BA%9B%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h2 id="项目目录规范"><a href="#项目目录规范" class="headerlink" title="项目目录规范"></a>项目目录规范</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">└─Code├─www<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com│ ├─project1│ ├─project2│ └─project3└─www<span class="token punctuation">.</span>xxx1<span class="token punctuation">.</span>com├─project1├─project2└─project3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="项目文件名及项目内命名规范"><a href="#项目文件名及项目内命名规范" class="headerlink" title="项目文件名及项目内命名规范"></a>项目文件名及项目内命名规范</h2><ul><li>组件名，小驼峰：<code>testComponents</code></li><li>函数名，小驼峰：<code>testFunction</code></li><li>类名，横线：<code>test-class</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 项目规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决elment-ui折叠和收缩导航栏延时动画效果</title>
      <link href="/2019/12/12/%E8%A7%A3%E5%86%B3elment-ui%E6%8A%98%E5%8F%A0%E5%92%8C%E6%94%B6%E7%BC%A9%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%BB%B6%E6%97%B6%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/"/>
      <url>/2019/12/12/%E8%A7%A3%E5%86%B3elment-ui%E6%8A%98%E5%8F%A0%E5%92%8C%E6%94%B6%E7%BC%A9%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%BB%B6%E6%97%B6%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="解决elment-ui折叠和收缩导航栏延时动画效果"><a href="#解决elment-ui折叠和收缩导航栏延时动画效果" class="headerlink" title="解决elment-ui折叠和收缩导航栏延时动画效果"></a>解决elment-ui折叠和收缩导航栏延时动画效果</h2><ul><li><p>解决方法：</p><ul><li>最外层包一层div</li><li>通过div类名设置样式穿透<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.layout-aside-menu /deep/ .collapse-transition</span> <span class="token punctuation">&#123;</span>  <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> 0s height<span class="token punctuation">,</span> 0s padding-top<span class="token punctuation">,</span> 0s padding-bottom<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> 0s height<span class="token punctuation">,</span> 0s padding-top<span class="token punctuation">,</span> 0s padding-bottom<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.layout-aside-menu /deep/ .horizontal-collapse-transition</span> <span class="token punctuation">&#123;</span>  <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> 0s width<span class="token punctuation">,</span> 0s padding-left<span class="token punctuation">,</span> 0s padding-right<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> 0s width<span class="token punctuation">,</span> 0s padding-left<span class="token punctuation">,</span> 0s padding-right<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.layout-aside-menu /deep/ .horizontal-collapse-transition .el-submenu__title .el-submenu__icon-arrow</span> <span class="token punctuation">&#123;</span>  <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> 0s<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> 0s<span class="token punctuation">;</span>  <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>补充点：</p><ul><li>stylus的样式穿透 使用 <code>&gt;&gt;&gt;</code><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*   外层 >>> 第三方组件 &#123;    样式  &#125; */</span><span class="token selector">.wrapper >>> .swiper-pagination-bullet-active</span><span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>sass和less的样式穿透 使用 <code>/deep/</code><pre class="line-numbers language-css" data-language="css"><code class="language-css">  <span class="token comment">/*     外层 /deep/ 第三方组件 &#123;      样式    &#125;  */</span><span class="token selector">.wrapper /deep/ .swiper-pagination-bullet-active</span><span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Element-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用git同时提交到两个远程库</title>
      <link href="/2019/11/27/%E4%BD%BF%E7%94%A8git%E5%90%8C%E6%97%B6%E6%8F%90%E4%BA%A4%E5%88%B0%E4%B8%A4%E4%B8%AA%E8%BF%9C%E7%A8%8B%E5%BA%93/"/>
      <url>/2019/11/27/%E4%BD%BF%E7%94%A8git%E5%90%8C%E6%97%B6%E6%8F%90%E4%BA%A4%E5%88%B0%E4%B8%A4%E4%B8%AA%E8%BF%9C%E7%A8%8B%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="使用git同时提交到多个远程库"><a href="#使用git同时提交到多个远程库" class="headerlink" title="使用git同时提交到多个远程库"></a>使用git同时提交到多个远程库</h1><h2 id="法1"><a href="#法1" class="headerlink" title="法1"></a>法1</h2><p>1、添加第一个仓库：<br>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git remote add origin https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token constant">XXX</span><span class="token operator">/</span>xxx<span class="token punctuation">.</span>git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>2、添加第二个仓库：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">git remote set<span class="token operator">-</span>url <span class="token operator">--</span>add origin https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token constant">XXX</span><span class="token operator">/</span>xxx<span class="token punctuation">.</span>git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>如果还有其他仓库，就以此方式继续添加<br>3、提交<pre class="line-numbers language-js" data-language="js"><code class="language-js">git push origin <span class="token operator">--</span>all<span class="token comment">// or</span>git push<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>==================================================================<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// tips：</span><span class="token comment">// 打开.git/config，可以看到这样的配置：</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[remote "origin"]  url = https://gitlab.com/XXX/xxx.git  fetch = +refs/heads/*:refs/remotes/origin/*  url = https://github.com/XXX/xxx.git</span><span class="token template-punctuation string">`</span></span><span class="token comment">// 刚才的命令其实就是添加了这些配置,也可以不用命令行，可以直接编辑该文件，添加对应的url即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="法2"><a href="#法2" class="headerlink" title="法2"></a>法2</h2></li><li>直接添加另一个远程仓库地址<pre class="line-numbers language-js" data-language="js"><code class="language-js">git remote add <span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token punctuation">[</span>远程库地址<span class="token punctuation">]</span>git push <span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token comment">// [name] 取个远程库名并连接远程地址  然后push上去      git默认的[name]为origin</span><span class="token comment">// 如：</span><span class="token comment">// git remote add test https://github.com/XXX/xxx.git</span><span class="token comment">// git push test</span><span class="token comment">// 但是想同步两个远程仓库必须同时push &amp;&amp; pull</span><span class="token comment">// git push origin</span><span class="token comment">// git push test</span><span class="token comment">// git pull origin</span><span class="token comment">// git pull test</span><span class="token comment">// 查看.gigt中的config文件</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[remote "origin"]    url = https://gitlab.com/XXX/xxx.git    fetch = +refs/heads/*:refs/remotes/origin/*[branch "master"]    remote = origin    merge = refs/heads/master[remote "test"]    url = https://github.com/XXX/xxx.git  fetch = +refs/heads/*:refs/remotes/test/*</span><span class="token template-punctuation string">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Taro实现微信小程序登录流程</title>
      <link href="/2019/11/13/%E4%BD%BF%E7%94%A8Taro%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B/"/>
      <url>/2019/11/13/%E4%BD%BF%E7%94%A8Taro%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><pre><code>![小程序登录流程](https://raw.githubusercontent.com/Damao2250/FileTransfer/master/Taro%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B.png)</code></pre><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><pre><code>1. 调用Taro.login()获取登录凭证code；2. 调用Taro.request()将code传到服务器；3. 服务器端调用微信登录校验接口（appid+appsecret+code），获得session_key+openid；4. 服务器端生成AUTH_TICKET（相当于userId），使用AUTH_TICKET为key，session_key+openid为value的形式存在服 务器，并将AUTH_TICKET传送给客户端；5. 客户端本地存储AUTH_TICKET，登录成功！6. 下次登录时可以用AUTH_TICKET传输到服务器端验证登录态是否过期，未过期则登录成功。</code></pre><h2 id="获取用户信息"><a href="#获取用户信息" class="headerlink" title="获取用户信息"></a>获取用户信息</h2><ul><li>获取用户信息一定要用户主动点击按钮授权<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>Button openType<span class="token operator">=</span><span class="token string">"getUserInfo"</span> onGetUserInfo<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>onGetUserInfo<span class="token punctuation">&#125;</span> type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>微信授权登录，获取用户信息<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span><span class="token function">onGetUserInfo</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>detail<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>errMsg <span class="token operator">===</span> “getUserInfo<span class="token operator">:</span>ok”<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    Taro<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        title<span class="token operator">:</span> ‘授权成功，正在登录…’<span class="token punctuation">,</span>        icon<span class="token operator">:</span> ‘none’<span class="token punctuation">,</span>        mask<span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        Taro<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            title<span class="token operator">:</span> ‘未授权<span class="token punctuation">,</span>请授权登录！’<span class="token punctuation">,</span>            icon<span class="token operator">:</span> ‘none’<span class="token punctuation">,</span>            mask<span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul><li><p>Taro 支持使用 <code>async functions</code> 来让开发者获得不错的异步编程体验，开启 <code>async functions</code> 支持需要安装包 <code>@tarojs/async-await</code></p><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ yarn add @tarojs&#x2F;async-await# 或者使用 npm$ npm install –save @tarojs&#x2F;async-await<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>随后在项目入口文件 <code>app.js</code> 中直接 <code>import</code> ，就可以开始使用 <code>async functions</code> 功能了</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// src/app.js</span><span class="token keyword">import</span> ‘@tarojs<span class="token operator">/</span>async<span class="token operator">-</span><span class="token keyword">await</span>’<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>值得注意的事，使用 @tarojs/async-await 一定要记得按照 开发前注意: <a href="https://taro-docs.jd.com/taro/docs/before-dev-remind.html">https://taro-docs.jd.com/taro/docs/before-dev-remind.html</a> 中提示的内容进行操作，否则会出现报错</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Taro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Taro </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
