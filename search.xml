<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JS实用技巧</title>
      <link href="/2022/08/23/JS%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/08/23/JS%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="滚动到页面顶部"><a href="#滚动到页面顶部" class="headerlink" title="滚动到页面顶部"></a>滚动到页面顶部</h2><ul><li>使用 window.scrollTo() 平滑滚动到页面顶部<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">scrollToTop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> top<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> behavior<span class="token operator">:</span> <span class="token string">"smooth"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="滚动到页面底部"><a href="#滚动到页面底部" class="headerlink" title="滚动到页面底部"></a>滚动到页面底部</h2><ul><li>知道页面的高度，也可以平滑滚动到页面底部<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">scrollToBottom</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    top<span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">,</span>    left<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    behavior<span class="token operator">:</span> <span class="token string">"smooth"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="滚动元素到可见区域"><a href="#滚动元素到可见区域" class="headerlink" title="滚动元素到可见区域"></a>滚动元素到可见区域</h2><ul><li>使用 scrollIntoView 将元素滚动到可见区域<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">smoothScroll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  element<span class="token punctuation">.</span><span class="token function">scrollIntoView</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    behavior<span class="token operator">:</span> <span class="token string">"smooth"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="全屏显示元素"><a href="#全屏显示元素" class="headerlink" title="全屏显示元素"></a>全屏显示元素</h2><ul><li>在浏览器中全屏打开某个元素，常用于视频全屏播放<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">goToFullScreen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  element <span class="token operator">=</span> element <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>requestFullscreen<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    element<span class="token punctuation">.</span><span class="token function">requestFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>mozRequestFullScreen<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    element<span class="token punctuation">.</span><span class="token function">mozRequestFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>msRequestFullscreen<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    element<span class="token punctuation">.</span><span class="token function">msRequestFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>webkitRequestFullscreen<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    element<span class="token punctuation">.</span><span class="token function">webkitRequestFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="退出浏览器全屏状态"><a href="#退出浏览器全屏状态" class="headerlink" title="退出浏览器全屏状态"></a>退出浏览器全屏状态</h2><ul><li>这个和全屏显示元素一起使用，退出浏览器全屏状态<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">goExitFullscreen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>exitFullscreen<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    document<span class="token punctuation">.</span><span class="token function">exitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>msExitFullscreen<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    document<span class="token punctuation">.</span><span class="token function">msExitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>mozCancelFullScreen<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    document<span class="token punctuation">.</span><span class="token function">mozCancelFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>webkitExitFullscreen<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    document<span class="token punctuation">.</span><span class="token function">webkitExitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="获取数据类型"><a href="#获取数据类型" class="headerlink" title="获取数据类型"></a>获取数据类型</h2><ul><li>获取变量的数据类型<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">getType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> match <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex"> (\w+)]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>  <span class="token keyword">return</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment">// object</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// array</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// number</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token string">'fatfish'</span><span class="token punctuation">)</span> <span class="token comment">// string</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// boolean</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">fatfish</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token comment">// regexp</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="停止冒泡事件"><a href="#停止冒泡事件" class="headerlink" title="停止冒泡事件"></a>停止冒泡事件</h2><ul><li>防止事件冒泡的方法<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">stopPropagation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  event <span class="token operator">=</span> event <span class="token operator">||</span> window<span class="token punctuation">.</span>event<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>stopPropagation<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    event<span class="token punctuation">.</span>cancelBubble <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="深拷贝一个对象"><a href="#深拷贝一个对象" class="headerlink" title="深拷贝一个对象"></a>深拷贝一个对象</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> deepCopy <span class="token operator">=</span> <span class="token punctuation">(</span>obj<span class="token punctuation">,</span> hash <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Date</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">RegExp</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>hash<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> hash<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span> allDesc <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> cloneObj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span> allDesc<span class="token punctuation">)</span><span class="token punctuation">;</span>  hash<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> cloneObj<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">"object"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      cloneObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      cloneObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> cloneObj<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="确定设备类型"><a href="#确定设备类型" class="headerlink" title="确定设备类型"></a>确定设备类型</h2><ul><li>通过识别浏览器的 userAgent 来确定设备类型<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">isMobile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(iPhone|iPod|Android|ios|iOS|iPad|Backerry|WebOS|Symbian|Windows Phone|Phone)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="判断设备是安卓还是IOS"><a href="#判断设备是安卓还是IOS" class="headerlink" title="判断设备是安卓还是IOS"></a>判断设备是安卓还是IOS</h2><ul><li>除了区分是移动端还是PC端，很多时候我们还需要区分当前设备是Android还是IOS<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">isAndroid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">android</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">isIOS</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">iPhone|iPad|iPod|iOS|Macintosh</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">;</span>  <span class="token keyword">return</span> reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="获取浏览器类型及其版本"><a href="#获取浏览器类型及其版本" class="headerlink" title="获取浏览器类型及其版本"></a>获取浏览器类型及其版本</h2><ul><li>获取浏览器的类型和版本<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">getExplorerInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> t <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> t<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"msie"</span><span class="token punctuation">)</span>    <span class="token operator">?</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//ie &lt; 11</span>        type<span class="token operator">:</span> <span class="token string">"IE"</span><span class="token punctuation">,</span>        version<span class="token operator">:</span> <span class="token function">Number</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">msie ([\d]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>    <span class="token operator">:</span> <span class="token operator">!</span><span class="token operator">!</span>t<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">trident\/.+?rv:(([\d.]+))</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>    <span class="token operator">?</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// ie 11</span>        type<span class="token operator">:</span> <span class="token string">"IE"</span><span class="token punctuation">,</span>        version<span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>    <span class="token operator">:</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> t<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"edge"</span><span class="token punctuation">)</span>    <span class="token operator">?</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> <span class="token string">"Edge"</span><span class="token punctuation">,</span>        version<span class="token operator">:</span> <span class="token function">Number</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">edge\/([\d]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>    <span class="token operator">:</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> t<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"firefox"</span><span class="token punctuation">)</span>    <span class="token operator">?</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> <span class="token string">"Firefox"</span><span class="token punctuation">,</span>        version<span class="token operator">:</span> <span class="token function">Number</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">firefox\/([\d]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>    <span class="token operator">:</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> t<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"chrome"</span><span class="token punctuation">)</span>    <span class="token operator">?</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> <span class="token string">"Chrome"</span><span class="token punctuation">,</span>        version<span class="token operator">:</span> <span class="token function">Number</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">chrome\/([\d]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>    <span class="token operator">:</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> t<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"opera"</span><span class="token punctuation">)</span>    <span class="token operator">?</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> <span class="token string">"Opera"</span><span class="token punctuation">,</span>        version<span class="token operator">:</span> <span class="token function">Number</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">opera.([\d]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>    <span class="token operator">:</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> t<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Safari"</span><span class="token punctuation">)</span>    <span class="token operator">?</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> <span class="token string">"Safari"</span><span class="token punctuation">,</span>        version<span class="token operator">:</span> <span class="token function">Number</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">version\/([\d]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span>    <span class="token operator">:</span> <span class="token punctuation">&#123;</span>        type<span class="token operator">:</span> t<span class="token punctuation">,</span>        version<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="设置cookies"><a href="#设置cookies" class="headerlink" title="设置cookies"></a>设置cookies</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">setCookie</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> expire</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  d<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> expire<span class="token punctuation">)</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>key<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>value<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">;expires=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>d<span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取-cookie"><a href="#获取-cookie" class="headerlink" title="获取 cookie"></a>获取 cookie</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">getCookie</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> cookieStr <span class="token operator">=</span> <span class="token function">unescape</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> arr <span class="token operator">=</span> cookieStr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"; "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> cookieValue <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      cookieValue <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> cookieValue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="删除cookies"><a href="#删除cookies" class="headerlink" title="删除cookies"></a>删除cookies</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">delCookie</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">=;expires=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="生成随机字符串"><a href="#生成随机字符串" class="headerlink" title="生成随机字符串"></a>生成随机字符串</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">randomString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">len</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> chars <span class="token operator">=</span> <span class="token string">"ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz123456789"</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> strLen <span class="token operator">=</span> chars<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  <span class="token keyword">let</span> randomStr <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    randomStr <span class="token operator">+=</span> chars<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> strLen<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> randomStr<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">randomString</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// pfkMfjEJ6x</span><span class="token function">randomString</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token comment">// ce6tEx1km4idRNMtym2S</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="字符串首字母大写"><a href="#字符串首字母大写" class="headerlink" title="字符串首字母大写"></a>字符串首字母大写</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">fistLetterUpper</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">fistLetterUpper</span><span class="token punctuation">(</span><span class="token string">'fatfish'</span><span class="token punctuation">)</span> <span class="token comment">// Fatfish</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="生成指定范围内的随机数"><a href="#生成指定范围内的随机数" class="headerlink" title="生成指定范围内的随机数"></a>生成指定范围内的随机数</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">randomNum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token operator">=></span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span><span class="token function">randomNum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// 6</span><span class="token function">randomNum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token comment">// 11</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="打乱数组的顺序"><a href="#打乱数组的顺序" class="headerlink" title="打乱数组的顺序"></a>打乱数组的顺序</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">shuffleArray</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token number">0.5</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">]</span><span class="token function">shuffleArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// [5, -1, 10, 1]</span><span class="token function">shuffleArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// [1, 10, -1, 5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="从数组中获取随机值"><a href="#从数组中获取随机值" class="headerlink" title="从数组中获取随机值"></a>从数组中获取随机值</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">getRandomValue</span> <span class="token operator">=</span> <span class="token parameter">array</span> <span class="token operator">=></span> array<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">const</span> prizes <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token string">'$100'</span><span class="token punctuation">,</span> <span class="token string">'🍫'</span><span class="token punctuation">,</span> <span class="token string">'🍔'</span> <span class="token punctuation">]</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span>prizes<span class="token punctuation">)</span> <span class="token comment">// 🍫</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span>prizes<span class="token punctuation">)</span> <span class="token comment">// 🍔</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span>prizes<span class="token punctuation">)</span> <span class="token comment">// 🍫</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="格式化货币"><a href="#格式化货币" class="headerlink" title="格式化货币"></a>格式化货币</h2><ul><li>格式化货币的方式有很多，比如这两种方式<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 第一种方法</span><span class="token keyword">const</span> <span class="token function-variable function">formatMoney</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">money</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> money<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">(?!^)(?=(\\d&#123;3&#125;)+</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>money<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">'\\.'</span> <span class="token operator">:</span> <span class="token string">'$'</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">','</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token function">formatMoney</span><span class="token punctuation">(</span><span class="token string">'123456789'</span><span class="token punctuation">)</span> <span class="token comment">// '123,456,789'</span><span class="token function">formatMoney</span><span class="token punctuation">(</span><span class="token string">'123456789.123'</span><span class="token punctuation">)</span> <span class="token comment">// '123,456,789.123'</span><span class="token function">formatMoney</span><span class="token punctuation">(</span><span class="token string">'123'</span><span class="token punctuation">)</span> <span class="token comment">// '123'</span><span class="token comment">// 第二种方式</span><span class="token comment">// 正则表达式让我们很头疼，不是吗？所以我们需要找到一种更简单的方式来格式化货币。</span><span class="token keyword">const</span> <span class="token function-variable function">formatMoney</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">money</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> money<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">formatMoney</span><span class="token punctuation">(</span><span class="token number">123456789</span><span class="token punctuation">)</span> <span class="token comment">// '123,456,789'</span><span class="token function">formatMoney</span><span class="token punctuation">(</span><span class="token number">123456789.123</span><span class="token punctuation">)</span> <span class="token comment">// '123,456,789.123'</span><span class="token function">formatMoney</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span> <span class="token comment">// '123'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p><a href="https://javascript.plainenglish.io/20-simple-but-useful-javascript-coding-techniques-that-you-should-use-23f33bd45325">原文链接</a></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> 实用技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>100-days-from-now</title>
      <link href="/2022/08/22/100-days-from-now/"/>
      <url>/2022/08/22/100-days-from-now/</url>
      
        <content type="html"><![CDATA[<h2 id="leisure-activities"><a href="#leisure-activities" class="headerlink" title="leisure activities"></a>leisure activities</h2><pre class="line-numbers language-none"><code class="language-none">【Question】What kinds of leisure activities are popular in Chian?【Answer】Well, that’s quite an interesting question. To be honest, I would have to say that it really depends.　　For young people like me, I guess the most popular leisure activity would be playing online games. Take the famous online game WOW as an example, as far as I know, the game has more than 20 million users in China.　　On the other hand, for the older generation like my parents, I assume their favorite pastime would be playing Mah-jong, because, as you know, this traditional Chinese game is often regarded not only as a game but also as a good way to socialize with family members or neighbors in China.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">【问题】在中国流行什么样的休闲活动?【回答】这是个很有趣的问题。 老实说，我得说这要视情况而定。　　对于像我这样的年轻人来说，我想最受欢迎的休闲活动应该是玩网络游戏。 以著名的网络游戏《魔兽世界》为例，据我所知，这款游戏在中国拥有超过2000万的用户　　另一方面，对于像我父母这样的老一辈人来说，我认为他们最喜欢的消遣是打麻将，因为，正如你所知道的，在中国，这种传统的中国游戏不仅被认为是一种游戏，而且是与家人或邻居交往的一种好方式。 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Part2&amp;3 事物类（新题）<br>一个有趣的动物<br>Describe an interesting animal</p><p>You should say:</p><p>What the animal is</p><p>When and where you saw it</p><p>What it looked like</p><p>And explain how you feel about the whole experience</p><p>An interesting animal I would like to say is the monkey. As for when and where I saw it, I first saw it when I took a picnic with my parents at zoo around five years ago. The little monkeys looked super cute and energetic. They chased each other around in the cages and grabbed food when the zoo feeder came both in the morning and afternoon. It seemed that they would never run out of their power and energy. When I saw the feeding process through the window, I noticed a small monkey which seemed to be much younger than the others and it looked at me with its sparkling eyes. At that moment, I felt that my heart was melting and I was deeply impressed by the magic connections between human beings and the nature. When it comes to how I feel about the whole experience, I got good kicks out of watching the monkeys scratch themselves. In addition, the most interesting thing I have found is that the little monkey’s eyes were just like the human’s, clearly expressing its feelings and emotions through such sincere eyes. I really miss that trip and I hope that the zookeepers can take better care of them because they are so adorable.</p><p>PART 3</p><p>Do you think animals are important to human life?</p><p>Yes, I do. Animals are supposed to be an inseparable part of human life. On the one hand, livestock and farm animals serve as a source of food for human beings and make people survive. In addition to the function as the food suppler, animals can accompany people and drive away the loneliness of living by themselves. In this way, human beings and animals are indivisible.</p><p>What does a pet bring to your life?</p><p>There are plenty of benefits that a pet can bring to our daily life. As desirable companions, pets can act as a source of happiness both physically and mentally. Raising pets can make our lives much healthier since the high blood pressure and cholesterol can be relieved through physical activities such as walking the dog. Besides, keeping pets can provide spiritual support for the people in modern society in which the competitions are increasingly fierce. Through communications with pets, we are able to release pressure and other negative emotions, thus facilitating our mental status.</p><p>What are the difficulties in raising pets?</p><p>In the process of raising a pet, people tend to encounter a wide range of difficulties, especially in the beginning. For instance, some pets without strict trainings are likely to defecate both at home and in public places, which poses great troubles for their owners for the cleaning. Besides, there are some cases in which puppies and kitties do not follow their owners’ orders and instructions during feeding and cleaning, which requires a huge amount of patience and care from human beings.</p><p>What are the common animals in people’s daily life?</p><p>In our daily life, the pets like puppies and kitties are quite common in people’s houses as favorable companions for them. In addition to the pets, farm animals such as hens, ducks, rabbits and lambs are easy to find in the countryside, which can be one of the sources for people’s food and support the survival of human beings.</p><p>In China, will horses be used in work? Will sailors use horses as tools? What do you think a horse can carry?</p><p>As far as I know, in today’s China, it’s not common to see that the horses are used in the workplaces since they are not best choices in carrying out tasks and undertaking the transportation. Instead, highly efficient machines, such as high-speed vehicles, replace the horses’ positions. However, there are some occasions in which the horses can carry heavy objects in remote rural areas in China due to the lack of available vehicles.</p><p>For these reasons, horses will not be used as ideal tools for sailors as a result of low working efficiency and high costs. As for what a horse can carry, I suppose that inexpensive objects such as daily necessities are able to be afforded by it.</p><p>Are farmers always cruel to animals?</p><p>Although I think farmers are always cruel to their animals, their so called “cruel” actions and behaviors are inevitable as part of their routine work. On the one hand, the biological chain teaches us the fact of survival of the fittest. So it is natural for human beings, the species at the top of the food chain, to regard livestock as one of their food sources. On the other hand, as long as our industries are in operation, the animals are doomed to be negatively influenced since no species can exist without sacrificing nourishment from other species.</p><p>一家成功的小公司<br>Describe a successful small company</p><p>You should say:</p><p>What that company sells</p><p>Where is this company located</p><p>How you got to know about this company</p><p>And explain why is this company successful</p><p>A successful small company I would like to say is the company which sells high-quality cookies run by my cousin. It is located in my neighborhood which is quite far away from the city center since my cousin cannot afford the high rental price of office buildings in the downtown. As for how I got to know about this company, my cousin told me about her innovative and exciting ideas of establishing a company with a combination of her interests, talents as well as the huge market demands. When it comes to why this company is successful, the design and theme of these cookies are really special since my cousin enjoys creating delicately shaped and decorated biscuits for customers to make selections, which are popular especially for personal or public events or celebrations. For example, the company sells cute cookies with an original design incorporating the initials of the bride and groom for weddings. Besides, although it is a small company with only 7 employees, each of them is extremely passionate about their job positions ranging from design and cookie making to customer feedback. From all what I have mentioned, I am convinced that my cousin’s small company is doomed to be expanded in the future with excellent locations and an increasing number of employees.</p><p>PART 3</p><p>What emerging industries do you know?</p><p>Firstly, energy saving and environmental protection have been critical topics of today. Secondly, new medicine can also be regarded as one of the emerging industries. With a comprehensively developed medicine system, the individual nation as well as the whole world can benefit a lot from these pharmaceutical advances. Last but not least, new energy, such as solar energy, geothermal energy and wind energy, has been under development, which should be fully utilized in further research and popularized throughout the world.</p><p>Where are companies often located?</p><p>Generally speaking, companies are often situated in the business strict of downtown because of convenient transportation, which can improve working efficiency to certain extent. Besides, located in high-level office buildings in the city center, the enterprises make it easy for people to find them. More importantly, an excellent location helps boost the company’s reputation.</p><p>What kinds of companies are there in your living area?</p><p>There are not so many enterprises in my living area because my house is quite far away from the city center. As far as I can see, there are some small private companies like travel and rental agencies, which can provide direct assistance for the customers. Also, logistics companies are quite common in the places around me.</p><p>What are important factors in making a company successful?</p><p>There are many factors in making an enterprise successful. Firstly, the company should be persistent and never retreat from setbacks and challenges. Secondly, products with outstanding quality are essential in deciding a company’s destiny. The huge market demand brought by these excellent products are the most important support and backup for the enterprise. Last but not least, a company must have a strong sense of social responsibility, otherwise it is easy for them to fall into traps and be confronted with failure.</p><p>Which do you prefer, family firms or non-family ones?</p><p>If I were to pick, I would go with non-family firms because they will not repel external resources and talents. I feel that working in family firms is likely to undergo enormous restrictions. To be more specific, it is difficult for the outsiders to integrate into the organizations. Besides, since the fate is always decided by family members in such firms, golden business opportunities tend to be missed without absorption of outside talents with extraordinary skills.</p><p>What kinds of qualities should a successful businessman have?</p><p>The qualities that a successful businessman should have are that he or she must possess extraordinary perseverance and vision because it is his or her duty to lead the whole company to engage in business battles. Besides, they should be flexible in making adjustments on strategies so as to be in tune with the times. Moreover, they should have courage and be decisive in making tough decisions after thorough consideration.</p><p>What do you think of charity organizations?</p><p>There are both merits and demerits of charity organizations. As for the benefits, the charitable organizations tend to be well-rounded systems, which provide not only financial support for those in need, but also various training courses to help people make necessary preparations for employment. However, the drawbacks can never be ignored. Some of the charitable organizations are haunted by corruption scandals, which has led the general public to worry about the transparency of the funds. Therefore, if the supervision system is able to be established by relevant administration, these organizations are doomed to play a vital role in alleviating poverty and other urgent issues of today’s world.</p><p>Has the industrial structure ever changed from past to now?</p><p>Yes, the industrial structure has undergone enormous changes from past to now. The over picture has been gradually evolved from labor-intensive, capital-intensive or resource-intensive industries to technology-intensive and knowledge intensive ones. Besides, the information industry has taken the lead with substantial multinational corporations playing vital roles in the industrial reconstruction.</p><p>Is the overall social climate an important factor in a company’s development?</p><p>Yes, the overall climate tends to play a vital role in company’s development. A company’s strategic plans should be under the guidance of the country’s economic environment, which is a critical part of the nation’s overall climate. Therefore, the national and regional economic growth strategies and accompanying policies are destined to exert deep influences on each enterprise’s growth, such as inflation rate and taxation. If the company neglected such orientations, they would put themselves under difficult circumstances.</p><p>不想做的工作<br>Describe a job that you would not want to do You should say:</p><p>What kind of job it was</p><p>How you find out about it</p><p>What kind of people might do this kind of job</p><p>And explain why you would not want to do this job</p><p>A job that I would not like to do is the pilot. As for how I find about it, when I was in primary school, I once watched a short documentary about the daily routine of the pilot with my classmates, which left a deep impression on me. The documentary featured the high standard of being a professional pilot and the intensive and comprehensive trainings that one must undergo before entering this profession. When it comes to what kind of people might be able to do this challenging job, those with super healthy bodies and excellent flight endurance are supposed to be desirable candidates. Moreover, a pilot must be alert and capable of observing huge amounts of information swiftly and making accurate reactions to the ever-changing situations because the flying state might change in every second. Regarding why I would not like to do this job, there are several reasons for that. On the one hand, I am the kind of person who is afraid of heights. Therefore, traveling by plane is likely to make me feel extremely nervous, not to mention driving an aircraft. On the other hand, pilots always work in shifts, which indicates that it is quite common to be on duty for the early flights. Since I am a night owl, I have tremendous difficulty getting up early in the morning. For these reasons, I would not like to be a pilot although I really admire this occupation.</p><p>PART 3</p><p>Do you feel which one is more important to job, interest or salary?</p><p>From my point of view, interest is far more important than salary to a job in the long run. Without interests, a person can hardly get a sense of achievement from one’s job. Then their potentials can never be exploited since they are not willing to be motivated by the jobs that they don’t like. In this way, people should choose to do something they are interested in and willing to devote themselves to this occupation. However, if a job with high salary can solve one’s urgent problems, then choosing that work is highly reasonable.</p><p>Do you think it normal to move to another city for work? Why?</p><p>Nowadays, it seems to be a tendency for young graduates to leave for big cities such as Beijing and Shanghai in China to look for appropriate jobs. So I think that it is normal for the youngsters to move to these cities for work since there are enormous job opportunities for them. Also their horizons can be broadened and they can learn from distinguished models in top companies, which is beneficial for their future career path.</p><p>What kind of job does young people prefer</p><p>As far as I can see, a group of young people are fond of doing challenging jobs such as research and development industry which requires innovation and intelligence. Although these job positions are often loaded with overtime working hours, the workers can be paid with a high salary and gain strong senses of achievement through creative works. In addition, an increasing number of youngsters prefer freedom and do not want to work in office. Therefore, being freelancer is quite popular among the young generation these days.</p><p>Which do you prefer, physical work or mental work?</p><p>If I were to pick, I would probably go with mental work because mental work is paid more and doing challenging intellectual work gives me higher levels of achievement and satisfaction. You know, I feel that doing physical work does not require workers to receive higher education and the academic threshold is relatively low compared with mental work.</p><p>Who has left a deep impact on your career path?</p><p>My supervisor at college left a deep impact on my career path. He is a professional interpreter as well as a university lecturer, which means that he has to keep a balance between interpreting assignments and teaching work. He is really good at both fields and devotes himself to the occupation he loves, which motivates me to be an outstanding person like him. And that’s why I choose to be an interpreter after graduation.</p><p>How do the young keep a balance between work and life?</p><p>On the one hand, the young should improve their working efficiency through full dedication to the tasks and projects during work time. In this way, the job assignments can be completed with high quality and there would be fewer chances for them to work overtime. On the other hand, it is necessary for them to learn to relax themselves devoid of being occupied by job issues during off-work time. For example, it is a good choice to take a trip with family and friends during holidays to catch a break from the bustling world.</p><p>In the past, people usually did a lot of physical work, but now, it is not the case. What are the reasons for that?</p><p>Well, people had to do plenty of physical work in the past because they had no choice but to do all the jobs by human labor. While with the social progress and advancements in science and technology, a large number of machines have been invented and taken the place of many job positions with higher efficiency and quality. In this way, most of physical work do not need to be undertaken by human beings, which makes people’s daily life much easier than before.</p><p>In what other ways do robots replace human labor?</p><p>Firstly, robots can free mankind from arduous and repetitive tasks in factories and other workplaces. For instance, human labor is likely to be substituted by the highly automatic robots in the assembly line. Besides, other kinds of robots such as nursing robots and cleaning ones benefit the whole family greatly since the family members do not need to worry about housework any more.</p><p>Do robots make people’s work much easier?</p><p>Robots definitely make people’s daily work much easier since they exert plenty of positive impacts on human life. On the one hand, these intelligent machines play an indispensable role in space exploration which will usher human beings to the future development and greatly reduce the burdens on scientists. On the other hand, these high-tech products can significantly improve working efficiency since they are capable of accomplishing loads of repetitive tasks for the human beings. As a result, people’s life is doomed to be much easier thanks to these advancements.</p><p>一次兴奋的时候<br>Describe a time when you were very excited</p><p>You should say:</p><p>What you were excited about</p><p>When and where were you excited</p><p>Why you think it is exciting</p><p>And explain how you felt after the excitement</p><p>A time when I was quite excited happened last weekend. Last Saturday, I played board game in a game studio in the city center with my friends. The board game was named Sanguosha, which literally meant legends of three kingdoms and was quite popular among the young generation of China. It was quite like card game, involving a set of cards and game strategies. Without these essential strategies, it’s hardly to win the game. In this way, I tried to rack my minds to come up with distinctive tactics in order to beat my friends, which made me really excited since I was the kind of person who enjoyed the process of overcoming challenges. When it comes to how I felt after the excitement, I got good kicks out of this game and wished to play it again with my friends very soon. Besides, I got strong senses of achievement and satisfaction because I won the game in the end. It is a type of game that can kill time and enhance intimacy between friends since we have to communicate with each other frequently in order to adjust our game strategies. Anyway, after the excitement, I got hooked on it and wished to keep it on my list for leisure.</p><p>PART 3</p><p>How much time do people need to prepare for celebrations?</p><p>It really depends on which kinds of celebrations they need to make preparations for. Like if the celebrations are carried out on a large scale which involve a huge number of people, such as the National Day of a country, then all the parts tend to make plans about that day at least half a year in advance. In this way, all the stages and details can be meticulously taken into consideration. But there are also other cases in which the general public have the chances to celebrate their personal events. Then it is normal for them for spend several days on all these arrangements.</p><p>Do people spend a lot on weddings? Why?</p><p>I believe that people’s expenditures on weddings vary from age to age. For the young generation, it is likely for them to be very concerned with their significant life events, so that they choose to customize everything about the wedding, from the theme to the light. In this way, the payment is supposed to be huge. While for the older generation with totally different consumption views, they tend to make the weddings simple and concise, leading to a proper amount of money spent on such life events.  </p><p>Why do companies sponsor public events?</p><p>As a common marketing technique, the sponsorship of public events by companies can be regarded as a means of expanding the market for their existing products or introducing a new product to the public. Besides, enterprises’ sponsoring is able to gain general support from the public and eliminate possible hostility. Through these activities, relevant information beneficial to the enterprises can be spread to the wider public, showing their power and strength. As a result, a positive image of the company can be efficiently created.</p><p>What personal events do people usually celebrate?</p><p>Generally speaking, it is quite common for people to celebrate their birthdays. Especially for the young generation, they enjoy spending this special day with their intimate friends and beloved ones. Besides, some major life events, such as graduation, marriage and giving birth to a child, are celebrated by ordinary people as a meaningful way of expressing gratitude towards others.</p><p>How do people celebrate their personal events?</p><p>There are a variety of ways for people to celebrate their personal events. For instance, they can invite their close friends and family members to have dinner either at home or in some elegant restaurants. While in today’s modern world, there are some other fashionable alternatives to do the celebrations. For example, an increasing population choose to donate money to some non-profitable organizations, such as PETA, on their birthdays as a meaningful way to make that day memorable in their life.</p><p>一次喜欢的表演<br>Describe a performance that you enjoyed</p><p>You should say:</p><p>What the performance was</p><p>How you find out about it</p><p>Where it took place</p><p>And explain why was the performance enjoyable for you</p><p>A performance that I enjoyed was several pieces of opera sung by a famous baritone of China on a talent show called Super-Vocal, which should be one of the most popular tv shows last year. As for how I found out about it, I have known this singer for quite a long time and I am a crazy fan of classic opera. Therefore, as soon as the news about the performance came out, I could not help myself looking forward to it. When it comes to where it took place, I am not quite sure about the exact location but I know that the whole performance was shot in a well-known theatre in Changsha, a city of Hunan province of China. Since I could not go to the theatre and watch the opera in person, I just enjoyed it at home by myself online. Regarding why this performance made me feel enjoyable, first of all, his voice was really unique, which left a deep impression on me. When I heard the Italian lyrics, although I could not understand the meanings behind them, I felt that he sang with enormous emotions as if his life depended on this performance. Besides, he had intriguing stage presence, which brought valuable highlights to his performance. After listening to his distinctive voice, I felt quite relieved since it gave me a chance to escape from the bustling word in reality.</p><p>PART 3</p><p>Are there any traditional cultural performances in China?</p><p>Yes, of course there are plenty of traditional cultural performances that win great popularity in China. As an ancient folk art in China, shadow play rose to prominence owing to its delicate and vivid model creatures as well as its intriguing stories. In addition, lion dance is popular among the young generation of China, which is normally performed during traditional festivals and important celebrations. For the lion dance, the dancers would demonstrate various types of martial arts through different forms and gestures, which is really impressive.</p><p>Are these performances often shown on TV?</p><p>To be honest, these performances are not often shown on TV in China except for some galas during the festival. This is mainly because that there are no TV programs specialized in showing the traditional cultural performances in this country. Also people in modern society, especially the young generation, are not interested in this type of shows.</p><p>How can these performances be spread to the wider public?</p><p>In today’s modern society, social media and Internet should be fully exploited in spreading these traditional cultural performances. To achieve this goal, the cooperation between online and offline is necessary to reduce the distance between these elegant cultures and the general public. For instance, administrators can take advantage of social media platforms such as Instagram, facebook and weibo in China in order to target and grasp the interests of the young generation. In this way, diverse obstacles can be eliminated in spreading these performances to the wider public.</p><p>How can children benefit from taking part in these performances?</p><p>Through participating in these traditional cultural performances, children can know more about the exquisite traditional culture of their country, so that their national identity and sense of national pride can be cultivated. Besides, with exposure to these impressive performances, they can acquire practical knowledge and skills. For example, kids are able to learn how light and shadow interact with each other through being part of shadow play.</p><p>Should the government fund these performances? If they should, then whether these shows are supposed to be free or not.</p><p>The administration should fund these performances, thus reducing the burden exerted on the organizers and even performers. In this way, they can devote all the time and energy to the content and expression of the traditional cultures, so that the quality of these performances can be enhanced. Moreover, I don’t think that these shows should be free if funded by the government. For one, the ticket fees can be used as part of back-up funds for the organizers, thus relieving the authorities’ pressure to a certain degree. On top of that, through spending proper amount of money watching these excellent performances, the audience tend to feel that they have made some contributions to the culture preservation of their nation, thus enhancing their national identity and sense of pride. Therefore, the shows should not be free.</p><p>很难用的东西<br>Describe something you bought that it is difficult to use at first</p><p>You should say:</p><p>What you bought</p><p>When and why you bought it</p><p>How long it took for you to figure out how it is used</p><p>And explain why this thing was very difficult to use at first</p><p>The thing that I bought that is difficult to use at first is a smart rice cooker, which I bought when I just graduated from college and was about to move to another city for employment last year. Since I was quite good at cooking, I decided that I should buy a new rice cooker in my new apartment so that it was possible for me to make meals by myself at home every day. One of my close friends recommended a type of heating pressure rice cooker that he bought online before. What was special about the cooker was that it was so smart that it could be controlled and operated remotely by smartphone. As for how long it took me to figure out the way it was used, I spent nearly three days learning to use it according to the instruction manuals. When it comes to why this thing was difficult to use at first, the complicated operation interface was supposed to be the main reason. To be honest, I used to regard myself as tech savvy, but it turned out I could not manage to use it properly without referring to the details included in the instruction manuals. Although I finally succeeded in using this smart machine, I become tired of cooking on my own very soon because I was caught up with work and wasn’t in the mood for cooking. Anyway I do wish I could have more free time to make meals with it in the future.</p><p>PART 3</p><p>Is there anything that is difficult to use at first?</p><p>High-tech products must be on the list. For those who know nothing about technological products, learning to use high-tech products at first is supposed to be a torture since they are not interested in the innovative functions of these products at all. But after being familiar with these objects, they tend to feel ok with those smart machines.</p><p>What should companies do if they have designed products difficult to use?</p><p>The companies can do several things to make up for what they have done. Firstly, it is considerate if they can make proper improvements regarding their present products, such as updating the current version or sending the new products after revision to the customers for free. On top of that, they are supposed to make thorough adjustments on the previous design to avoid certain drawbacks next time.</p><p>Why do people buy things that they will never use?</p><p>There are several reasons for that. On the one hand, it is likely for people to buy the things that they don’t need at all on impulse. When they are bombarded with excessive advertisements, they tend to buy these useless things unconsciously. On the other hand, sometimes people buy products they never use due to emotional factors. For certain group of people, their behaviors are easily influenced by personal sentiments. As a result, when they are down in the damps, it is common for them to buy unnecessary things as a means of venting anger or other negative emotions.</p><p>What kinds of products do young people think are useful but old people may not?</p><p>The digital devices like Xbox and PSP are favored by the youngsters since they are really fond of playing video games nowadays. These products can bring them strong senses of satisfaction and pleasure especially when they are plagued by tremendous pressure at school or in the workplace. While for the elderly, they are likely to turn to other ways to entertain themselves, such as taking trips with friends, instead of seeking for pleasure online. As a result, these digital devices may seem useless for the old generation.</p><p>Do you think product instructions are useful for users to use products better?</p><p>It really depends on whether these instruction manuals are reader-friendly or not. Like if there are practical tips included and the words are easy to comprehend, then they absolutely play a vital role in helping users use products well. But if they are written in a complicated way, then they might pose understanding problems for the users, which tends to hinder the whole using process. For instance, I once bought a printer abroad and the instruction manuals were originally in English and then had been translated into Chinese, which were so awkward that I had no idea about what it really meant. In such a case, users might use the products in a more favorable way without instructions.</p><p>收到重要的信息<br>Describe a piece of important news you get from text</p><p>You should say:</p><p>When and where this happed</p><p>What was the news about</p><p>Why was this news important to you</p><p>And explain how you feel about hearing the news</p><p>I’d like to talk about a piece of important news that I received from my friend last year when I was in London. I had an job interview in Paris that weekend and I planned to take a flight to go there from London Getwick airport. When I was ready to leave for the airport, my friend, Esther, texted me a news that all the trainline to the airport was closed because of strike. And she advised me to take the shuttle bus from the underground station to the airport.</p><p>This news was important to me. Because I planned to take a train to the airport and I didn’t reserve time for this kind of emergency. Thanks to my friend’s remind, otherwise, I would waste my time waiting for the train and miss my flight and perhaps even worse, miss my interview.</p><p>As for how I feel about hearing the news, I was shocked at first and didn’t know what to do next. Because I usually leave for the airport by train and I hadn’t meet this kind of situation before. I was afraid that I would miss my flight. Fortunately, my friend gave me a plan B and saved my interview.</p><p>PART 3</p><p>What are the differences between writing and speaking?</p><p>When we are speaking about something, the spoken language is more informal and we could show ourselves more clearly by the help of expression and body language. When we write about something, the written language is more formal and logical.</p><p>Have people changed the ways they communicate with each other?</p><p>I think so. By using mobile phones and the Internet, people could choose more convenient ways to communicate with their family and friends, for example, people can make video calls and send emails. In the past, people can just send letters and it would take months to get reply.</p><p>Do technological advances have a negative impact on communication?</p><p>It’s hard to say. Technological advances do facilitate our life and make it more convenient for people to communicate. While, because of the advanced communication technologies, people spend less time on face to face communicating and pay less attention to people around them.</p><p>What kinds of messages cannot be texted?</p><p>I think the confidential information should not be texted through the Internet. As the insecurity of the Internet, nothing is safe online. The confidential information, for example, private photos and military information should not be texted online.</p><p>Is it a good thing if heads of state sit around and exchange ideas face to face?</p><p>It may promote the relationships and reduce misunderstandings between countries if heads of states sit around and talk to each other face to face. While, some decisions should be discussed with person in charge of different departments and it may take some time to consider. So maybe that’s not a good idea for some important decisions.</p><p>What are the advantages of hand writing and recording things via social media?</p><p>Recording things by hand writing is safer and there’s no need to worry about hackers. While, we could share pictures and videos with friends on social media, even they are in other countries. Social media can make us closer to our friends.</p><p>一个理想的居所<br>Describe a house or apartment that you would like to live in.</p><p>You should say:</p><p>Where this place was</p><p>How this house or apartment looks like</p><p>Who do you want to live with</p><p>And explain why you want to live there</p><p>I’d like to talk about a dream home that I want to live in in the future. It would be a villa, situated in the countryside, where I could see lovely views.</p><p>I want it to be a two-storey house built on a green-covered mountain, facing a blue lake. It would be huge enough for me to throw grand parties. Besides, it would have a home theater, where I can enjoy old films, a fully equipped gym and a beautiful garden.</p><p>To be honest, I’d like to live there alone. It may sound selfish, but I just want to have a private place that belongs to myself. I would invite my parents or friends to live with me sometimes, but I want to be independent and enjoy moment of isolation.</p><p>Lastly, I will tell you about why I want to have it. Once I traveled to the countryside in Widnermere, where is the largest natural lake in England. I was impressed by the breathtaking views. I rent a villa owned by a local wealthy family and stayed there for a week to finish my dissertation. I enjoyed that kind of life. Since then, I just can’t erase the idea of having a such a place from my mind.</p><p>Part3</p><p>Where do people in china like to live, in a house or an apartment?</p><p>The young generation prefer to live in an apartment in the city centre. Because it would be more convenient for them to go to work and go shopping. While, the old generation like to live in a house in the countryside, where they could be close to nature and enjoy the country life.</p><p>What are the benefits of living in a house?</p><p>A house usually has larger space than an apartment. It could be more peace and quiet than living in an apartment without the disturbance of neighborhood. Besides, people could have their own garden to grow some flowers and fruits.</p><p>What`s the disadvantage of living in apartment?</p><p>People have less opportunity to communicate with their neighbor because they hardly meet each other. The sound-proofing is quite bad in apartment and people could sometimes hear noise from next door. Besides, there’s no outdoor space, so people need to go to public park for outdoor activities.</p><p>Where do people like to live, in the city center or the suburbs?</p><p>The young generation prefer to live in the city centre. Because it would be more convenient for them to commute and go shopping. While, the old generation like to live in the countryside, where they could be close to nature and enjoy the country life.</p><p>Why do many people like to live in the city?</p><p>Cities could provide more social opportunities, for example, theatres, concerts and amusement parks. There are different choices for people to kill their time. Besides, the infrastructure is more excellent in cities, comparing with its in countryside, from hospital to traffic.</p><p>What kind of environment is suitable for the old to live in?</p><p>First of all, it should be peace and quiet, where the old could have a good rest. Besides, it should have enough outdoor space where the old could get close to nature and enjoy the fresh air. There should be professional hospitals nearby, in case of emergency.</p><p>What<code>s the different of people</code>s living habits between nowadays and past?</p><p>People in the past live in their own house with small garden, where they can grow flowers and vegetables. While nowadays, people live in high buildings in big cities and have less chance to meet their neighborhood. But I think in the future, more people would prefer to live in the countryside where their can get rid of the pollution in the city.</p><p>Do you think the future homes will be the same as they are now?</p><p>I think future home will be more intelligent and environment-friendly. More artificial intelligence and robots would be used in our house to facilitate our life. The house would be built by recycle materials and more renewable energy would be used to produce electricity.</p><p>What are the differences between the traditional style of houses and modern?</p><p>There are lots of modern facilities and artificial intelligence inside the house nowadays to make our life easier. And the design of modern house are more user-friendly. As for old houses, under the limit of technologies in the past, the design may lack consideration on practicality and user comfort.</p><p>有用的技能<br>Describe a useful skill you have learned</p><p>You should say:</p><p>What skill have you learned</p><p>When and where did you learn this</p><p>Why the skill is useful</p><p>And explain how you feel about this after learning it</p><p>I’d like to talk about driving, which is a practical skill that I learned from the local driving school. When I was 17 years old, I wanted to have the experience of driving a car, and I was fed up with having to walk or take the public transportation whenever I wanted to go somewhere. I also knew that driving would be an extremely useful skill.</p><p>I learnt to drive a car by taking lessons when I was 18. My parents paid for me to have lessons with a professional driving instructor, mr. wong. I learnt by practicing: first I had to learn the basic traffic rules and highway code, and pass the exam. Then I had to get used to steering, changing gears and using the mirrors, then we practiced things like reversing and parking. My instructor, mr. wong, is a very experienced driver. And he is very responsible person. He often used his leisure time to help me practice.</p><p>Being able to drive has helped me in so many years. The public transport where I live isn’t very good. So I travel to work by car most days. Having a car makes my life much easier when it comes to things like shopping or visiting family and friends.</p><p>PART 3 :</p><p>What are some new skills that people nowadays would like to learn?</p><p>Some people prefer to learn new sports skills, for example, playing table tennis, go skiing and diving. They find it could be exciting and it would help them exercise at the same time. Some people prefer to learn a new instrument, for example, playing the piano, playing the guitar and maybe play one kind of traditional Chinese instruments.</p><p>What kinds of skills are difficult to learn?</p><p>I think nothing is difficult if you are interested in that and are willing to spend time on that. The old saying goes that practice makes perfect and we all know the 10,000 hours theory which points out that 10,000 hours of practice results in what we would be considered as a master.</p><p>What is the most important skill in modern society?</p><p>I think social skills are the most important in the modern society. It would be used everywhere, from students in schools to staffs in companies. For example, listening skill is very necessary for groupwork and communication. We need to listen to others opinions and learn to summarize the main ideas.</p><p>What kinds of professions that require many different skills?</p><p>I think kindergarten teachers require many different skills. As I have some friends who work as kindergarten teachers, they need to learn how to sing, dance and play instrument. Besides, they need to learn how to take care of babies and how to deal with a class of screaming kids.</p><p>一篇关于健康的文章<br>Describe an article you read from the internet about health lifestyle  </p><p>You should say:</p><p>When and where was it posted</p><p>What the article was about</p><p>How useful the information was</p><p>And explain how you feel about the article</p><p>I’d like to talk about an article that I read last month that talking about “look younger, live longer”. I read this article from the blog of my favorite fitness blogger, Ms. Lin, who is a professional yoga trainer and has thousands of subscribes on her YouTube channel. I enjoy watching her videos and like to do the exercise following her instruction.</p><p>The article was about some healthy tips on keeping health lifestyle. For example, it pointed out the importance of having a healthy and wholesome breakfast every day, which helps boost our immunity and also helps us go through the day with full energy. I have never skipped breakfast since I’ve read this article and I can concentrate on my work and studies better in the morning than I used to be. It also said that we should have at least one seasonal fruit and vegetable every day. I used to dislike broccoli before I read this article. However, after reading that broccoli is a very good source of protein and is full of nutrients, I started having it regularly.</p><p>I changed some of my lifestyle after I read this article and I feel very fit and healthy and have rarely fallen sick since I made these small changes. I have bookmarked this article and read it often to remind myself keeping health lifestyle. And I also shared it with many of my friends and relatives.</p><p>PART 3</p><p>Do you often reading this genre of magazine?</p><p>I seldom read this genre of magazine which focus on health lifestyle. My parents enjoy reading those and they would convey some useful information to me. I prefer to read entertainment news on the website or my mobile phone.</p><p>What can people do to become much healthier?</p><p>According to my experience, there’s no quick-fix solution to adopting a healthy lifestyle. It’s important to implement small steps and keep up with them consistently, for example, eating nutritious foods, exercising consistently, finding peace of mind and getting plenty of rest.</p><p>What do you think of swimming?</p><p>I think there are a host of benefits people may gain from swimming regularly. For example, swimming could work entire body, from bead to toe, to increase the heart rate without stressing one’s body. Besides, swimming may even help reduce some of the pain or improve the recovery from an injury.</p><p>Would you like to learn swimming in the future?  </p><p>I think so. I am with insomnia and could not have a good rest almost every day. My friends tell me that swimming may help me boost in quality of life and sleep after engaging in regular aerobic exercise. Besides, swimming also be an affordable exercise option compared to some others.</p><p>Why would cars cause pollution?</p><p>There are several reasons. A car emits carbon monoxide when the carbon in fuel doesn’t burn completely. Besides, a car’s exhaust emits hydrocarbons, a toxic compound of hydrogen and carbon. And particulate matter in the air contribute to atmospheric haze and can damage people’s lungs.</p><p>Will people exercise more and eat healthier in the future?</p><p>Sure. People begin to pay more attention to healthy lifestyle and usually have a long list of resolutions which usually includes eating healthier and exercising more. Besides, there’s a Healthy Lifestyle Awareness Day held on the 22nd of February as a reminder for everyone to live healthier lives.</p><p>Is it necessary for people to read healthy magazines?</p><p>Sure. People can get professional information from healthy magazines. From those articles, we could learn how to balance our diet and how to cook a healthy meal. Besides, we could know how to stretch our body without hurting muscles.</p><p>Were people much healthier in the past?</p><p>I don’t think so. Comparing to the past, people live longer and have a higher quality of life. Lots of people begin to aware the importance of healthy lifestyle and start a new year with a long list of resolutions which usually includes eating healthier and exercising more.</p><p>How to tell whether a website is reliable?</p><p>Frankly, I will not totally count on any website. Before acting on any health information I find online, I will talk with my doctor about it, ask for some professional advice. You know, when looking at health information online, your common sense and good judgment will be very important.</p><p>Why do Chinese students feel stressful?</p><p>I think students in every country are stressful. They have to face the stress from their parents, their peers and their teachers. While, Chinese students are extremely stressful especially before they pass the college entrance examination, which would decide the university, the major and even their life in the future.</p><p>Why don’t schools in China teach their students how to keep healthy?</p><p>We have some lessons and reading materials for students to learn how to keep healthy, but schools spend less time on that. They think their jobs are to teach students knowledge and help them pass exams, and parents should take responsibilities to keep student health.</p><p>Why there are plenty of false information in books?</p><p>I guess recently the publishers would like to make more money and pay less attention on the content of books, not to speak of checking the authenticity. Some of writers would like to use appealing ideas to attract readers’ attention and make more money. But sometimes they would use the false information.</p><p>How can government improve people health?</p><p>The government could provide more fitness equipment in public parks where people could exercise in their spare time. Besides, the government could make some TV programs to preach the benefits of healthy lifestyle and show people how to keep health.</p><p>一套制服<br>Describe an uniform you wore when you were a student or at work</p><p>You should say:</p><p>When and where you had to wear this How it looks like</p><p>Why you had to wear this</p><p>And explain how you feel about wearing it</p><p>I’d like to talk about my junior high school uniform. Not like the uniforms in private schools, which are stylish and properly designed, mine is out of date and quite ugly. To be honest, I was unwilling to wear it when I was in junior high school. But today, almost 10 years have passed, it becomes a part a memory for my school life. What makes it special is those signatures all over it, left by my friends and teaches.</p><p>My school uniform was in blue and white, which looked like regular track suits. It was comfortable and flexible for body movement and could be worn both during class time and when doing physical activities such as jogging.</p><p>I had to wear my uniform to school because the school asked us to do so. Every morning there were teachers standing in front of the school gate, checking our appearance.</p><p>As to how I feel about it. Well, it’s more than just a cloth. I asked all my classmates and teachers to sign their names on it. Some of them even wrote their best wishes, which are warm and full of love. I remember each one of them who left their names and best wishes. For me, it’s a priceless collection. Maybe, I will never see some of them again in my life, but the memories will be with me all the time.</p><p>Part3</p><p>Why don’t teachers like to wear the same uniforms as the students?</p><p>If teachers dressed smartly, we respect ourselves, feel confident, look and act confident. But if a teacher is dressed in uniform the students too, that will show them and treat them with respect.</p><p>Why do students wear uniforms?</p><p>School uniform could aid schools in identifying students and help them to keep better track of all of their students outside school. Besides, it could ease student’s morning routines. Students know exactly what they are wearing for the day and having no other choice, greatly reduces the amount of preparation and time that is required on getting ready for school in the morning.</p><p>When do college students wear uniforms?</p><p>There are jobs that require employees to wear uniforms, and others that allow workers to wear their own clothing that adheres to the company’s dress code. Police and military officers, couriers and individuals in the hospitality industry typically wear uniforms, while professionals in law, finance or administrative positions follow a conservative dress code.</p><p>What professions require people to wear uniforms?</p><p>Colleges don’t ask student to wear uniforms. Students could buy hoodies or t-shirts with school logo in school gift shops and wear that on some ceremonies, for example, graduate ceremony or festivals.</p><p>What restrictions do uniforms impose on people?</p><p>Wearing uniforms cause resentment among people. For example in school, the majority of students do not want uniforms. If they are forced to wear them, without taking into consideration of the way that they feel about the situation, then they will begin to resent the school and the administration. This could cause behavior problems throughout the school.</p><p>How do the students feel if their personalities are restricted by uniform?</p><p>Uniforms could interfere with creativity and self-expression. Clothing is a big way that people express who they are and their personal style every day. School uniforms strip students of this right and can make them feel like they are being oppressed.</p><p>Why American students don’t wear costumes</p><p>According to what I know, parents in America spend over one billion dollars per year on school uniforms, and long beach, California was the first city to make all students in all schools wear uniforms. Maybe students in some American schools don’t have to wear uniforms. I think that depends on school rules.</p><p>The Chinese method and American method, which is better?</p><p>It’s hard to tell. Wearing uniforms has advantages and disadvantages. On one hand, wearing uniforms could save ease student’s morning routines and save money for buying clothes. On the other hand, uniforms could interfere with creativity and self-expression and students may fell being oppressed.</p><p>What color would catch people’s attention most</p><p>The both red and yellow color is eye catching colors. The most eye catching color is red. Red is always an eye catching color and powerful color. It is a beautiful color. Red color dress and materials is very eye catching and give very attraction. Red is a happy, attractive and powerful color.</p><p>Part2&amp;3 事物类（原题）<br>长时间准备的礼物<br>Describe a gift that took you a lot of time to prepare</p><p>You should say:</p><p>What it was</p><p>Who you gave it to</p><p>How you prepared it</p><p>And explain why you spent a lot of time preparing it</p><p>Present is a good media for people to keep and strengthen the relationship with others because the time and energy spent on it shows the care and sincerity from the person who prepares it.</p><p>About 3 months ago, it’s my friend Max’s birthday, we are quite close but live in different cities, so I decided to prepare a surprise for him. Everyone hopes his or her presents are the most special and unique then I give up the idea of just buying clothes or electronic devices, but to DIY sth for him.</p><p>His constellation is Cancer, so I bought some red leather online and drew a crab on it, which was easier and more accurate to cut the shape out to be a keyring pendant. The following process was a little hard since I had used about more than 1 week on stitching several pieces of leather together and stuffed some cotton in it to make it plump. I failed several times in the middle though, the final work was satisfied.</p><p>Next step was designing a greeting card with some sweet wishes. Max’s avatar of the chatting app is the logo of superman. Therefore, drawing the same pattern on the card envelop was a good choice. Luckily, I succeed right the first time.</p><p>To be honest, before preparing the gift, I didn’t expect that I am such a scrupulous and romantic person. All my efforts were worth when I heard Max said that it’s the best gift he ever received and he’s almost crying.</p><p>Part3</p><p>How do people usually choose gifts?</p><p>First, people will consider the price. It is important to give right-priced gifts to people. Then people will choose the gifts based on the receivers’ like. People hope the receiver like their gifts and appreciate the gift. If they do not know the receiver well, people will choose some common gifts.</p><p>Why do some people find it hard to choose gifts?</p><p>Because it is difficult to presume others’ interests and demand. People hope the receiver appreciate the gift but different people have different tastes. Besides, the gift can not be over-priced or under-priced. Because the receiver will feel pressure or under appreciated.</p><p>Do you think useful gifts are always more suitable than those useless ones?</p><p>I agree. Useless gifts can only be put as decorations or be put in the storeroom. The gift will lose its value. In contrast, useful gifts can be used very often and the receiver will remember the giver every time he or she use the gift.</p><p>Do people give the same gifts as they did in the past?</p><p>I don’t think so. I think it is impolite to give the same gifts to same person. The receiver would think they were under appreciated and felt not being respected. Therefore, people will not give the same gifts to their friends unless they are asked to do so.</p><p>地区特产.<br>Describe a popular product (e.g. food, handcraft.) made in your region.</p><p>What it is</p><p>How you knew it</p><p>How it is made</p><p>How you feel about this product</p><p>Okay I’d like to tell you about a food that’s originally made in my hometown, which is called Mianqi and it’s a kind of flakes which is made of flour. It’s normally homemade instead of being produced by factories so you can see it nowhere other than home.</p><p>The first time I had tried this food was on a New Year’s Day. My mom made it for the festival and it was surprisingly tasty so each year I ask my mom to make it and it has become a tradition for my family.</p><p>This food is not difficult to make, but yet quite time-consuming. You need to mix the salted water with flour to make a dough and then roll it into pieces and cut them into diamond shapes. After frying for five minutes, you got those crispy, savory flakes which is a perfect companion for soup.</p><p>My mom said she learned this food from her mother so I guess this is a local food. I’m also very willing to learn because obviously this is not something sold in the shop. And I also consider this food as part of the local culture. I’ve heard a saying from a documentary that WE ARE WHAT WE EAT. That means the food, as a symbol of culture, defines who we are. So it’ll be very meaningful to inherit this culture and to probably pass on the love that my mother has to our family.</p><p>Part 3</p><p>What food is popular throughout the world?</p><p>I think Korean food is really popular throughout the world. I have been traveling to many countries so far and I found there were lots of Korean restaurants in almost every country I’ve been to. And all the new friends I met in my trip were so much into Korean food.</p><p>Why do people use imported products?</p><p>Because people could have more choices if they import products from other countries, and they can try something new they couldn’t make domestically. For example, when people want sugar, coffee, chocolate, bananas,pineapples and other tropical crops, those small territories can’t possibly fulfill all of the demand, so they have to import them from elsewhere.</p><p>想与朋友探讨的电影<br>Describe a film you would like to share with your friends</p><p>You should say:</p><p>When you watched it</p><p>Where you watched it</p><p>What it is about</p><p>And explain why you’d like to share it with your friends</p><p>When it comes to a movie I’d like to share with friends, well, the first one pops into my mind is The Legend of White Snake, which is definitely a blockbuster in China. I watched this movie with some of my friends in a cinema many years ago, and I have to say that it left me a deep impression.</p><p>The story is set in the Southern Song Dynasty, a young scholar, Xu Xian, who falls in love with a beautiful woman Bai Suzhen, unaware that she is a white snake which has taken on human form. A monk Fa Hai intervenes in order to save the scholar’s soul and casts the white snake into a deep well at the Leifeng Pagoda. The plot of White Snake is full of magic, history, myth, and legend, which are melded nicely into the movie.</p><p>As for the reason why I’d like to share it with my friends, well, for starters, it is starring Jet Li, who has a terrific acting skill, and it is directed by Xiao Dong Chen, a well-known director and screenwriter in China. Plus, this movie received rave review after it was screened to the public in September, 2011, and it was the highest box office hit of the year. And I guess, it is one of the highest-grossing films in Chinese movie industry. By the end of 2011, it was nominated for the Best Picture Golden Chicken Award, I mean, the Oscar Award in China. Of course, its terrific visual effect and digital special effect shots should be mentioned as well. On top of that, it is really worth remembering the quintessence of Chinese culture, and I think that every Chinese should have this sense of mission and responsibility to help spread Chinese classical literary masterpiece.</p><p>Part 3</p><p>What kinds of film is popular in China?</p><p>I’d like to say, Chinese people really enjoy movies these days. It can be Romantic movies, Sci-fi movies, even Cartoon movies. As Chinese movie industry has developed in recent years, each type of the movies plays in the movie theatre has its own target consumers.</p><p>What kinds of film do young people like to watch?</p><p>I’d suppose romantic movies or those talked about school life. Like college life, when a lot of lovable or heart-broken stories may happen. There are also movies talked about the hard time before the college entrance examination in the high school, which help the young people recall their past time.</p><p>Do you think films have much influence on young people?</p><p>Yes, I do think so. Actually, I think all types of media have this function. Because young people are in their age of experiencing and exploring, they would like to try what the film had shown or go to where the actors had been. So in general, young people are the group of people who may be influenced by others easily.</p><p>How have films changed in the past few years?</p><p>I think they have changed in two ways: the content and the film-making techniques. First, the content is becoming more and more understandable, and it can make people have a similar feeling about their own lives. Second, about the film making technique, with the development of the modern technique, 3D and even 4D have come into our sight. We can have better watching experience now with the same price.</p><p>Fewer people like watching movies than before, do you agree?</p><p>No, I don’t agree. Because from what I have observed, especially in China, people have more dispensable money than the past. When they feel bored or tired, they will go to the movie theatre to relax. So, I think more and more people like watching movies.</p><p>Do you think movie theatre will one day disappear?</p><p>No, I don’t think so. As movie theaters offer better movie experiences like the round sound track and big screens, which people cannot get easily at home, they become irreplaceable. Where there is a need, there is a market, so I think the movie theaters won’t disappear in the future.</p><p>How to improve the quality of a movie?</p><p>It can be improved in the sound, visual pictures and contents. Among all the parts, I think the content always catches me first. Because only a full and touchable content can bring the audience to where the story begins. The visual parts may catch the audience for a while, but it’s the story that last for the longest in their mind.</p><p>跟家人一起的休闲活动<br>Describe a leisure activity you do with your family.</p><p>You should say:</p><p>when this happened</p><p>who you did this activity with</p><p>what this activity was</p><p>and explain how you felt about this activity</p><p>Although me and my parents are all busy working or studying most of the time, every month we would try to squeeze some time to do great things together. Last month, we went to Sheshan forest park for hiking which was truly wonderful.</p><p>This hiking offered us a great chance to get close to nature and unwind. In any case, the water lilies in the lake gardens are so awesome! While staring at them, it’s just breathtaking! The trails surrounding the lake are also topnotch. I must say, they are spotless, with full-time caretakers managing them. Within it, there is a nice balance between lakeside paths, wooden walkways, and forest paths that meander through lush forests and across streams and bridges. Meanwhile, There is an interesting network of trails that weave through this lovely green area, so that we could spend the better part of an afternoon walking them. While strolling inside this forest, you feel like you’re deep in the forest as soon as you enter. The trees, flowers, and the smell would calm you down the entire time.</p><p>In addition, this hiking trip totally brought us closer together. While roaming around the forest, we chatted a lot about our daily life or shared ideas about those stunning views. Everyone got immersed in the rolling hills and lush greenery. I guess I would definitely spend more quality time like this one with my folks in the future.</p><p>Part 3</p><p>What leisure activities are popular in China?</p><p>Sports are quite popular in China, especially for teenagers and young adults. A lot of people can be seen doing workout in the gym every day. Some other sports such as badminton, Ping-Pong and yoga are also preferred by many people. Even those who are not into any kind of intense sports are willing to do some jogging or take a stroll in the evening.</p><p>What leisure activities do young people like?</p><p>Video games are quite popular among Chinese young people recently. A large proportion of teenagers in China play video games very often and they even spend a lot of money on these games. A new word “E-sport” is created especially refers to playing video games. Even some big E-sport competitions are held every year, which attracted hundreds of thousands of teenagers to watch.</p><p>Do leisure activities have to be educational?</p><p>I don’t think they should be educational, as leisure activities are meant to be pleasing and relaxing. I agree that leisure activities are better to be educational, but not necessary.</p><p>Do men and women like different leisure activities?</p><p>In most cases yes. From what I see in my life, most of my male friends like to do more activated things, such as sports, than my female friends. While my female friends are more likely to do some less activated things like reading and watching movies.</p><p>童年玩具<br>Describe a toy you got in your childhood</p><p>You should say:</p><p>What kind of toy it is;</p><p>When you received it;</p><p>How you played it;</p><p>And explain how you felt about it.</p><p>This question reminded me of a few toys that I had as a child, and it was difficult to choose which one to tell you about. I remember having so much fun playing with different toys, but the one that was particularly special to me was a stuffed toy that went with me everywhere. I believe my grandmother gave it to me as a birthday gift when I was about 4 or 5 years old.</p><p>It was a dark brown coloured monkey with really long arms and legs. The monkey had “Velcro” on it’s hands and feet, so that it could be fastened around my neck and my body as if it was cuddling me. I named the monkey Boots after one character in my favourite cartoon and decided it was a boy.  </p><p>From the day I was given him, Boots and I were inseparable! Wherever I went, Boots had to be with me. If for some reason, Boots was left behind, I would get very upset, and my mother couldn’t do anything to calm me. It was even a challenge for her to get hold of Boots to wash him as I never wanted him to leave my side. He was my best friend and I often played and talked to him like another human being. It’s funny how imaginative a child can be with a stuffed animal.  We used to have tea parties, or go on our own adventure around my childhood home. Of course, my grandmother was delighted that I loved Boots so much too. In fact, I still have Boots in my room at my parents’ house.  </p><p>Part3</p><p>What kinds of toys are popular for young people today?</p><p>Today’s children have no interest in the traditional toys. They like iPAD and all kinds of the latest electronic equipment. The elder guys feel shock that these children can easily play those electronic toys. But when the elder guys were young, they have no chance to play so many electronic toys.</p><p>Do you think it’s good for children to play games on ipad?</p><p>It can be beneficial for kids to play games on iPad as they could learn how to use electronic devices, and some games can also train their mind and develop their IQ. But being addicted to iPad can be harmful to both their mental health and their body health.</p><p>What do you think of giving expensive toys to children?</p><p>It is important to let the children know how valuable the toys are and teach them to cherish their toys. But if the kids do not value their toys, the toys will just be wasted.</p><p>Compare the toys that children of play now and those 20 or 30 years ago.</p><p>20 or 30 years ago, children played with the toys that were cheap and were not electronic devices, such as dolls and model cars. But nowadays, they like iPAD and all kinds of the latest electronic equipment which are more expensive and require high technology.</p><p>What are the advantages of the children’s games nowadays?</p><p>The first advantage is various kinds of games satisfied different needs. For example, digital games will attract more boys, while Lego aims at developing children’s brain during playing. Another advantage is that current games will help to develop children’s ability in some aspects rather than just playing. In other words, learning through playing is what those games claim to do nowadays. Just like the previous example Lego, playing its products will help to develop intelligence and creativity.</p><p>Do people in your country like playing games?</p><p>I think so. In the past, it is considered that most boys enjoy or addicted to playing games. While these years, many girls also find interests in playing games, especially games on cell phone, like Lion’s Glory. This is also because of the promotion on the Internet, more people are familiar with games and would like to have a try, then they feel like to play those games for relaxing.</p><p>What do you think are the benefits and drawbacks of playing games?</p><p>We have to admit that, playing games will help to reduce the stress in the work, which is especially significant for modern people. And for some students learning marketing, it will be another opportunity for choosing their jobs. There are some drawbacks of playing games. For example, people who are addicted to games will have no power to work, and then they will lose the ability to earn the living for themselves. So the critical thing is not to play games too much.</p><p>What kinds of tv programs are popular in china?</p><p>In my view, the reality shows should be the most popular tv programs now in China. These years, more and more people enjoy watching reality shows as a relaxing way because most those programs are interesting and funny. Also for fans, reality shows offer them a new channel to focus stars they like. And due to some stars were famous by some reality shows, more and more stars tend to participate in such programs.</p><p>Are there any tv programs that family members can watch together?</p><p>I think the Spring Festival Gala should be the most suitable tv program for the whole family to watch together. And in fact, it may be the only one tv program that family members will watch together nowadays. It will be played on the last day of Lunar Year in China, and watching it represents reunion for many Chinese families.</p><p>Do people watch tv programs online?</p><p>Yes, I think young people like me are more used to watching tv programs online because we may have to do other things when the programs are on the air. Online tv programs make it possible for people to arrange their time flexibly. Besides, overseas students do not have the conditions of TV, so it is more possible and convenient for them to watch tv programs online.</p><p>得到的工作或学习建议<br>Describe an advice you received on your subjects or work</p><p>You should say:</p><p>What it was</p><p>Who you received it from</p><p>What you did after receiving it</p><p>And explain how you felt about it</p><p>Everyone’s got their bad habits, and for me it’s forgetting things that often makes me feel frustrated. When one of my friends suggested me to try the bullet journaling, I was actually quite doubtful about this, you know, ‘keeping-a-diary’ thing. Later I found I was missing the point, a bullet journal isn’t a “dear diary” kind of thing. It’s more of a filing cabinet for your brain with its own customizable charts and symbols that help you track your calendar and your goals. It turned out to be a huge success for me</p><p>First, it’s a great way to hold myself accountable. I mean, when I write down something, I’d like to do it, just, as early as possible. In some way, it provides me an inner driving force to finish my tasks. Plus, I actually quite enjoy the process of crossing things off. When I write down to, for example, to work out, I would definitely try to do it so that I could cross it off the list. It’s rather like a constant reminder to make sure that all my ducks are in a row, which also offers a rewarding feeling.</p><p>In addition, it’s brought loads of mental health benefits for me. it makes me way more optimistic. What I mean is , you become quite cautious of your mood and all those negative feelings when you get to track your mood through it. Actually I’ve formed a habit of writing down 6 things that make me unhappy everyday. Gradually, it helped myself to be positive when I, you know, met some trouble.</p><p>Part3</p><p>What kinds of suggestion do we receive in our life?</p><p>People receive many kinds of suggestions from their family, friends, teachers and even strangers. Sometimes the suggestion is very generous such as something about one’s outlook towards this world. Sometimes the suggestion can be really small such as what color to wear for an appointment.</p><p>Whose advice is better for us, parents or friends?</p><p>It depends. Sometimes parents can give us better advice as they have more experience than we do, but sometimes our friends can give us more proper advice as their minds think alike as ours.</p><p>What makes people choose the job they are currently doing?</p><p>A lot of reasons may account for one’s choice of current job. For example, salary, one’s interest, work place and work time.</p><p>Can people choose their jobs freely?</p><p>I think people can partially choose what they want to do, but there are also some factors that prevent people from chasing their dreams such as the responsibility of supporting their family and so on.</p><p>Can parents decide what children will major in the future?</p><p>I think if the children have no idea about their future and ask their parents for help, the parents could help them make decisions. But if the children have their own wish, parents should respect their will.</p><p>For students, when is the best time to study?</p><p>In the morning, I think, as most people tend to be more sober in the morning than in the other time of the day. And some scientists claim that people tend to have a better memory in the morning.</p><p>家里的图片<br>Describe a picture or a photo in your home</p><p>You should say:</p><p>When it was taken</p><p>Where it is</p><p>What the picture/photo is like</p><p>What the meaning it has</p><p>and explain why you like it</p><p>Many people like to use photos to record the precious moments in their life, so do I. There is a meaningful photo in my bedroom. Even though it’s been taken for many years, it still can remind me much whenever I see it.</p><p>The photo was taken when I was 18 in my coming of age ceremony at the senior high school. It’s a pretty significant event for me so both of my parents and I valued it much, like dressing up, preparing gifts for teachers and taking many photos. The one framed and put on my bedside table is the best one.</p><p>I was standing in the middle with my parents at both sides in front of my school. The composition is quite common though, the photo is brimming with happiness, which can be felt from the smile wearing on our face and the bright sunshine that day.</p><p>Another thing impressed me is the light in my eyes, pure and simple. At that age, I wasn’t under much pressure from my study and future career. So sometimes, thinking back to that time, I still indulge in the memories. Thanks to my classmate behind the camera helping us to capture this great moment. It’s a treasure as well as the beginning of my next life phase.</p><p>Part3</p><p>What are advantages of taking photos with a mobile phone?</p><p>It is more convenient for people to take photos with mobile phone because they can catch beautiful views any time and where and they need not to have cameras with them. Besides, it is more accessible and flexible for people to edit and share photos on mobile phone as more intelligent photo-editing applications and social applications on mobile phone.</p><p>Do you think it’s important to have some pictures at home? Why?</p><p>I think so. With some beautiful pictures at home, the room can be full of vitality. People could recall their happy memories when looking at the memorable photos. Having some meaningful pictures and memorable photos at home can make people feel warm have happy.</p><p>What kinds of decorations do people often have at home?</p><p>People often have family photos at home to recall some good memories. Some people like to put magnets that they bought in other cities or countries on the refrigerator to commemorate their travel experience. Some people like to put handicrafts to show their artistic taste.</p><p>What are the benefits of children learning something about art, like painting or drawing?</p><p>Learning arts can help children built the sense of aesthetic. Children will be able to appreciate artistic works and learn the history and background of fine art works. Besides, they will have a good artistic taste which will have influence on their beauty-appreciation and the way of dressing.</p><p>室内游戏<br>Describe an indoor game you enjoyed playing</p><p>You should say:</p><p>What this game was</p><p>When and where you played this game</p><p>Who you played it with</p><p>How you played this game</p><p>And explain why you enjoyed playing it</p><p>Okay I’d like to talk about my experience of playing an indoor game. It’s quite a funny and surprising experience really.</p><p>That was about a month ago and I went archery with my friends on my day off. It was an indoor archery club and everything was on the lower ground floor. so it’s easier than the archery outdoor because there’s no wind.</p><p>All of us were beginners and we wanted to have a trial first. So we booked this place for just one hour and requested a trainer who could show us how to do it.</p><p>And after some instructions, we were ready to go. And all of us tried for the first round. It was normal, none of us got anything above 5. So we felt like we were on the same level and thus could have a competition.</p><p>But then, something funny just happened. In the second round, for I-don’t -know-what reason, I got every arrow stuck accurately on 8 or 9 or even 10. My friends were really shocked and they even stopped to watch me shooting. And it’s such a surprise that I started to shoot like a professional even though all I did was just to follow the instructions my trainer gave. So, in the end, I won the competition of course, but I still don’t get why I could do it so well.</p><p>So yeah, after that day, I began to fall in love with archery and I did several trainings afterwards. I think it’s really fun to try out new sports or games, sometimes you may just release your potential and find a new hobby.</p><p>Part3</p><p>What kinds of indoor games do children like playing nowadays?</p><p>Video games on the smart phones and computers. Like <the Glory of the King>, which is popular among all ages of children. I think they like it because it’s easy to learn and they can also play it with their classmates and friends. Thus, being a good tool to socialize.</p><p>What do you think are the benefits and drawbacks of playing games?</p><p>From my point of view, the benefit may be helping people kill time, thus not being super boring. However, the drawbacks are outweighing the benefit, by bringing damage to the body and eye sight. Besides, teenagers may get in touch with some improper information on the video games like violence and sex.</p><p>Would it be better if parents play games together with children?</p><p>Yes, I think it may help. By playing games together with children, parents can get to know their children well and also have more common topics to chat with their children. On the other hand, parents can help their children manage their game time, thus minimizing the influence on their school work.</p><p>What are the differences between the games you played before and those you play right now?</p><p>The current game production is more sophisticated, the picture is better, and some games are close to real life. In addition, there are still some virtual games that make people feel immersive, so that you can enjoy the beauty of the world without leaving home. But the game I played before can’t do so.</p><p>Why do children like playing mobile games?</p><p>There are two reasons: First, because of fun, children are at a stage of being curious about everything. At this time, it is difficult to resist the temptation of video games. In the games, they can upgrade the monsters, or they can become ancient emperors and enjoy different treatments. The second reason is that with the development of society, people are increasingly inseparable from mobile phones, and the parents of children are also addicted to mobile phones, thus losing a lot of time to accompany their children, so many children also play mobile phones as a pastime.</p><p>How to make mobile games useful to children?</p><p>More science and education elements can be added to the game, allowing children to gain knowledge from the game. For example, let the children enter the court game, learn about China’s history, or simulate news broadcasts to understand what is happening. As long as they can acquire knowledge from the game, it’s useful.</p><p>喜欢的天空<br>Describe a sky you would like to see</p><p>You should say:</p><p>Where it was</p><p>Who you were with</p><p>What you saw</p><p>And explain why it was beautiful</p><p>Okay, I’d like to talk about the sky that I watched while I was travelling in New Zealand several years ago.</p><p>I saw the sky at the Queenstown where there’s a perfect spot for aurora observation. I went there with my best friend from high school in 2017. We started our journey in September, which was a perfect timing to appreciate the aurora.</p><p>The entire sky in Queenstown was so gorgeous, you know, the ribbon-like aurora together with the stars scattered around was literally like an artistic masterpiece. We actually not only saw the breathtaking aurora but also countless shining stars that gave us a clear picture of what the Milky Way Galaxy looked like. Oh, I should mention that the sky was in different tones of green and blue, like bottle green, emerald green, sapphire blue, and light blue, all the fancy and romantic colors you could possibly imagine. The color combination was super eye-catching!</p><p>I felt like that was the most impressive sky I have watched in my life. The reason why I thought it gave me such a deep impression was that the places where I grew up and studied at didn’t allow me to see the natural beauties like this. I’m not exaggerating, it was absolutely the most beautiful sky that I have ever seen in my life. I really hope I could spend more days there to fully enjoy the feast to the eyes it brought to me. I mean, it was quite an eye opener for me.</p><p>Part3</p><p>Should kids acquire knowledge about stars?</p><p>Yes, it is useful for kids to learn some astronomical knowledge. Acquiring knowledge about stars can not only develop their interest for nature, but also teach them some common sense about the universe.</p><p>Is high technology helpful for sky watching?</p><p>Sure is. High technology such as telescope enables humans to see the universe more clearly. So scientists could see something more than they can see directly with their eyes, which gives them bigger opportunities to discover more.</p><p>What kinds of people are interested in stars?</p><p>Perhaps someone interested in art and nature will also be interested in stars as the universe is so stunning. And those who aim to be astrophysicist and meteorologist will also be interested in stars.</p><p>Do you think it’s important to know something about stars in sky?</p><p>Yes, it is useful to know about stars. As we are living in this tremendous universe, we should be aware of all the surroundings. Besides, knowing how big the universe is can also make us know how tiny humans are.</p><p>Have you ever thought anything about going to the outer space?</p><p>Yes, I have. I am a big fan of sci-fi movies and there are lots of plots of going out of the earth. So I also have the wish to go to the outer space and see what our home planet looks like from the outer space.</p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS中0.1+0.2</title>
      <link href="/2022/08/12/JS%E4%B8%AD0.1+0.2/"/>
      <url>/2022/08/12/JS%E4%B8%AD0.1+0.2/</url>
      
        <content type="html"><![CDATA[<h1 id="js中0-1-0-2的问题（作者：老司机）"><a href="#js中0-1-0-2的问题（作者：老司机）" class="headerlink" title="js中0.1+0.2的问题（作者：老司机）"></a>js中0.1+0.2的问题（作者：老司机）</h1><h2 id="一、前提："><a href="#一、前提：" class="headerlink" title="一、前提："></a>一、前提：</h2><ul><li><p>0.1或0.2等一些小数，转换为二进制格式时，是一个无限循环的小数，因此最终得到的结果是一个近似值（保留52位小数），在计算过程中，有可能会发生位数的变化，在进行舍取的过程中，导致精度丢失</p></li><li><p>js的浮点数在计算机底层的存储格式为：符号位（1） + 阶码（11）+ 尾数（52）</p></li><li><p>符号位：0表示正数，1表示负数</p></li><li><p>阶码：指数+1023（最后转为二进制格式，若不足11位，则在前面补0）</p></li><li><p>1023称为偏移量：2 ^ (位数-1) - 1，此处js浮点数的阶码位数为11，所以：2 ^ 10 - 1 = 1023</p></li><li><p>以0.1为例：</p><ul><li>科学记数法格式（乘二取整，顺序排序）：1.1 00110011 00110011 00110011 00110011 00110011 00110011 010 x 2 ^ -4</li><li>二进制格式：0 01111111011 1001100110011001100110011001100110011001100110011010【省略了整数1，作为一个隐藏位】</li></ul></li></ul><h2 id="二、实现-0-1-0-2-0-3"><a href="#二、实现-0-1-0-2-0-3" class="headerlink" title="二、实现 0.1+0.2===0.3"></a>二、实现 0.1+0.2===0.3</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">binaryStrToNum</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token comment">// 1、获取符号位</span>    <span class="token keyword">let</span> sign <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 2、获取阶码（1~11【包含11】）</span>    <span class="token keyword">let</span> exponent <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 3、获取小数位</span>    <span class="token keyword">let</span> m <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment">// 注意：在尾数中，计算是从第一位开始的，一共有52位，其实还包含一个隐藏位（上面已经提了），这个隐藏位的计算结果始终是1（计算方式：1 * 2 ^ 0），这个也必须累加到计算结果中</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>m<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> c <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token string">"1"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            sum <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 4、计算结果，公式为：-1 ^ 符号 * 2 ^ (阶码-1023) * sum</span>    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">+</span>sign<span class="token punctuation">)</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>exponent<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1023</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 《0.1》</span><span class="token comment">// const r1 = binaryStrToNum("0011111110111001100110011001100110011001100110011001100110011010");</span><span class="token comment">// console.log(r1);</span><span class="token comment">// 《0.2》</span><span class="token comment">// 1.1 00110011 00110011 00110011 00110011 00110011 00110011 010 x 2 ^ -3 = 0 01111111100 1001100110011001100110011001100110011001100110011010</span><span class="token comment">// const r2 = binaryStrToNum("0011111111001001100110011001100110011001100110011001100110011010");</span><span class="token comment">// console.log(r2);</span><span class="token comment">/** *《0.1 + 0.2》 * 先对其进行计算（保留52位，第53位为0时，舍弃；为1时，进1）： * 0.00011 00110011 00110011 00110011 00110011 00110011 00110011 010 + 0.00110 01100110 01100110 01100110 01100110 01100110 01100110 10 * = 0.01001 10011001 10011001 10011001 10011001 10011001 10011001 110 * = 1.001 10011001 10011001 10011001 10011001 10011001 10011001 110 x 2 ^ -2【在此次计算中，尾数变成了53位，因此要进行舍取】 * = 1.001 10011001 10011001 10011001 10011001 10011001 10011010 0 x 2 ^ -2【取小数52位】 * 转为二进制格式 =>：0 01111111101 0011001100110011001100110011001100110011001100110100 */</span><span class="token keyword">const</span> r3 <span class="token operator">=</span> <span class="token function">binaryStrToNum</span><span class="token punctuation">(</span><span class="token string">"0011111111010011001100110011001100110011001100110011001100110100"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0.30000000000000004</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3 <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3组合式API使用示例</title>
      <link href="/2022/08/08/Vue3%E7%BB%84%E5%90%88%E5%BC%8FAPI%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/"/>
      <url>/2022/08/08/Vue3%E7%BB%84%E5%90%88%E5%BC%8FAPI%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="API一览"><a href="#API一览" class="headerlink" title="API一览"></a>API一览</h2><h3 id="setup"><a href="#setup" class="headerlink" title="setup()"></a>setup()</h3><h3 id="响应式-核心"><a href="#响应式-核心" class="headerlink" title="响应式: 核心"></a>响应式: 核心</h3><ul><li>ref() - 接受一个内部值，返回一个响应式的、可更改的 ref 对象</li><li>computed () - 接受一个 getter 函数，返回一个只读的响应式 ref 对象(计算属性)</li><li>reactive() - 返回一个对象的响应式代理</li><li>readonly() - 接受一个对象 (不论是响应式还是普通的) 或是一个 ref，返回一个原值的只读代理</li><li>watchEffect() - 立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行</li><li>watchPostEffect() - watchEffect() 使用 flush: ‘post’ 选项时的别名</li><li>watchSyncEffect() - watchEffect() 使用 flush: ‘sync’ 选项时的别名</li><li>watch() - 侦听一个或多个响应式数据源，并在数据源变化时调用所给的回调函数<h3 id="响应式-工具"><a href="#响应式-工具" class="headerlink" title="响应式: 工具"></a>响应式: 工具</h3></li><li>isRef() - 检查某个值是否为 ref</li><li>unref() - 如果参数是 ref，则返回内部值，否则返回参数本身</li><li>toRef() - 基于响应式对象上的一个属性，创建一个对应的 ref</li><li>toRefs() - 将一个响应式对象转换为一个普通对象，这个普通对象的每个属性都是指向源对象相应属性的 ref</li><li>isProxy() - 检查一个对象是否是由 reactive()、readonly()、shallowReactive() 或 shallowReadonly() 创建的代理</li><li>isReactive() - 检查一个对象是否是由 reactive() 或 shallowReactive() 创建的代理</li><li>isReadonly() - 检查一个对象是否是由 readonly() 或 shallowReadonly() 创建的代理<h3 id="响应式-进阶"><a href="#响应式-进阶" class="headerlink" title="响应式: 进阶"></a>响应式: 进阶</h3></li><li>shallowRef() - ref() 的浅层作用形式</li><li>triggerRef() - 强制触发依赖于一个浅层 ref 的副作用，这通常在对浅引用的内部值进行深度变更后使用</li><li>customRef() - 创建一个自定义的 ref，显式声明对其依赖追踪和更新触发的控制方式</li><li>shallowReactive() - reactive() 的浅层作用形式</li><li>shallowReadonly() - readonly() 的浅层作用形式</li><li>toRaw() - 根据一个 Vue 创建的代理返回其原始对象</li><li>markRaw() - 将一个对象标记为不可被转为代理。返回该对象本身</li><li>effectScope() - 创建一个 effect 作用域，可以捕获其中所创建的响应式副作用 (即计算属性和侦听器)，这样捕获到的副作用可以一起处理</li><li>getCurrentScope() - 如果有的话，返回当前活跃的 effect 作用域</li><li>onScopeDispose() - 在当前活跃的 effect 作用域上注册一个处理回调函数<h3 id="生命周期钩子"><a href="#生命周期钩子" class="headerlink" title="生命周期钩子"></a>生命周期钩子</h3></li><li>onMounted() - 组件挂载完成后执行</li><li>onUpdated() - 更新 DOM 树之后调用</li><li>onUnmounted() - 组件实例被卸载之后调用</li><li>onBeforeMount() - 组件被挂载之前被调用</li><li>onBeforeUpdate() - 更新 DOM 树之前调用</li><li>onBeforeUnmount() - 组件实例被卸载之前调用</li><li>onErrorCaptured() - 捕获了后代组件传递的错误时调用</li><li>onRenderTracked() - 组件渲染过程中追踪到响应式依赖时调用</li><li>onRenderTriggered() - 响应式依赖的变更触发了组件渲染时调用</li><li>onActivated() - 若组件实例是 <KeepAlive> 缓存树的一部分，当组件被插入到 DOM 中时调用</li><li>onDeactivated() - 若组件实例是 <KeepAlive> 缓存树的一部分，当组件从 DOM 中被移除时调用</li><li>onServerPrefetch() - 组件实例在服务器上被渲染之前调用<h3 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h3></li><li>provide() - 提供一个值，可以被后代组件注入</li><li>inject() - 注入一个由祖先组件或整个应用 (通过 app.provide()) 提供的值</li></ul><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><pre class="line-numbers language-Vue" data-language="Vue"><code class="language-Vue">&lt;script setup lang&#x3D;&quot;ts&quot;&gt;  import &#123; ref, Ref, reactive, isRef, unref, toRef, computed &#125; from &#39;vue&#39;;  const msg &#x3D; ref(&quot;Hello World&quot;);  const initial &#x3D; ref(10);  const count &#x3D; ref(0);  &#x2F;&#x2F; 更新 ref  function update(value) &#123;    count.value &#x3D; value;  &#125;  &#x2F;&#x2F; 检查&#96;count&#96;是否为一个 ref 对象  console.log(isRef(count) ? &#39;是ref对象&#39; : &#39;非ref对象&#39;);  &#x2F;&#x2F; 如果参数是一个ref，则返回内部值，否则返回参数本身  function initialCount(value: number | Ref&lt;number&gt;) &#123;    console.log(unref(value) &#x3D;&#x3D;&#x3D; 10); &#x2F;&#x2F; 打印true  &#125;  initialCount(initial);  &#x2F;**   * 为源响应式对象上的某个 &#96;property&#96; 新创建一个 &#96;ref&#96;。   * 然后,&#96;ref&#96; 可以被传递，它会保持对其源&#96;property&#96;的响应式连接。   * 确保以下输出为true   *&#x2F;  const state &#x3D; reactive(&#123;    foo: 1,    bar: 2,  &#125;);  const fooRef &#x3D; toRef(state, &#39;foo&#39;);  &#x2F;&#x2F; 修改引用将更新原引用  fooRef.value++;  console.log(state.foo &#x3D;&#x3D;&#x3D; 2); &#x2F;&#x2F; 打印true  &#x2F;&#x2F; 修改原引用也会更新&#96;ref&#96;  state.foo++;  console.log(fooRef.value &#x3D;&#x3D;&#x3D; 3); &#x2F;&#x2F; 打印true  &#x2F;&#x2F;computed 接受一个具有 get 和 set 函数的对象，用来创建可写的 ref 对象。  const plusOne &#x3D; computed(&#123;    get: ()&#x3D;&gt;&#123;    return count.value + 1;    &#125;,    set: val&#x3D;&gt;&#123;     count.value ++;    &#125;  &#125;)  plusOne.value++;&lt;&#x2F;script&gt;&lt;template&gt;  &lt;div&gt;    &lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;h1&gt;    &lt;p&gt;      &lt;span @click&#x3D;&quot;update(count - 1)&quot;&gt;-&lt;&#x2F;span&gt;      &#123;&#123; count &#125;&#125;      &lt;span @click&#x3D;&quot;update(count + 1)&quot;&gt;+&lt;&#x2F;span&gt;    &lt;&#x2F;p&gt;    &lt;p&gt;      count：&#123;&#123; count &#125;&#125;，plusOne：&#123;&#123; plusOne &#125;&#125;    &lt;&#x2F;p&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>史蒂夫·乔布斯在斯坦福大学的演讲</title>
      <link href="/2022/07/25/%E5%8F%B2%E8%92%82%E5%A4%AB%C2%B7%E4%B9%94%E5%B8%83%E6%96%AF%E5%9C%A8%E6%96%AF%E5%9D%A6%E7%A6%8F%E5%A4%A7%E5%AD%A6%E7%9A%84%E6%BC%94%E8%AE%B2/"/>
      <url>/2022/07/25/%E5%8F%B2%E8%92%82%E5%A4%AB%C2%B7%E4%B9%94%E5%B8%83%E6%96%AF%E5%9C%A8%E6%96%AF%E5%9D%A6%E7%A6%8F%E5%A4%A7%E5%AD%A6%E7%9A%84%E6%BC%94%E8%AE%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="史蒂夫·乔布斯在斯坦福大学的演讲"><a href="#史蒂夫·乔布斯在斯坦福大学的演讲" class="headerlink" title="史蒂夫·乔布斯在斯坦福大学的演讲"></a>史蒂夫·乔布斯在斯坦福大学的演讲</h2><p>Stanford Report, June 14, 2005</p><p>‘You’ve got to find what you love,’ Jobs says</p><p>This is the text of the Commencement address by Steve Jobs, CEO of Apple Computer and of Pixar Animation Studios, delivered on June 12, 2005.</p><p>  【演讲词】</p><p>I am honored to be with you today at your commencement from one of the finest universities in the world. Truth be told, I never graduated from college, and this is the closest I’ve ever gotten to a college graduation. Today I want to tell you three stories from my life. That’s it. No big deal. Just three stories.</p><p>　　我今天很荣幸能和你们一起参加毕业典礼，斯坦福大学是世界上最好的大学之一。我从来没有从大学中毕业。说实话,今天也许是在我的生命中离大学毕业最近的一天了。今天我想向你们讲述我生活中的三个故事。不是什么大不了的事情,只是三个故事而已。</p><p>The first story is about connecting the dots.</p><p>　　第一个故事是关于如何把生命中的点点滴滴串连起来。</p><p>I dropped out of Reed College after the first 6 months, but then stayed around as a drop-in for another 18 months or so before I really quit. So why did I drop out？</p><p>　　我在Reed大学读了六个月之后就退学了,但是在十八个月以后——我真正的作出退学决定之前,我还经常去学校。我为什么要退学呢？</p><p>It started before I was born. My biological mother was a young, unwed college graduate student, and she decided to put me up for adoption. She felt very strongly that I should be adopted by college graduates, so everything was all set for me to be adopted at birth by a lawyer and his wife. Except that when I popped out they decided at the last minute that they really wanted a girl.</p><p>　　故事从我出生的时候讲起。我的亲生母亲是一个年轻的,没有结婚的大学毕业生。她决定让别人收养我, 她十分想让我被大学毕业生收养。所以在我出生的时候，她已经做好了一切的准备工作，能使得我被一个律师和他的妻子所收养。但是她没有料到,当我出生之后, 律师夫妇突然决定他们想要一个女孩。</p><p>So my parents, who were on a waiting list, got a call in the middle of the night asking: “We have an unexpected baby boy; do you want him？” They said: “Of course.” My biological mother later found out that my mother had never graduated from college and that my father had never graduated from high school. She refused to sign the final adoption papers. She only relented a few months later when my parents promised that I would someday go to college.</p><p>　　所以我的生养父母(他们还在我亲生父母的观察名单上)突然在半夜接到了一个电话:“我们现在这儿有一个不小心生出来的男婴,你们想要他吗？”他们回答道:“当然!”但是我亲生母亲随后发现，我的养母从来没有上过大学,我的父亲甚至从没有读过高中。她拒绝签这个收养合同。只是在几个月以后,我的父母答应她一定要让我上大学,那个时候她才同意。</p><p>And 17 years later I did go to college. But I naively chose a college that was almost as expensive as Stanford, and all of my working-class parents’ savings were being spent on my college tuition. After six months, I couldn’t see the value in it. I had no idea what I wanted to do with my life and no idea how college was going to help me figure it out.</p><p>　　在十七岁那年,我真的上了大学。但是我很愚蠢的选择了一个几乎和你们斯坦福大学一样贵的学校, 我父母还处于蓝领阶层，他们几乎把所有积蓄都花在了我的学费上面。在六个月后, 我已经看不到其中的价值所在。我不知道我想要在生命中做什么,我也不知道大学能帮助我找到怎样的答案。</p><p>And here I was spending all of the money my parents had saved their entire life. So I decided to drop out and trust that it would all work out OK. It was pretty scary at the time, but looking back it was one of the best decisions I ever made. The minute I dropped out I could stop taking the required classes that didn’t interest me, and begin dropping in on the ones that looked interesting.</p><p>　　但是在这里，我几乎花光了我父母这一辈子的所有积蓄。所以我决定要退学,我觉得这是个正确的决定。不能否认,我当时确实非常的害怕, 但是现在回头看看,那的确是我这一生中最棒的一个决定。在我做出退学决定的那一刻, 我终于可以不必去读那些令我提不起丝毫兴趣的课程了。然后我还可以去修那些看起来有点意思的课程。</p><p>It wasn’t all romantic. I didn’t have a dorm room, so I slept on the floor in friends’ rooms, I returned coke bottles for the 5¢ deposits to buy food with, and I would walk the 7 miles across town every Sunday night to get one good meal a week at the Hare Krishna temple. I loved it. And much of what I stumbled into by following my curiosity and intuition turned out to be priceless later on. Let me give you one example:</p><p>　　但是这并不是那么罗曼蒂克。我失去了我的宿舍,所以我只能在朋友房间的地板上面睡觉,我去捡5美分的可乐瓶子，仅仅为了填饱肚子, 在星期天的晚上,我需要走七英里的路程，穿过这个城市到Hare Krishna寺庙(注：位于纽约Brooklyn下城),只是为了能吃上饭——这个星期唯一一顿好一点的饭。但是我喜欢这样。我跟着我的直觉和好奇心走, 遇到的很多东西,此后被证明是无价之宝。让我给你们举一个例子吧：</p><p>Reed College at that time offered perhaps the best calligraphy instruction in the country. Throughout the campus every poster, every label on every drawer, was beautifully hand calligraphed. Because I had dropped out and didn’t have to take the normal classes, I decided to take a calligraphy class to learn how to do this.</p><p>Reed大学在那时提供也许是全美最好的美术字课程。在这个大学里面的每个海报, 每个抽屉的标签上面全都是漂亮的美术字。因为我退学了, 没有受到正规的训练, 所以我决定去参加这个课程，去学学怎样写出漂亮的美术字。</p><p>I learned about serif and san serif typefaces, about varying the amount of space between different letter combinations, about what makes great typography great. It was beautiful, historical, artistically subtle in a way that science can’t capture, and I found it fascinating.</p><p>　　我学到了san serif 和serif字体, 我学会了怎么样在不同的字母组合之中改变空格的长度, 还有怎么样才能作出最棒的印刷式样。那是一种科学永远不能捕捉到的、美丽的、真实的艺术精妙, 我发现那实在是太美妙了。</p><p>None of this had even a hope of any practical application in my life. But ten years later, when we were designing the first Macintosh computer, it all came back to me. And we designed it all into the Mac. It was the first computer with beautiful typography. If I had never dropped in on that single course in college, the Mac would have never had multiple typefaces or proportionally spaced fonts.</p><p>　　当时看起来这些东西在我的生命中，好像都没有什么实际应用的可能。但是十年之后,当我们在设计第一台Macintosh电脑的时候,就不是那样了。我把当时我学的那些家伙全都设计进了Mac。那是第一台使用了漂亮的印刷字体的电脑。</p><p>And since Windows just copied the Mac, its likely that no personal computer would have them. If I had never dropped out, I would have never dropped in on this calligraphy class, and personal computers might not have the wonderful typography that they do. Of course it was impossible to connect the dots looking forward when I was in college. But it was very, very clear looking backwards ten years later.</p><p>　　如果我当时没有退学, 就不会有机会去参加这个我感兴趣的美术字课程, Mac就不会有这么多丰富的字体，以及赏心悦目的字体间距。那么现在个人电脑就不会有现在这么美妙的字型了。当然我在大学的时候，还不可能把从前的点点滴 滴串连起来,但是当我十年后回顾这一切的时候,真的豁然开朗了。</p><p>Again, you can’t connect the dots looking forward; you can only connect them looking backwards. So you have to trust that the dots will somehow connect in your future. You have to trust in something - your gut, destiny, life, karma, whatever. This approach has never let me down, and it has made all the difference in my life.</p><p>再次强调，没人可以未卜先知，事与事间的因和果，往往只在回首时显现。你得相信，因和果会在未来生活中联系起来。人总要有些信仰才行，直觉也好，命运也罢，因果轮回，不管什么，去相信因与果的联系，会给你信心去跟从自己的意愿，哪怕离经叛道，也绝不止步，只有这样，才能有所成就。</p><p>My second story is about love and loss.</p><p>　　我的第二个故事是关于爱和损失的。</p><p>I was lucky – I found what I loved to do early in life. Woz and I started Apple in my parents garage when I was 20. We worked hard, and in 10 years Apple had grown from just the two of us in a garage into a billion company with over 4000 employees. We had just released our finest creation - the Macintosh - a year earlier, and I had just turned 30.</p><p>　　我非常幸运, 因为我在很早的时候就找到了我钟爱的东西。Woz和我在二十岁的时候就在父母的车库里面开创了苹果公司。我们工作得很努力, 十年之后, 这个公司从那两个车库中的穷光蛋发展到了超过四千名的雇员、价值超过二十亿的大公司。在公司成立的第九年,我们刚刚发布了最好的产品,那就是 Macintosh。我也快要到三十岁了。</p><p>And then I got fired. How can you get fired from a company you started？ Well, as Apple grew we hired someone who I thought was very talented to run the company with me, and for the first year or so things went well. But then our visions of the future began to diverge and eventually we had a falling out. When we did, our Board of Directors sided with him. So at 30 I was out. And very publicly out. What had been the focus of my entire adult life was gone, and it was devastating.</p><p>　　在那一年, 我被炒了鱿鱼。你怎么可能被你自己创立的公司炒了鱿鱼呢？ 嗯,在苹果快速成长的时候，我们雇用了一个很有天分的家伙和我一起管理这个公司, 在最初的几年,公司运转的很好。但是后来我们对未来的看法发生了分歧, 最终我们吵了起来。当争吵不可开交的时候, 董事会站在了他的那一边。所以在三十岁的时候, 我被炒了。在这么多人的眼皮下我被炒了。在而立之年，我生命的全部支柱离自己远去, 这真是毁灭性的打击。</p><p>I really didn’t know what to do for a few months. I felt that I had let the previous generation of entrepreneurs down - that I had dropped the baton as it was being passed to me. I met with David Packard and Bob Noyce and tried to apologize for screwing up so badly.</p><p>　　在最初的几个月里，我真是不知道该做些什么。我把从前的创业激情给丢了, 我觉得自己让与我一同创业的人都很沮丧。我和David Pack和Bob Boyce见面，并试图向他们道歉。</p><p>I was a very public failure, and I even thought about running away from the valley. But something slowly began to dawn on me – I still loved what I did. The turn of events at Apple had not changed that one bit. I had been rejected, but I was still in love. And so I decided to start over.</p><p>　　我把事情弄得糟糕透顶了。但是我渐渐发现了曙光, 我仍然喜爱我从事的这些东西。苹果公司发生的这些事情丝毫的没有改变这些, 一点也没有。我被驱逐了,但是我仍然钟爱它。所以我决定从头再来。</p><p>I didn’t see it then, but it turned out that getting fired from Apple was the best thing that could have ever happened to me. The heaviness of being successful was replaced by the lightness of being a beginner again, less sure about everything. It freed me to enter one of the most creative periods of my life.</p><p>　　我当时没有觉察, 但是事后证明, 从苹果公司被炒是我这辈子发生的最棒的事情。因为，作为一个成功者的沉重感觉被作为一个创业者的轻松感觉所重新代替: 对任何事情都不那么特别看重。这让我觉得如此自由, 进入了我生命中最有创造力的一个阶段。</p><p>During the next five years, I started a company named NeXT, another company named Pixar, and fell in love with an amazing woman who would become my wife. Pixar went on to create the worlds first computer animated feature film, Toy Story, and is now the most successful animation studio in the world.</p><p>　　在接下来的五年里, 我创立了一个名叫NeXT的公司, 还有一个叫Pixar的公司, 然后和一个后来成为我妻子的优雅女人相识。Pixar 制作了世界上第一个用电脑制作的动画电影——“玩具总动员”,Pixar现在也是世界上最成功的电脑制作工作室。</p><p>In a remarkable turn of events, Apple bought NeXT, I returned to Apple, and the technology we developed at NeXT is at the heart of Apple’s current renaissance. And Laurene and I have a wonderful family together.</p><p>　　在后来的一系列运转中,Apple收购了NeXT, 然后我又回到了Apple公司。我们在NeXT发展的技术在Apple的复兴之中发挥了关键的作用。我还和Laurence 一起建立了一个幸福的家庭。</p><p>I’m pretty sure none of this would have happened if I hadn’t been fired from Apple. It was awful tasting medicine, but I guess the patient needed it. Sometimes life hits you in the head with a brick. Don’t lose faith. I’m convinced that the only thing that kept me going was that I loved what I did. You’ve got to find what you love. And that is as true for your work as it is for your lovers. Your work is going to fill a large part of your life, and the only way to be truly satisfied is to do what you believe is great work. And the only way to do great work is to love what you do. If you haven’t found it yet, keep looking. Don’t settle. As with all matters of the heart, you’ll know when you find it. And, like any great relationship, it just gets better and better as the years roll on. So keep looking until you find it. Don’t settle.</p><p>　　我可以非常肯定,如果我不被Apple开除的话, 这其中一件事情也不会发生的。这个良药的味道实在是太苦了,但是我想病人需要这个药。有时候生活会给你迎头一击，不要灰心丧气。我坚信，唯一可以让我坚持下去的，就是我对自己事业的热爱。你必须去寻找自己所爱，无论是工作还是爱情，都是如此。工作是生活中很主要的部分，真正获得满足感，就必须做你相信是有价值的工作。要做有价值的事业，你就必须热爱你做的事业，如果你还没找到，千万不要放弃，要继续寻找，只要倾听你的心声，当你真的发现时你就会感到，就像任何伟大的感情关系一样，岁月的更迭只会让这份情愈发深刻，所以千万不要放弃，要继续寻找。</p><p>My third story is about death.</p><p>　　我的第三个故事是关于死亡的。</p><p>When I was 17, I read a quote that went something like: “If you live each day as if it was your last, someday you’ll most certainly be right.” It made an impression on me, and since then, for the past 33 years, I have looked in the mirror every morning and asked myself: “If today were the last day of my life, would I want to do what I am about to do today？” And whenever the answer has been “No” for too many days in a row, I know I need to change something.</p><p>　　当我十七岁的时候, 我读到了一句话:“如果你把每一天都当作生命中最后一天去生活的话,那么有一天你会发现你是正确的。”这句话给我留下了深刻的印象。从那时开始,过了33 年,我在每天早晨都会对着镜子问自己:“如果今天是我生命中的最后一天, 你会不会完成你今天想做的事情呢？”当答案连续很多次被给予“不是”的时候, 我知道自己需要改变某些事情了。</p><p>Remembering that I’ll be dead soon is the most important tool I’ve ever encountered to help me make the big choices in life. Because almost everything – all external expectations, all pride, all fear of embarrassment or failure - these things just fall away in the face of death, leaving only what is truly important. Remembering that you are going to die is the best way I know to avoid the trap of thinking you have something to lose. You are already naked. There is no reason not to follow your heart.</p><p>　　提醒自己人的生命有限，令我一生都受益非常，令我能在人生重大问题上做出抉择。因为一切的一切，一切追求，一切荣耀，一切惶恐，一些挫折，在死亡面前都会显得微不足道 ，剩下的才是最重要的事情。记住自己总会死去是避免自己被种种担心所羁绊的最好方法，既然将一无所有，还有什么理由不追随自己的内心。</p><p>About a year ago I was diagnosed with cancer. I had a scan at 7:30 in the morning, and it clearly showed a tumor on my pancreas. I didn’t even know what a pancreas was. The doctors told me this was almost certainly a type of cancer that is incurable, and that I should expect to live no longer than three to six months. My doctor advised me to go home and get my affairs in order, which is doctor’s code for prepare to die. It means to try to tell your kids everything you thought you’d have the next 10 years to tell them in just a few months. It means to make sure everything is buttoned up so that it will be as easy as possible for your family. It means to say your goodbyes.</p><p>　　大概一年以前, 我被诊断出癌症。我在早晨七点半做了一个检查, 检查清楚的显示在我的胰腺有一个肿瘤。我当时都不知道胰腺是什么东西。医生告诉我那很可能是一种无法治愈的癌症, 我还有三到六个月的时间活在这个世界上。我的医生叫我回家, 然后整理好我的一切, 那就是医生准备死亡的程序。那意味着你将要把未来十年对你小孩说的话在几个月里面说完.;那意味着把每件事情都搞定, 让你的家人会尽可能轻松的生活;那意味着你要说“再见了”。</p><p>I lived with that diagnosis all day. Later that evening I had a biopsy, where they stuck an endoscope down my throat, through my stomach and into my intestines, put a needle into my pancreas and got a few cells from the tumor. I was sedated, but my wife, who was there, told me that when they viewed the cells under a microscope the doctors started crying because it turned out to be a very rare form of pancreatic cancer that is curable with surgery. I had the surgery and I’m fine now.</p><p>　　我整天和那个诊断书一起生活。后来有一天早上我作了一个活切片检查，医生将一个内窥镜从我的喉咙伸进去,通过我的胃, 然后进入我的肠子, 用一根针在我的胰腺上的肿瘤上取了几个细胞。我当时很镇静,因为我被注射了镇定剂。但是我的妻子在那里, 后来告诉我，当医生在显微镜地下观察这些细胞的时候他们开始尖叫, 因为这些细胞最后竟然是一种非常罕见的可以用手术治愈的胰腺癌症。我做了这个手术, 现在我痊愈了。</p><p>This was the closest I’ve been to facing death, and I hope its the closest I get for a few more decades. Having lived through it, I can now say this to you with a bit more certainty than when death was a useful but purely intellectual concept:</p><p>　　那是我最接近死亡的时候, 我还希望这也是以后的几十年最接近的一次。从死亡线上又活了过来, 死亡对我来说，只是一个有用但是纯粹是知识上的概念的时候，我可以更肯定一点地对你们说：</p><p>No one wants to die. Even people who want to go to heaven don’t want to die to get there. And yet death is the destination we all share. No one has ever escaped it. And that is as it should be, because Death is very likely the single best invention of Life. It is Life’s change agent. It clears out the old to make way for the new. Right now the new is you, but someday not too long from now, you will gradually become the old and be cleared away. Sorry to be so dramatic, but it is quite true.</p><p>　　没有人愿意死, 即使人们想上天堂, 人们也不会为了去那里而死。但是死亡是我们每个人共同的终点。从来没有人能够逃脱它。也应该如此。 因为死亡就是生命中最好的一个发明。它将旧的清除以便给新的让路。你们现在是新的, 但是从现在开始不久以后, 你们将会逐渐的变成旧的然后被清除。我很抱歉这很戏剧性, 但是这十分的真实。</p><p>Your time is limited, so don’t waste it living someone else’s life. Don’t be trapped by dogma - which is living with the results of other people’s thinking. Don’t let the noise of other’s opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition. They somehow already know what you truly want to become. Everything else is secondary.</p><p>　　人生有限，所以不要把时间浪费在重复其他人的生活上;不要被教条束缚，那只是根据别人的思维结果而生活，不要让他人的喧嚣纷繁，淹没了自己内心的声音。最重要的是，你要有勇气去跟随你的直觉和心灵，因为它们在某种程度上已经知道你想要成为什么样子，所有其他的事情都是次要的。</p><p>When I was young, there was an amazing publication called The Whole Earth Catalog, which was one of the bibles of my generation. It was created by a fellow named Stewart Brand not far from here in Menlo Park, and he brought it to life with his poetic touch. This was in the late 1960’s, before personal computers and desktop publishing, so it was all made with typewriters, scissors, and polaroid cameras. It was sort of like Google in paperback form, 35 years before Google came along: it was idealistic, and overflowing with neat tools and great notions.</p><p>　　在我年轻的时候，有本很棒的叫全球目录的杂志。被我们那代人奉为经典。它是由斯图尔特·布兰德在这附近的Menlo公园创办的。他把自己的文艺气质融汇其中。那是六十年代后期。那时还没有个人电脑。全用打字机，剪刀和宝丽来照相机。它就好比是三十五年前的简装版的谷歌。充满理想主义色彩。该书简洁实用，见解独到。</p><p>Stewart and his team put out several issues of The Whole Earth Catalog, and then when it had run its course, they put out a final issue. It was the mid-1970s, and I was your age. On the back cover of their final issue was a photograph of an early morning country road, the kind you might find yourself hitchhiking on if you were so adventurous. Beneath it were the words: “Stay Hungry. Stay Foolish.” It was their farewell message as they signed off. Stay Hungry. Stay Foolish. And I have always wished that for myself. And now, as you graduate to begin anew, I wish that for you.</p><p>Stay Hungry. Stay Foolish.</p><p>Thank you all very much.</p><p>　　斯图尔特团队出版了几期的全球目录。当它后来要停刊的时候，他们出来最后一版。那是七十年代中期，我就像你们这么大。杂志最后一期的封底上，是一幅清晨乡村公路的照片。是那种搭车旅行玩冒险时会遇到的村路，照片下面有这样一段话：求知若渴，虚心若愚。这是他们停刊的告别语。求知若渴，虚心若愚。我一直以此激励自己。在你们即将毕业开始崭新旅程的时刻，我希望你们也能做到：</p><p>求知若渴，虚心若愚。</p><p>谢谢大家！</p>]]></content>
      
      
      <categories>
          
          <category> 文摘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 史蒂夫·乔布斯 </tag>
            
            <tag> Steve Jobs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TS内置工具类型使用</title>
      <link href="/2022/06/24/TS%E5%86%85%E7%BD%AE%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%9E%8B%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/06/24/TS%E5%86%85%E7%BD%AE%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%9E%8B%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="工具列表"><a href="#工具列表" class="headerlink" title="工具列表"></a>工具列表</h1><ul><li>[√] <code>Partial&lt;Type&gt;</code></li><li>[√] <code>Required&lt;Type&gt;</code></li><li>[√] <code>Readonly&lt;Type&gt;</code></li><li>[√] <code>Record&lt;Keys, Type&gt;</code></li><li>[√] <code>Pick&lt;Type, Keys&gt;</code></li><li>[√] <code>Omit&lt;Type, Keys&gt;</code></li><li>[√] <code>Exclude&lt;UnionType, ExcludedMembers&gt;</code></li><li>[√] <code>Extract&lt;Type, Union&gt;</code></li><li>[√] <code>NonNullable&lt;Type&gt;</code></li><li>[√] <code>Parameters&lt;Type&gt;</code></li><li>[√] <code>ConstructorParameters&lt;Type&gt;</code></li><li>[√] <code>ReturnType&lt;Type&gt;</code></li><li>[√] <code>InstanceType&lt;Type&gt;</code></li><li>[√] <code>ThisParameterType&lt;Type&gt;</code></li><li>[√] <code>OmitThisParameter&lt;Type&gt;</code></li><li>[√] <code>ThisType&lt;Type&gt;</code></li><li>[√] <code>Uppercase&lt;StringType&gt;</code></li><li>[√] <code>Lowercase&lt;StringType&gt;</code></li><li>[√] <code>Capitalize&lt;StringType&gt;</code></li><li>[√] <code>Uncapitalize&lt;StringType&gt;</code></li></ul><h1 id="Utility-Types"><a href="#Utility-Types" class="headerlink" title="Utility Types"></a>Utility Types</h1><h2 id="Partial-lt-Type-gt"><a href="#Partial-lt-Type-gt" class="headerlink" title="Partial&lt;Type&gt;"></a><code>Partial&lt;Type&gt;</code></h2><ul><li>将接口类型中定义的属性变成可选的(Optional)</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Partial&lt;T&gt; &#x3D; &#123; [P in keyof T]?: T[P] | undefined; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">interface Todo &#123;  title: string;  description: string;&#125;function updateTodo(todo: Todo, fieldsToUpdate: Partial&lt;Todo&gt;) &#123;  return &#123; ...todo, ...fieldsToUpdate &#125;;&#125;const todo1 &#x3D; &#123;  title: &quot;organize desk&quot;,  description: &quot;clear clutter&quot;,&#125;;const todo2 &#x3D; updateTodo(todo1, &#123;  description: &quot;throw out trash&quot;,&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Required-lt-Type-gt"><a href="#Required-lt-Type-gt" class="headerlink" title="Required&lt;Type&gt;"></a><code>Required&lt;Type&gt;</code></h2><ul><li>将接口类型中定义的属性变成必选项，与<code>Partial&lt;Type&gt;</code>相反</li><li>即使在之前先将它们设为可选的，Required也会使所有符合条件的属性成为必需的，如果省略掉属性的话TypeScript将会引发错误</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Required&lt;T&gt; &#x3D; &#123; [P in keyof T]-?: T[P]; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">interface Props &#123;  a?: number;  b?: string;&#125;const obj: Props &#x3D; &#123; a: 5 &#125;;const obj2: Required&lt;Props&gt; &#x3D; &#123; a: 5 &#125;;&#x2F;&#x2F; Property &#39;b&#39; is missing in type &#39;&#123; a: number; &#125;&#39; but required in type &#39;Required&lt;Props&gt;&#39;.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Readonly-lt-Type-gt"><a href="#Readonly-lt-Type-gt" class="headerlink" title="Readonly&lt;Type&gt;"></a><code>Readonly&lt;Type&gt;</code></h2><ul><li>所有属性设置为只读的类型，不能给类型的属性重新赋值</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Readonly&lt;T&gt; &#x3D; &#123; readonly [P in keyof T]: T[P]; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">interface Todo &#123;  title: string;&#125;const todo: Readonly&lt;Todo&gt; &#x3D; &#123;  title: &quot;Delete inactive users&quot;,&#125;;todo.title &#x3D; &quot;Hello&quot;;&#x2F;&#x2F; Cannot assign to &#39;title&#39; because it is a read-only property.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Record-lt-Keys-Type-gt"><a href="#Record-lt-Keys-Type-gt" class="headerlink" title="Record&lt;Keys, Type&gt;"></a><code>Record&lt;Keys, Type&gt;</code></h2><ul><li><p>用于生成以联合类型为键名（Keys），键值类型为Type的新接口，即把Keys的每个键值拿出来，类型规定为Type</p></li><li><p>接收两个泛型参数，构造一个对象类型，键为keys，值为type，用于将一个类型的属性映射到另一个类型</p></li><li><p>源码实现</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Record&lt;K extends string | number | symbol, T&gt; &#x3D; &#123; [P in K]: T; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>例子</p><pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">interface CatInfo &#123;  age: number;  breed: string;&#125;type CatName &#x3D; &quot;miffy&quot; | &quot;boris&quot; | &quot;mordred&quot;;const cats: Record&lt;CatName, CatInfo&gt; &#x3D; &#123;  miffy: &#123; age: 10, breed: &quot;Persian&quot; &#125;,  boris: &#123; age: 5, breed: &quot;Maine Coon&quot; &#125;,  mordred: &#123; age: 16, breed: &quot;British Shorthair&quot; &#125;,&#125;;cats.boris;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Pick-lt-Type-Keys-gt"><a href="#Pick-lt-Type-Keys-gt" class="headerlink" title="Pick&lt;Type, Keys&gt;"></a><code>Pick&lt;Type, Keys&gt;</code></h2><ul><li>选择一组属性Keys来构造类型Type，即从对象中挑选部分</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Pick&lt;T, K extends keyof T&gt; &#x3D; &#123; [P in K]: T[P]; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">interface Todo &#123;  title: string;  description: string;  completed: boolean;&#125;type TodoPreview &#x3D; Pick&lt;Todo, &quot;title&quot; | &quot;completed&quot;&gt;;const todo: TodoPreview &#x3D; &#123;  title: &quot;Clean room&quot;,  completed: false,&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Omit-lt-Type-Keys-gt"><a href="#Omit-lt-Type-Keys-gt" class="headerlink" title="Omit&lt;Type, Keys&gt;"></a><code>Omit&lt;Type, Keys&gt;</code></h2><ul><li>Omit与Pick相反，它从类型Type中删除属性Keys，即是排除部分</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Omit&lt;T, K extends string | number | symbol&gt; &#x3D; &#123; [P in Exclude&lt;keyof T, K&gt;]: T[P]; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">interface Todo &#123;  title: string;  description: string;  completed: boolean;  createdAt: number;&#125;type TodoPreview &#x3D; Omit&lt;Todo, &quot;description&quot;&gt;;const todo: TodoPreview &#x3D; &#123;  title: &quot;Clean room&quot;,  completed: false,  createdAt: 1615544252770,&#125;;type TodoInfo &#x3D; Omit&lt;Todo, &quot;completed&quot; | &quot;createdAt&quot;&gt;;const todoInfo: TodoInfo &#x3D; &#123;  title: &quot;Pick up kids&quot;,  description: &quot;Kindergarten closes at 5pm&quot;,&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Exclude-lt-UnionType-ExcludedMembers-gt"><a href="#Exclude-lt-UnionType-ExcludedMembers-gt" class="headerlink" title="Exclude&lt;UnionType, ExcludedMembers&gt;"></a><code>Exclude&lt;UnionType, ExcludedMembers&gt;</code></h2><ul><li>从UnionType(待筛选列表)中剔除ExcludedMembers(筛选条件)的所有属性</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Exclude&lt;T, U&gt; &#x3D; T extends U ? never : T<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type T0 &#x3D; Exclude&lt;&quot;a&quot; | &quot;b&quot; | &quot;c&quot;, &quot;a&quot;&gt;;&#x2F;&#x2F; type T0 &#x3D; &quot;b&quot; | &quot;c&quot;  type T1 &#x3D; Exclude&lt;&quot;a&quot; | &quot;b&quot; | &quot;c&quot;, &quot;a&quot; | &quot;b&quot;&gt;;&#x2F;&#x2F; type T1 &#x3D; &quot;c&quot;type T2 &#x3D; Exclude&lt;string | number | (() &#x3D;&gt; void), Function&gt;;&#x2F;&#x2F; type T2 &#x3D; string | number<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Extract-lt-Type-Union-gt"><a href="#Extract-lt-Type-Union-gt" class="headerlink" title="Extract&lt;Type, Union&gt;"></a><code>Extract&lt;Type, Union&gt;</code></h2><ul><li>Extract与Exclude相反，从Type(待筛选列表)中保留Union(筛选条件)的所有属性，Union不存在的属性全部剔除</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Extract&lt;T, U&gt; &#x3D; T extends U ? T : never<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type T0 &#x3D; Extract&lt;&quot;a&quot; | &quot;b&quot; | &quot;c&quot;, &quot;a&quot; | &quot;f&quot;&gt;;&#x2F;&#x2F; type T0 &#x3D; &quot;a&quot;type T1 &#x3D; Extract&lt;string | number | (() &#x3D;&gt; void), Function&gt;; &#x2F;&#x2F; type T1 &#x3D; () &#x3D;&gt; void<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="NonNullable-lt-Type-gt"><a href="#NonNullable-lt-Type-gt" class="headerlink" title="NonNullable&lt;Type&gt;"></a><code>NonNullable&lt;Type&gt;</code></h2><ul><li>从Type中排除null和undefined</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type NonNullable&lt;T&gt; &#x3D; T extends null | undefined ? never : T<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type T0 &#x3D; NonNullable&lt;string | number | undefined&gt;;&#x2F;&#x2F; type T0 &#x3D; string | numbertype T1 &#x3D; NonNullable&lt;string[] | null | undefined&gt;;&#x2F;&#x2F; type T1 &#x3D; string[]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Parameters-lt-Type-gt"><a href="#Parameters-lt-Type-gt" class="headerlink" title="Parameters&lt;Type&gt;"></a><code>Parameters&lt;Type&gt;</code></h2><ul><li>以元组的方式获得函数的入参Type的类型</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Parameters&lt;T extends (...args: any) &#x3D;&gt; any&gt; &#x3D; T extends (...args: infer P) &#x3D;&gt; any ? P : never<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">declare function f1(arg: &#123; a: number; b: string &#125;): void;type T0 &#x3D; Parameters&lt;() &#x3D;&gt; string&gt;;&#x2F;&#x2F; type T0 &#x3D; []type T1 &#x3D; Parameters&lt;(s: string) &#x3D;&gt; void&gt;;&#x2F;&#x2F; type T1 &#x3D; [s: string]type T2 &#x3D; Parameters&lt;&lt;T&gt;(arg: T) &#x3D;&gt; T&gt;;&#x2F;&#x2F; type T2 &#x3D; [arg: unknown]type T3 &#x3D; Parameters&lt;typeof f1&gt;;&#x2F;&#x2F; type T3 &#x3D; [arg: &#123;&#x2F;&#x2F;     a: number;&#x2F;&#x2F;     b: string;&#x2F;&#x2F; &#125;]type T4 &#x3D; Parameters&lt;any&gt;;&#x2F;&#x2F; type T4 &#x3D; unknown[]type T5 &#x3D; Parameters&lt;never&gt;;&#x2F;&#x2F; type T5 &#x3D; nevertype T6 &#x3D; Parameters&lt;string&gt;;&#x2F;&#x2F; Type &#39;string&#39; does not satisfy the constraint &#39;(...args: any) &#x3D;&gt; any&#39;.&#x2F;&#x2F; type T6 &#x3D; nevertype T7 &#x3D; Parameters&lt;Function&gt;;&#x2F;&#x2F; Type &#39;Function&#39; does not satisfy the constraint &#39;(...args: any) &#x3D;&gt; any&#39;.&#x2F;&#x2F; Type &#39;Function&#39; provides no match for the signature &#39;(...args: any): any&#39;.&#x2F;&#x2F; type T7 &#x3D; never<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="ConstructorParameters-lt-Type-gt"><a href="#ConstructorParameters-lt-Type-gt" class="headerlink" title="ConstructorParameters&lt;Type&gt;"></a><code>ConstructorParameters&lt;Type&gt;</code></h2><ul><li>以元组的方式获得构造函数的入参Type的类型</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type ConstructorParameters&lt;T extends abstract new (...args: any) &#x3D;&gt; any&gt; &#x3D; T extends abstract new (...args: infer P) &#x3D;&gt; any ? P : never<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type T0 &#x3D; ConstructorParameters&lt;ErrorConstructor&gt;;&#x2F;&#x2F; type T0 &#x3D; [message?: string]type T1 &#x3D; ConstructorParameters&lt;FunctionConstructor&gt;;&#x2F;&#x2F; type T1 &#x3D; string[]type T2 &#x3D; ConstructorParameters&lt;RegExpConstructor&gt;;&#x2F;&#x2F; type T2 &#x3D; [pattern: string | RegExp, flags?: string]type T3 &#x3D; ConstructorParameters&lt;any&gt;;&#x2F;&#x2F; type T3 &#x3D; unknown[]type T4 &#x3D; ConstructorParameters&lt;Function&gt;;&#x2F;&#x2F; Type &#39;Function&#39; does not satisfy the constraint &#39;abstract new (...args: any) &#x3D;&gt; any&#39;.&#x2F;&#x2F; Type &#39;Function&#39; provides no match for the signature &#39;new (...args: any): any&#39;.&#x2F;&#x2F; type T4 &#x3D; never<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="ReturnType-lt-Type-gt"><a href="#ReturnType-lt-Type-gt" class="headerlink" title="ReturnType&lt;Type&gt;"></a><code>ReturnType&lt;Type&gt;</code></h2><ul><li>用于获取函数的返回类型</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type ReturnType&lt;T extends (...args: any) &#x3D;&gt; any&gt; &#x3D; T extends (...args: any) &#x3D;&gt; infer R ? R : any<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">declare function f1(): &#123; a: number; b: string &#125;;type T0 &#x3D; ReturnType&lt;() &#x3D;&gt; string&gt;;&#x2F;&#x2F; type T0 &#x3D; stringtype T1 &#x3D; ReturnType&lt;(s: string) &#x3D;&gt; void&gt;;&#x2F;&#x2F; type T1 &#x3D; voidtype T2 &#x3D; ReturnType&lt;&lt;T&gt;() &#x3D;&gt; T&gt;;&#x2F;&#x2F; type T2 &#x3D; unknowntype T3 &#x3D; ReturnType&lt;&lt;T extends U, U extends number[]&gt;() &#x3D;&gt; T&gt;;&#x2F;&#x2F; type T3 &#x3D; number[]type T4 &#x3D; ReturnType&lt;typeof f1&gt;;&#x2F;&#x2F; type T4 &#x3D; &#123;&#x2F;&#x2F;     a: number;&#x2F;&#x2F;     b: string;&#x2F;&#x2F; &#125;type T5 &#x3D; ReturnType&lt;any&gt;;&#x2F;&#x2F; type T5 &#x3D; anytype T6 &#x3D; ReturnType&lt;never&gt;;&#x2F;&#x2F; type T6 &#x3D; nevertype T7 &#x3D; ReturnType&lt;string&gt;;&#x2F;&#x2F; Type &#39;string&#39; does not satisfy the constraint &#39;(...args: any) &#x3D;&gt; any&#39;.&#x2F;&#x2F; type T7 &#x3D; anytype T8 &#x3D; ReturnType&lt;Function&gt;;&#x2F;&#x2F; Type &#39;Function&#39; does not satisfy the constraint &#39;(...args: any) &#x3D;&gt; any&#39;.&#x2F;&#x2F; Type &#39;Function&#39; provides no match for the signature &#39;(...args: any): any&#39;.&#x2F;&#x2F; type T8 &#x3D; any<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="InstanceType-lt-Type-gt"><a href="#InstanceType-lt-Type-gt" class="headerlink" title="InstanceType&lt;Type&gt;"></a><code>InstanceType&lt;Type&gt;</code></h2><ul><li>推断/获得构造函数返回值的类型</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type InstanceType&lt;T extends abstract new (...args: any) &#x3D;&gt; any&gt; &#x3D; T extends abstract new (...args: any) &#x3D;&gt; infer R ? R : any<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">class C &#123;  x &#x3D; 0;  y &#x3D; 0;&#125;type T0 &#x3D; InstanceType&lt;typeof C&gt;;&#x2F;&#x2F; type T0 &#x3D; Ctype T1 &#x3D; InstanceType&lt;any&gt;;&#x2F;&#x2F; type T1 &#x3D; anytype T2 &#x3D; InstanceType&lt;never&gt;;&#x2F;&#x2F; type T2 &#x3D; nevertype T3 &#x3D; InstanceType&lt;string&gt;;&#x2F;&#x2F; Type &#39;string&#39; does not satisfy the constraint &#39;abstract new (...args: any) &#x3D;&gt; any&#39;.&#x2F;&#x2F; type T3 &#x3D; anytype T4 &#x3D; InstanceType&lt;Function&gt;;&#x2F;&#x2F; Type &#39;Function&#39; does not satisfy the constraint &#39;abstract new (...args: any) &#x3D;&gt; any&#39;.&#x2F;&#x2F; Type &#39;Function&#39; provides no match for the signature &#39;new (...args: any): any&#39;.&#x2F;&#x2F; type T4 &#x3D; any<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="ThisParameterType-lt-Type-gt"><a href="#ThisParameterType-lt-Type-gt" class="headerlink" title="ThisParameterType&lt;Type&gt;"></a><code>ThisParameterType&lt;Type&gt;</code></h2><ul><li>提取函数Type的this参数生成一个新的Type，若函数类型并没有此参数，则提取为unknown类型。</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type ThisParameterType&lt;T&gt; &#x3D; T extends (this: infer U, ...args: never) &#x3D;&gt; any ? U : unknown<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">function toHex(this: Number) &#123;  return this.toString(16);&#125;function numberToString(n: ThisParameterType&lt;typeof toHex&gt;) &#123;  return toHex.apply(n);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="OmitThisParameter-lt-Type-gt"><a href="#OmitThisParameter-lt-Type-gt" class="headerlink" title="OmitThisParameter&lt;Type&gt;"></a><code>OmitThisParameter&lt;Type&gt;</code></h2><ul><li>创建一个OmitThisParameter类型，从函数类型Type中移除this参数，即忽略函数Type的this参数，生成一个新的函数Type</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type OmitThisParameter&lt;T&gt; &#x3D; unknown extends ThisParameterType&lt;T&gt; ? T : T extends (...args: infer A) &#x3D;&gt; infer R ? (...args: A) &#x3D;&gt; R : T<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">function toHex(this: Number) &#123;  return this.toString(16);&#125;const fiveToHex: OmitThisParameter&lt;typeof toHex&gt; &#x3D; toHex.bind(5);console.log(fiveToHex());<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="ThisType-lt-Type-gt"><a href="#ThisType-lt-Type-gt" class="headerlink" title="ThisType&lt;Type&gt;"></a><code>ThisType&lt;Type&gt;</code></h2><ul><li>ThisType不返回转换后的类型，只是给对象标记this接口。注意，要使用ThisType，必须启用noImplicitThis</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">interface ThisType&lt;T&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type ObjectDescriptor&lt;D, M&gt; &#x3D; &#123;  data?: D;  methods?: M &amp; ThisType&lt;D &amp; M&gt;; &#x2F;&#x2F; Type of &#39;this&#39; in methods is D &amp; M&#125;;function makeObject&lt;D, M&gt;(desc: ObjectDescriptor&lt;D, M&gt;): D &amp; M &#123;  let data: object &#x3D; desc.data || &#123;&#125;;  let methods: object &#x3D; desc.methods || &#123;&#125;;  return &#123; ...data, ...methods &#125; as D &amp; M;&#125;let obj &#x3D; makeObject(&#123;  data: &#123; x: 0, y: 0 &#125;,  methods: &#123;    moveBy(dx: number, dy: number) &#123;      this.x +&#x3D; dx; &#x2F;&#x2F; Strongly typed this      this.y +&#x3D; dy; &#x2F;&#x2F; Strongly typed this    &#125;,  &#125;,&#125;);obj.x &#x3D; 10;obj.y &#x3D; 20;obj.moveBy(5, 5);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h1 id="Intrinsic-String-Manipulation-Types"><a href="#Intrinsic-String-Manipulation-Types" class="headerlink" title="Intrinsic String Manipulation Types"></a><code>Intrinsic String Manipulation Types</code></h1><ul><li><p>TypeScript的一些类型可以用于字符操作，这些类型处于性能的考虑被内置在编译器中，你不能在.d.ts文件里找到它们。如：<code>Uppercase&lt;StringType&gt;</code>、<code>Lowercase&lt;StringType&gt;</code>、<code>Capitalize&lt;StringType&gt;</code>、<code>Uncapitalize&lt;StringType&gt;</code>、</p><h2 id="Uppercase-lt-StringType-gt"><a href="#Uppercase-lt-StringType-gt" class="headerlink" title="Uppercase&lt;StringType&gt;"></a><code>Uppercase&lt;StringType&gt;</code></h2><ul><li>把每个字符转为大写形式</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Uppercase&lt;S extends string&gt; &#x3D; intrinsic<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Greeting &#x3D; &quot;Hello, world&quot;type ShoutyGreeting &#x3D; Uppercase&lt;Greeting&gt;&#x2F;&#x2F; type ShoutyGreeting &#x3D; &quot;HELLO, WORLD&quot;type ASCIICacheKey&lt;Str extends string&gt; &#x3D; &#96;ID-$&#123;Uppercase&lt;Str&gt;&#125;&#96;type MainID &#x3D; ASCIICacheKey&lt;&quot;my_app&quot;&gt;&#x2F;&#x2F; type MainID &#x3D; &quot;ID-MY_APP&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Lowercase-lt-StringType-gt"><a href="#Lowercase-lt-StringType-gt" class="headerlink" title="Lowercase&lt;StringType&gt;"></a><code>Lowercase&lt;StringType&gt;</code></h2><ul><li>把每个字符转为小写形式</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Lowercase&lt;S extends string&gt; &#x3D; intrinsic<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Greeting &#x3D; &quot;Hello, world&quot;type QuietGreeting &#x3D; Lowercase&lt;Greeting&gt;&#x2F;&#x2F; type QuietGreeting &#x3D; &quot;hello, world&quot;type ASCIICacheKey&lt;Str extends string&gt; &#x3D; &#96;id-$&#123;Lowercase&lt;Str&gt;&#125;&#96;type MainID &#x3D; ASCIICacheKey&lt;&quot;MY_APP&quot;&gt;&#x2F;&#x2F; type MainID &#x3D; &quot;id-my_app&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Capitalize-lt-StringType-gt"><a href="#Capitalize-lt-StringType-gt" class="headerlink" title="Capitalize&lt;StringType&gt;"></a><code>Capitalize&lt;StringType&gt;</code></h2><ul><li>把字符串的第一个字符转为大写形式</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Capitalize&lt;S extends string&gt; &#x3D; intrinsic<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type LowercaseGreeting &#x3D; &quot;hello, world&quot;;type Greeting &#x3D; Capitalize&lt;LowercaseGreeting&gt;;&#x2F;&#x2F; type Greeting &#x3D; &quot;Hello, world&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Uncapitalize-lt-StringType-gt"><a href="#Uncapitalize-lt-StringType-gt" class="headerlink" title="Uncapitalize&lt;StringType&gt;"></a><code>Uncapitalize&lt;StringType&gt;</code></h2><ul><li>把字符串的第一个字符转换为小写形式</li><li>源码实现<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type Uncapitalize&lt;S extends string&gt; &#x3D; intrinsic<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>例子<pre class="line-numbers language-ts" data-language="ts"><code class="language-ts">type UppercaseGreeting &#x3D; &quot;HELLO WORLD&quot;;type UncomfortableGreeting &#x3D; Uncapitalize&lt;UppercaseGreeting&gt;;&#x2F;&#x2F; type UncomfortableGreeting &#x3D; &quot;hELLO WORLD&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h1 id="工具分类一览"><a href="#工具分类一览" class="headerlink" title="工具分类一览"></a>工具分类一览</h1><ul><li>全量修饰接口：<code>Partial</code> <code>Readonly(Immutable)</code> <code>Mutable</code> <code>Required</code></li><li>裁剪接口：<code>Pick</code> <code>Omit</code> <code>PickByValueType</code> <code>OmitByValueType</code></li><li>基于 infer：<code>ReturnType`` ParamType</code> <code>PromiseType</code></li><li>获取指定条件字段：<code>FunctionKeys</code> <code>OptionalKeys</code> <code>RequiredKeys</code> </li><li>内置字符操作类型：<code>Uppercase&lt;StringType&gt;</code> <code>Lowercase&lt;StringType&gt;</code> <code>Capitalize&lt;StringType&gt;</code> <code>Uncapitalize&lt;StringType&gt;</code></li></ul><h1 id="官方文档地址"><a href="#官方文档地址" class="headerlink" title="官方文档地址"></a>官方文档地址</h1><ul><li><a href="https://www.typescriptlang.org/docs/handbook/utility-types.html">https://www.typescriptlang.org/docs/handbook/utility-types.html</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> TS </tag>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git远程已经删除的分支本地环境仍能看到远程分支</title>
      <link href="/2022/06/11/git%E8%BF%9C%E7%A8%8B%E5%B7%B2%E7%BB%8F%E5%88%A0%E9%99%A4%E7%9A%84%E5%88%86%E6%94%AF%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E4%BB%8D%E8%83%BD%E7%9C%8B%E5%88%B0%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/"/>
      <url>/2022/06/11/git%E8%BF%9C%E7%A8%8B%E5%B7%B2%E7%BB%8F%E5%88%A0%E9%99%A4%E7%9A%84%E5%88%86%E6%94%AF%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E4%BB%8D%E8%83%BD%E7%9C%8B%E5%88%B0%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="git远程已经删除的分支，在本地环境仍能看到远程分支"><a href="#git远程已经删除的分支，在本地环境仍能看到远程分支" class="headerlink" title="git远程已经删除的分支，在本地环境仍能看到远程分支"></a>git远程已经删除的分支，在本地环境仍能看到远程分支</h2><ol><li><p>使用命令查看本地分支及远程分支</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> bransh -a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>查看remote远程分支，还有本地分支与之对应的关系</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> remote show origin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><ul><li>远程不存在的分支会提示：<code> stale (use &#39;git remote prune&#39; to remove)</code></li></ul><ol start="3"><li>在本地删除远程不存在的分支<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> remote prune origin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>or<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> remote prune origin <span class="token operator">&lt;</span>name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css实现打字效果</title>
      <link href="/2022/06/09/css%E5%AE%9E%E7%8E%B0%E6%89%93%E5%AD%97%E6%95%88%E6%9E%9C/"/>
      <url>/2022/06/09/css%E5%AE%9E%E7%8E%B0%E6%89%93%E5%AD%97%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="css实现打字效果"><a href="#css实现打字效果" class="headerlink" title="css实现打字效果"></a>css实现打字效果</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 中文 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">.typing-cn</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 15.1em<span class="token punctuation">;</span>    <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>    <span class="token property">border-right</span><span class="token punctuation">:</span> 2px solid transparent<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> typing 3.0s <span class="token function">steps</span><span class="token punctuation">(</span>15<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">,</span> blink-caret .75s step-end infinite<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">/* 打印效果 */</span>  <span class="token atrule"><span class="token rule">@keyframes</span> typing</span> <span class="token punctuation">&#123;</span>    <span class="token selector">from</span> <span class="token punctuation">&#123;</span> <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token selector">to</span> <span class="token punctuation">&#123;</span> <span class="token property">width</span><span class="token punctuation">:</span> 15.1em<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">/* 光标 */</span>  <span class="token atrule"><span class="token rule">@keyframes</span> blink-caret</span> <span class="token punctuation">&#123;</span>    <span class="token selector">from, to</span> <span class="token punctuation">&#123;</span> <span class="token property">box-shadow</span><span class="token punctuation">:</span> 1px 0 0 0 transparent<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token selector">50%</span> <span class="token punctuation">&#123;</span> <span class="token property">box-shadow</span><span class="token punctuation">:</span> 1px 0 0 0<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>typing-cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>简易中文打字效果，简易打字效果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 英文 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">.typing-en</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 22ch<span class="token punctuation">;</span>    <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">border-right</span><span class="token punctuation">:</span> 3px solid<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> monospace<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> typing 2s <span class="token function">steps</span><span class="token punctuation">(</span>22<span class="token punctuation">)</span> infinite<span class="token punctuation">,</span> effect .5s step-end infinite alternate<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token atrule"><span class="token rule">@keyframes</span> typing</span> <span class="token punctuation">&#123;</span>    <span class="token selector">from</span> <span class="token punctuation">&#123;</span> <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token atrule"><span class="token rule">@keyframes</span> effect</span> <span class="token punctuation">&#123;</span>    <span class="token selector">50%</span> <span class="token punctuation">&#123;</span> <span class="token property">border-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>typing-en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Typing effect for text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a>效果如下</h2><style type="text/css">  .typing-cn {    width: 15.1em;    white-space: nowrap;    border-right: 2px solid transparent;    animation: typing 3.5s steps(15, end), blink-caret .75s step-end infinite;    overflow: hidden;  }  /* 打印效果 */  @keyframes typing {    from { width: 0; }    to { width: 15.1em; }  }  /* 光标 */  @keyframes blink-caret {    from, to { box-shadow: 1px 0 0 0 transparent; }    50% { box-shadow: 1px 0 0 0; }  }</style><div class="typing-cn">简易中文打字效果，简易打字效果</div><style type="text/css">  .typing-en {    width: 23ch;    white-space: nowrap;    overflow: hidden;    border-right: 3px solid;    font-family: monospace;    font-size: 2em;    animation: typing1 2s steps(23) infinite, effect .5s step-end infinite alternate;  }  @keyframes typing1 {    from { width: 0; }  }  @keyframes effect {    50% { border-color: transparent; }  }</style><div class="typing-en">Typing effect for text </div>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青龙面板搭建</title>
      <link href="/2022/04/27/%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/04/27/%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="青龙"><a href="#青龙" class="headerlink" title="青龙"></a>青龙</h2><ul><li>支持python3、javaScript、shell、typescript 的定时任务管理面板（A timed task management panel that supports typescript, javaScript, python3, and shell）</li></ul><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><ul><li><a href="https://github.com/whyour/qinglong">青龙Github</a></li></ul><h2 id="docker-部署"><a href="#docker-部署" class="headerlink" title="docker 部署"></a>docker 部署</h2><ul><li>青龙正版docker镜像: <code>whyour/qinglong:latest</code></li></ul><ol><li>docker 安装<ul><li>确保docker已经安装，详细安装docker看<a href="https://damao2250.github.io/2022/04/01/docker%E7%9A%84%E7%AE%80%E6%98%93%E4%BD%BF%E7%94%A8/">docker的简易使用</a></li></ul></li><li>拉取并启动容器 <pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker run -dit \  -v $PWD&#x2F;ql&#x2F;config:&#x2F;ql&#x2F;config \  -v $PWD&#x2F;ql&#x2F;log:&#x2F;ql&#x2F;log \  -v $PWD&#x2F;ql&#x2F;db:&#x2F;ql&#x2F;db \  -p 5700:5700 \  --name qinglong \  --hostname qinglong \  --restart always \  whyour&#x2F;qinglong:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="项目指南"><a href="#项目指南" class="headerlink" title="项目指南"></a>项目指南</h2><ol><li>拉取镜像/更新镜像<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker pull whyour&#x2F;qinglong:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>删除镜像<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker rmi whyour&#x2F;qinglong:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>启动容器 </li></ol><ul><li>普通服务器<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker run -dit \  -v $PWD&#x2F;ql&#x2F;config:&#x2F;ql&#x2F;config \  -v $PWD&#x2F;ql&#x2F;log:&#x2F;ql&#x2F;log \  -v $PWD&#x2F;ql&#x2F;db:&#x2F;ql&#x2F;db \  -p 5700:5700 \  --name qinglong \  --hostname qinglong \  --restart always \  whyour&#x2F;qinglong:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>n1等路由器<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker run -dit \  -v $PWD&#x2F;ql&#x2F;config:&#x2F;ql&#x2F;config \  -v $PWD&#x2F;ql&#x2F;log:&#x2F;ql&#x2F;log \  -v $PWD&#x2F;ql&#x2F;db:&#x2F;ql&#x2F;db \  --net host \  --name qinglong \  --hostname qinglong \  --restart always \  whyour&#x2F;qinglong:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ol start="4"><li>删除容器 <pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker rm -f qinglong<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>初次登陆</li></ol><ul><li>初次访问 http://&lt;自己ip&gt;:5700</li><li>使用 admin/adminadmin 登陆，提示已初始化密码</li><li>去自己映射目录config下找 auth.json，查看里面的 password<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker exec -it qinglong cat &#x2F;ql&#x2F;config&#x2F;auth.json<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><ol start="6"><li>Cookie管理</li></ol><ul><li>登陆成功进入Cookie管理页面，右上角新增Cookie(最新版已加Cookie格式验证)</li><li>添加成功，可在Cookie列表更新Cookie，删除Cookie</li></ul><ol start="7"><li>基本命令</li></ol><ul><li>(容器内执行或者新建定时任务时忽略docker exec -it qinglong)</li><li>更新青龙<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker exec -it qinglong ql update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>更新青龙并编译<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker exec -it qinglong ql restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>拉取自定义仓库<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">&lt;!-- 示例 --&gt;docker exec -it qinglong ql repo https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;whyour&#x2F;hundun.git &quot;quanx&quot; &quot;tokens|caiyun|didi|donate|fold|Env&quot;&lt;!-- 可用 --&gt;docker exec -it qinglong ql repo https:&#x2F;&#x2F;github.com&#x2F;6dylan6&#x2F;jdpro.git &quot;jd_|jx_|jddj_&quot; &quot;backUp&quot; &quot;^jd[^_]|USER|JD|function|sendNotify&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>拉取单个脚本<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker exec -it qinglong ql raw https:&#x2F;&#x2F;ghproxy.com&#x2F;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;moposmall&#x2F;Script&#x2F;main&#x2F;Me&#x2F;jx_cfd.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>删除7天前的所有日志<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker exec -it qinglong ql rmlog 7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>启动bot<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker exec -it qinglong ql bot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>导出互助码<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker exec -it qinglong ql code<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>通知测试<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker exec -it qinglong notify test test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>立即执行脚本<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker exec -it qinglong task test.js now<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>并行执行脚本<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker exec -it qinglong task test.js conc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>利用谷歌浏览器获取京东Cookie抓取，cookie值千万不能泄露，设置环境变量，环境变量—&gt;添加变量</p><h1 id="tg机器人获取通知"><a href="#tg机器人获取通知" class="headerlink" title="tg机器人获取通知"></a>tg机器人获取通知</h1><h2 id="生成tg机器人"><a href="#生成tg机器人" class="headerlink" title="生成tg机器人"></a>生成tg机器人</h2><ul><li>搜索<code>@BotFather</code>，进入对话框输入<code>/newbot</code>，输入机器人呢称，输入机器人username（以bot结尾）</li><li>生成机器人成功后会发送 user token ，类似：539****961:AAgVexxxxxxxxxqfa</li><li>在搜索栏搜索<code>@userinfobot</code>,点击 Start,第二行Id即为您的UserID（telegramBotUserId）</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker的简易使用</title>
      <link href="/2022/04/01/docker%E7%9A%84%E7%AE%80%E6%98%93%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/04/01/docker%E7%9A%84%E7%AE%80%E6%98%93%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="在CentOS上使用Docker"><a href="#在CentOS上使用Docker" class="headerlink" title="在CentOS上使用Docker"></a>在CentOS上使用Docker</h1><h2 id="设置仓库"><a href="#设置仓库" class="headerlink" title="设置仓库"></a>设置仓库</h2><ul><li>在新主机上首次安装 Docker Engine-Community 之前，需要设置 Docker 仓库。之后，您可以从仓库安装和更新 Docker。</li><li>安装所需的软件包。yum-utils 提供了 yum-config-manager ，并且 device mapper 存储驱动程序需要 device-mapper-persistent-data 和 lvm2。<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ sudo yum install -y yum-utils \  device-mapper-persistent-data \  lvm2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>设置完之后，根据需求指定稳定的仓库地址（建议使用国内源）<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps"># 官方源地址$ sudo yum-config-manager \    --add-repo \    https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo# 国内源地址# 阿里云$ sudo yum-config-manager \    --add-repo \    http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo    # 清华大学源$ sudo yum-config-manager \    --add-repo \    https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps"># 按安装最新版docker$ sudo yum install docker-ce docker-ce-cli containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps"># 启动 Docker (启动守护进程)$ sudo systemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="查看容器"><a href="#查看容器" class="headerlink" title="查看容器"></a>查看容器</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ docker ps# or 查看所有$ docker ps -a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="启动一个容器"><a href="#启动一个容器" class="headerlink" title="启动一个容器"></a>启动一个容器</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ docker start &lt;CONTAINER ID&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="停止一个容器"><a href="#停止一个容器" class="headerlink" title="停止一个容器"></a>停止一个容器</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ docker stop &lt;CONTAINER ID&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="重启一个容器"><a href="#重启一个容器" class="headerlink" title="重启一个容器"></a>重启一个容器</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ docker restart &lt;CONTAINER ID&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps"># 退出时容器停止$ docker attach &lt;CONTAINER ID&gt;# 退出时容器不停止（推荐）$ docker exec &lt;CONTAINER ID&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="退出容器"><a href="#退出容器" class="headerlink" title="退出容器"></a>退出容器</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="卸载-docker"><a href="#卸载-docker" class="headerlink" title="卸载 docker"></a>卸载 docker</h2><ul><li>删除安装包<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ yum remove docker-ce<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>删除镜像、容器、配置文件等内容<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ rm -rf &#x2F;var&#x2F;lib&#x2F;docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="使用docker安装nginx"><a href="#使用docker安装nginx" class="headerlink" title="使用docker安装nginx"></a>使用docker安装nginx</h2><ul><li><p>获取nginx镜像列表</p><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ docker search nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>拉取nginx镜像到本地，使用第一个默认的’nginx’</p><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ docker pull nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>查看拉取到本地的nginx镜像</p><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ docker images nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>创建并启动nginx容器</p><ul><li>-d 指定容器以守护进程方式在后台运行</li><li>–name 指定容器名称，此处我指定的是docker_nginx</li><li>-p 指定主机与容器内部的端口号映射关系，格式 -p</li><li><code>[宿主机端口号]:[容器内部端口]</code>，此处使用主机80端口，映射容器80端口</li><li>1276 是nginx的镜像IMAGE ID前4位<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ docker run -d --name docker_nginx -p 80:80 1276<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>查看到正在运行的容器</p><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ docker ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="修改nginx的配置文件"><a href="#修改nginx的配置文件" class="headerlink" title="修改nginx的配置文件"></a>修改nginx的配置文件</h3><ul><li>1、每次都进入到nginx容器内部修改<ul><li>执行 <code>docker exec -it xxxx /bin/bash</code> 进入到nginx容器内部<ul><li>exec 命令代表附着到运行着的容器内部</li><li>-it 是 -i 与 -t两个参数合并写法，-i -t 标志着为我们指定的容器创建了TTY并捕捉了STDIN</li><li>xxxx 是我们要进入的容器Id的前4位</li><li>/bin/bash 指定了执行命令的shell</li></ul></li><li>进入到nginx容器内部后，我们可以cd /etc/nginx，可以看到相关的nginx配置文件都在/etc/nginx目录下</li><li>而nginx容器内的默认首页html文件目录为/usr/share/nginx/html</li><li>日志文件位于/var/log/nginx</li><li>nginx容器内默认没有vim编辑器<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ apt-get update$ apt-get install vim<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>容器内编辑nginx.conf配置文件</li><li>执行exit命令我们可以从容器内部退出</li></ul></li><li>2、将nginx容器内部配置文件挂载到主机<ul><li>有这个需求说明频繁改动，可直接安装到服务器</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows常用软件列表</title>
      <link href="/2022/03/30/Windows%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%88%97%E8%A1%A8/"/>
      <url>/2022/03/30/Windows%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows常用软件列表"><a href="#Windows常用软件列表" class="headerlink" title="Windows常用软件列表"></a>Windows常用软件列表</h1><h2 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h2><ul><li><a href="http://www.7-zip.org/">7-Zip</a> - 支持 7z、ZIP、GZIP、BZIP2 和 TAR 格式，其他格式可以解压。开源软件 免费软件</li><li><a href="https://www.bandisoft.com/bandizip/">Bandizip</a> - 轻量级、快速且免费的多合一 Zip 存档器。免费软件</li><li><a href="http://www.rarlab.com/">WinRAR</a> - 一个强大的存档管理器。它可以备份您的数据并减少电子邮件附件的大小，解压缩 RAR、ZIP 和其他文件。</li></ul><h2 id="开发者工具"><a href="#开发者工具" class="headerlink" title="开发者工具"></a>开发者工具</h2><ul><li><a href="http://www.telerik.com/fiddler">Fiddler</a> - 强大的抓包工具</li><li><a href="https://filezilla-project.org/">FileZilla</a> - FTP、FTPS 和 SFTP 客户端。开源软件 免费软件</li><li><a href="https://git-scm.com/downloads">Git</a> - Git是一个开源的分布式版本控制系统。开源软件 免费软件</li><li><a href="https://mremoteng.org/">mRemoteNG</a> - mRemoteNG是一款用于Windows开源、多协议的远程连接管理器（<a href="https://github.com/mRemoteNG/mRemoteNG">github地址</a>）。开源软件 免费软件</li></ul><h2 id="办公套件"><a href="#办公套件" class="headerlink" title="办公套件"></a>办公套件</h2><ul><li><a href="https://www.freeoffice.com/zh/">FreeOffice</a> - FreeOffice 是一个完整的办公套件，带有文字处理器、电子表格应用程序和演示程序——所有这些都与 Microsoft Office 中的同类产品兼容。免费软件</li><li><a href="http://www.office.com/">Microsoft Office</a> - 微软的办公生产力套件。收费</li><li><a href="http://www.sumatrapdfreader.org/free-pdf-reader.html">Sumatra PDF</a> - PDF、ePub、MOBI、CHM、XPS、DjVu、CBZ、CBR 阅读器。开源软件 免费软件</li></ul><h2 id="文本编辑器"><a href="#文本编辑器" class="headerlink" title="文本编辑器"></a>文本编辑器</h2><ul><li><a href="https://atom.io/">Atom</a> - Atom 是 Github 专门为程序员推出的一个跨平台文本编辑器。开源软件 免费软件</li><li><a href="http://brackets.io/">Brackets</a> - 一个现代的、开源的文本编辑器，可以理解网页设计。开源软件 免费软件</li><li><a href="http://www.vim.org/download.php#pc">GVim</a> - (G)Vim 是一个高度可配置的文本编辑器，旨在实现高效的文本编辑。开源软件 免费软件</li><li><a href="http://lighttable.com/">Light Table</a> - 一个可定制的编辑器，具有即时反馈并显示数据值在您的代码中流动。开源软件 免费软件</li><li><a href="https://neovim.io/">Neovim</a> - 从字面上看是 vim 的未来开源软件 免费软件</li><li><a href="https://notepad-plus-plus.org/">Notepad++</a> - 支持多种编程语言的源代码编辑器。开源软件 免费软件</li><li><a href="http://www.flos-freeware.ch/notepad2.html">Notepad2</a> - 具有许多有用功能的小巧快速的记事本替换。开源软件 免费软件</li><li><a href="http://onivim.io/">Oni</a> - 现代模态编辑 - 由 Neovim 提供支持开源软件 免费软件</li><li><a href="https://spacevim.org/">SpaceVim</a> - 社区驱动的 vim 发行版开源软件 免费软件</li><li><a href="http://www.sublimetext.com/3">Sublime Text 3</a> - 是一款跨平台代码编辑器软件。</li><li><a href="https://code.visualstudio.com/">Visual Studio Code</a> - 构建和调试现代 Web 和云应用程序。开源软件 免费软件</li></ul><h2 id="生产率"><a href="#生产率" class="headerlink" title="生产率"></a>生产率</h2><ul><li><a href="http://ditto-cp.sourceforge.net/">Ditto</a> - 剪贴板管理器。</li><li><a href="http://www.voidtools.com/">Everything</a> - 按名称最快的文件/文件夹搜索工具。</li></ul><h2 id="实用工具"><a href="#实用工具" class="headerlink" title="实用工具"></a>实用工具</h2><ul><li><a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">Clash</a> - Clash 是一款使用 Go 语言编写的代理工具，支持规则分流。 免费软件</li><li><a href="https://github.com/2dust/v2rayN/releases">v2rayN</a> - v2rayN是基于v2ray核心的简洁好用、功能强大的v2ray客户端,支持Vmess、Shadowsocks、Socks5等多种协议,也支持服务器订阅。</li><li><a href="https://potplayer.daum.net/?lang=zh_CN">PotPlayer</a> - 功能强大的多媒体播放器，内置解码器。</li><li><a href="https://www.disktool.cn/recovery/winfr.html">WinFR</a> - 傲梅科技开发的WinFR是Windows文件恢复（微软命令行程序）的免费图形界面，帮助用户快速从Windows 10/11中恢复已删除的文件</li></ul><h2 id="绿色软件"><a href="#绿色软件" class="headerlink" title="绿色软件"></a>绿色软件</h2><ul><li><a href="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/pdfelement_58150.zip">Wondershare PDFelement</a> - Wondershare PDFelementv7.6.0.4878免安装版，是一款非常受欢迎的PDF编辑工具。该软件主要为用户提供了强大的编辑功能，也支持强大的OCR光学识别引擎，是最好用的专业pdf编辑软件之一</li><li><a href="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/navicat_premium.zip">Navicat Premium</a> - Navicat premium是一款数据库管理工具,是一个可多重连线资料库的管理工具，它可以让你以单一程式同时连线到 MySQL、SQLite、Oracle 及 PostgreSQL 资料库，让管理不同类型的资料库更加的方便</li><li><a href="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/debut.zip">Debut Video Capture Software</a> - Debut Video Capture Software是一款简单易用的屏幕录制软件，可以捕捉你的屏幕和摄像头</li><li><a href="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/ii3-Setup.zip">iRead</a> - iRead是一款最为流行和最具阅读体验的阅读器、电子书制作工具和读书平台，支持txt、pdf、epub、ib3等多种文件格式</li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 下载 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在Microsoft官网下载Windows镜像</title>
      <link href="/2022/03/30/%E5%A6%82%E4%BD%95%E5%9C%A8Microsoft%E5%AE%98%E7%BD%91%E4%B8%8B%E8%BD%BDWindows%E9%95%9C%E5%83%8F/"/>
      <url>/2022/03/30/%E5%A6%82%E4%BD%95%E5%9C%A8Microsoft%E5%AE%98%E7%BD%91%E4%B8%8B%E8%BD%BDWindows%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="如何在Microsoft官网下载Windows镜像"><a href="#如何在Microsoft官网下载Windows镜像" class="headerlink" title="如何在Microsoft官网下载Windows镜像"></a>如何在Microsoft官网下载Windows镜像</h1><h2 id="1-直接打开链接，选择指定的版本下载"><a href="#1-直接打开链接，选择指定的版本下载" class="headerlink" title="1. 直接打开链接，选择指定的版本下载"></a>1. 直接打开链接，选择指定的版本下载</h2><ul><li><a href="https://support.microsoft.com/zh-cn/windows/%E5%88%9B%E5%BB%BA%E9%80%82%E7%94%A8%E4%BA%8E-windows-%E7%9A%84%E5%AE%89%E8%A3%85%E4%BB%8B%E8%B4%A8-99a58364-8c02-206f-aa6f-40c3b507420d">https://support.microsoft.com/zh-cn/windows/%E5%88%9B%E5%BB%BA%E9%80%82%E7%94%A8%E4%BA%8E-windows-%E7%9A%84%E5%AE%89%E8%A3%85%E4%BB%8B%E8%B4%A8-99a58364-8c02-206f-aa6f-40c3b507420d</a></li></ul><h2 id="2-在微软官网搜索“安装介质”关键词，根据搜索结果达到下载链接，选择指定的版本下载"><a href="#2-在微软官网搜索“安装介质”关键词，根据搜索结果达到下载链接，选择指定的版本下载" class="headerlink" title="2. 在微软官网搜索“安装介质”关键词，根据搜索结果达到下载链接，选择指定的版本下载"></a>2. 在微软官网搜索“安装介质”关键词，根据搜索结果达到下载链接，选择指定的版本下载</h2>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 下载 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我喜欢你，一如心念心</title>
      <link href="/2022/03/16/%E6%88%91%E5%96%9C%E6%AC%A2%E4%BD%A0%EF%BC%8C%E4%B8%80%E5%A6%82%E5%BF%83%E5%BF%B5%E5%BF%83/"/>
      <url>/2022/03/16/%E6%88%91%E5%96%9C%E6%AC%A2%E4%BD%A0%EF%BC%8C%E4%B8%80%E5%A6%82%E5%BF%83%E5%BF%B5%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<h1 id="我喜欢你，一如心念心"><a href="#我喜欢你，一如心念心" class="headerlink" title="我喜欢你，一如心念心"></a>我喜欢你，一如心念心</h1><p>“生活啥子时候给过我十八岁</p><p>我奋力以赴的终点，还不如你的起点</p><p>喜欢一个人的时候，哪个又不是烂命一条</p><p>河里的虾和海里的虾能生活在一起吗</p><p>我喜欢你！！是同学之间的喜欢，是同桌之间的喜欢，也是十七十八岁的时候真心实意的喜欢！！我喜欢你，那你呢？”</p><p>看到<a href="https://foamzou.com/2020/11/29/%e9%a3%8e%e7%8a%ac%e5%b0%91%e5%b9%b4%e7%9a%84%e5%a4%a9%e7%a9%ba-%e5%96%9c%e6%ac%a2%e7%9a%84%e8%af%ad%e5%bd%95/">这篇文章</a>的开头突然有点感慨</p><p>喜欢是什么？总不能是乍见之欢，在我的经历里，喜欢是一座城市通往另一座城市的公交车，是那一段漫长但又觉得短暂的路程上美好的设想及路上景色，是两杯星巴克以及一个因为矜持而没有吃完的小cake，是一张留下瞬间回忆并时不时拿出来回味的照片，是三言两语的闲聊，是场喜欢的电影…</p><p>在大多数人的认知里，十八岁应该是青春最美好的时刻，小的时候一直幻想自己的十八岁，但记忆里已全然不记得自己幻想的模样了。但此时，自己的十八已经远离自己好些个年头了，印象中那年还在奋力准备高考吧，是一个奋斗的时刻，但后来结果也不尽人意，虽然淡然面对，心里却也是有一丝丝愧意。</p><p>其实二十岁开头那几年，可能才是青春该有的样子，前无忧后无虑，去走走向往的地方，去看看喜欢的人，去学想学的东西，去做想做的事情；也喜欢漫无目的地走，去看喜欢的书，去温习看了无数遍的电影，体验过早出晚归却很充实的日子。匆匆而过的日子，像是刻画在小册子上的漫画，不经意间翻动，竟发现许多感动自己的情节。</p><p>在往后的那些日子与喜欢的你同在，生活的每一刻，都在感动着我们，在奋力前行，期许不辜负日子</p>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Chrome开发者工具进行网页长截图</title>
      <link href="/2022/03/10/%E5%88%A9%E7%94%A8Chrome%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E8%BF%9B%E8%A1%8C%E7%BD%91%E9%A1%B5%E9%95%BF%E6%88%AA%E5%9B%BE/"/>
      <url>/2022/03/10/%E5%88%A9%E7%94%A8Chrome%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E8%BF%9B%E8%A1%8C%E7%BD%91%E9%A1%B5%E9%95%BF%E6%88%AA%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="利用Chrome开发者工具进行网页长截图"><a href="#利用Chrome开发者工具进行网页长截图" class="headerlink" title="利用Chrome开发者工具进行网页长截图"></a>利用Chrome开发者工具进行网页长截图</h1><h2 id="打开开发者工具（F12）"><a href="#打开开发者工具（F12）" class="headerlink" title="打开开发者工具（F12）"></a>打开开发者工具（F12）</h2><h2 id="按下-Ctrl-Shift-P"><a href="#按下-Ctrl-Shift-P" class="headerlink" title="按下 Ctrl + Shift + P"></a>按下 Ctrl + Shift + P</h2><ul><li><p>输入命令：Capture full size screenshot</p></li><li><p>敲下回车，Chrome就会自动截取整个网页内容并保存至本地（网页过长的时候需要等一会儿）</p></li><li><p>输入命令：Capture area screenshot</p></li><li><p>敲下回车，可以框选想截屏的区域</p></li><li><p>输入命令：Capture后，会提示更多截屏的方式，可根据需要进行选择</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome网页长截图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021-年终总结</title>
      <link href="/2021/12/31/2021-%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
      <url>/2021/12/31/2021-%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么写？"><a href="#为什么写？" class="headerlink" title="为什么写？"></a>为什么写？</h2><ul><li>History does not repeat itself, but it does often rhyme.</li><li>这句话不知道该怎么翻译才好，看了很多翻译，总觉得get不到那个点，我觉得倒不如翻译成这样：不重来的旅程，却有着重样的境遇。境遇好与坏，岂敢断言？如果不回顾旅程，细数好坏，那明天是否也会走同样的路？好的一样好，坏的同样再继续。其实人真正的成长，可能就在一瞬间，在那么一个你不经意的瞬间，“嗖”的一下，就成长了，可能你还没察觉，可能你也不知道。但所谓的“成长”，没有什么严明的界定，大概是你懂得了某件事情，也大概是你潜意识里多了一个念想。但是当你没有回顾自己的过去时，你不知道过去的好与坏，更不知道其实成长就在不经意的瞬间。2021年，是一个欢与悲共存的得一年，人生百态，尽显其中，所以趁着这个2021的最后几天，总结一下2021的得与失，总结经验之余，同样盼望未来的路会走得更加顺畅。（其实写的时候心情很复杂，时而沉重，时而欢快，如果您觉得看起来比较困难，那您大可以看到这儿就结束了，虽然我知道没人看，但是还是要温馨提示一下，haha…）</li><li>老实说，决定提笔前也是想了很多，思绪万千，情绪也是很纠结，该不该写？该怎么写？写给谁看？写了自己就能得到什么吗？其实大概率是并没有！只是情感刚好到达了某个点，就想写点东西慰藉自己，以至于不让自己觉得一整天都在浑浑噩噩地过日子，一整天都在想些已经发生却又不尽人意的事情，一整天都在无心向上的样子。所以，所谓的“总结”不一定是总结，可能在某种程度上来说是一种倾诉，从未奢望“总结”能给自己带来意外的收获，但是希望能让自己“倾诉”出来，让更多的思绪趋向于积极向上。</li></ul><h2 id="回顾预告（2021-12-23，微信朋友圈）"><a href="#回顾预告（2021-12-23，微信朋友圈）" class="headerlink" title="回顾预告（2021-12-23，微信朋友圈）"></a>回顾预告（2021-12-23，微信朋友圈）</h2><ul><li>夫风生于地，起于青蘋之末。着实慵懒了，抓住2021的尾巴来个年度总结吧！读《掌控习惯》时，作者James Clear提到他的年终总结是回答了三个问题：1.今年什么事做得比较好； 2.今年哪些事做得不太好； 3.我学到了什么。那就来个预告吧，12月31日damao2250.github.io见！</li></ul><h2 id="总结正文"><a href="#总结正文" class="headerlink" title="总结正文"></a>总结正文</h2><ul><li><p>似乎这一整年的话题都离不开COVID-19，不知不觉“抗疫运动”已经持续了两年，还记得最初的记忆是2019年香港出现暴乱，随后2019年末就出现疫情，所有药店口罩被“疯抢”，库存清零。曾经很反感带口罩的我，也渐渐习惯了出门就带口罩，健康码、行程码在生活中也担起重要角色，核酸检测更是少不了。可能对很多人来说，这一场疫情是机遇和挑战，但同样对大部分人来说，是一场生死存亡的竞速。但对于我来说，可能好坏比较均衡，因为这一整个过程还算是比较均衡，没有什么突出亮点，也没有什么“恨铁不成钢”，趋向于平稳，不过似乎时间跑赢了一点点。为什么这么说？其实没有什么具体事项，而是自我的整体感觉：一样的成绩，花费了更多的时间。</p><h3 id="先说两件能让我喜上眉梢的两件事"><a href="#先说两件能让我喜上眉梢的两件事" class="headerlink" title="先说两件能让我喜上眉梢的两件事"></a>先说两件能让我喜上眉梢的两件事</h3><ul><li>第一件就是2021年初（印象中应该是年初五了）我家和女朋友家两个家庭的人首次相聚，其实我想都没想过要这么快就到来了，感觉什么准备都没有就要父母相见了，甚至激动得有点睡不着。于是开始着手准备些礼物，毕竟大过年的，而且是第一次举家去女朋友家里。烟酒茶这些自然是少不了的了，让我印象最深的是买烟的事，为了图个吉利，那会儿就是要买“红双喜”牌的烟，但是恰逢过年，镇上所有的商店、批发部基本都卖完了，要么就只剩下散装，眼看着第二天就要去女朋友家了，所有礼品都准备好了，就还差烟。各种打电话、发微信，但凡认识跟烟有关的人都问了一遍，还是没有着落，忙活了一下午。无奈之下只能去区里看看了，心想着镇上没有，区里总该有了吧。于是我爸带着我往区里赶，先问几个大超市，再问几个批发部，得到的结果都是没有，那时天已经渐渐变暗了，还有些落日的余晖，似乎在暗示着“还有希望”，正好此时我爸想去一条小巷子里买个红包皮，然后顺便就问了下，结果居然有一条红双喜的烟，远远看到他脸上的笑容，他正向我招了一下手，我就知道有希望了。看到他拿了一个大红色得塑料袋装着烟健步走来，那种喜出望外的感觉，别提心里有多开心。他很笑着说：“我在那边买了一条烟”，然后又沉重的补了一句：“但是还差一条啊”。于是我俩“兵分两路”，穿梭在大街小巷里，逢店必问。最后我在大路边的一个小批发部找到了希望，顺利买到了第二条烟。此时天已经黑了，但是掩盖不住我们脸上的喜悦，买完后就赶紧往家的方向飞驰回去了。第二天早上，我早早就醒来了，看了下时间凌晨五点多，但是我已经睡不着了，起来收拾点自己的东西，因为我是打算去女朋友家住几天，然后跟她一起去广州的。但是爸妈他们此时还在睡梦中，此时的我已经在蹑手蹑脚的收拾自己的东西了，不敢发出太大动静，生怕这么早就吵醒他们。但没想到的是，没过多久他们也都起床了，他们也希望能出发早一点，于是天微亮，我们就已经出发了。至于女朋友那边，看得出来他们也是一大早的，忙前忙后的为我们的到来做了很多准备，每个人都很热情。那种其乐融融的氛围，可能是我这辈子也无法忘掉的一番景象。本来我还预想着会不会有那种尬聊的场景，但是看到他们茶前饭后的交谈，就大可不必担心了。两个家庭短短小半天的相聚，却汇聚了无数的情感跟欢乐，每次回想起来当时的情景，都是满满的幸福感。</li></ul><br /><ul><li>第二件就是五一的阳江之旅，说来其实算是四个家庭的户外活动了，我一家、我女朋友一家、我妹她男朋友一家、我哥他们一家，虽说这可能是我妹跟她男朋友的主场，但是一整个旅行下来，大家都还算玩得虽然没有比较尽兴的，但也还算勉强能过得去，除了路途有些遥远跟有些堵车外。其实这一次除了玩之外，我觉得最重要的一点就是大家这么多人能有机会聚在一起，特别是在疫情还存在的情况下，非常难得。期间最快乐的应该就是要返程那天的下午了，因为三天的路程中有大半时间是浪费在路上的，还有小部分时间是下雨天，而回程的那天下午天气还算是可以的，然后我们的目的地是海边。一开始的时候大家还很矜持，没有下海去玩，但后来逐渐放开之后，大家就开始一起慢慢“海上冲浪”了，玩得可起劲了。让我感觉开心的还有件事，就是带上了李思祈，这个小不点，欢乐也是挺多的，让我提前体检了“做家长”的感觉。</li></ul><h3 id="再说两件让我透骨酸心的事"><a href="#再说两件让我透骨酸心的事" class="headerlink" title="再说两件让我透骨酸心的事"></a>再说两件让我透骨酸心的事</h3><ul><li>2021-07-15，也就是六月初六的傍晚，一个让我久久不能接受的现实，奶奶与世长辞了。在这的前几天，看得出来每个人的心里都做着准备了，可是怎么办，多希望能帮奶奶分担点痛苦，每次看到她苍老的容颜，以前跟她聊天的种种场景浮现在眼前，以前还小的时候她对我的叮嘱，似乎有回响在耳旁。记得刚从广州赶回来的那晚，回到已是晚上十一点多，伯伯们怕我们饿，已经提前为我们热好饭菜，可是哪儿来的心思呀，一下车飞奔到奶奶那间熟悉的屋子，怎么就这样了，前几天看到她在视频里还帮我哥带着小孩呢，怎么一摔倒说起不来就起不来了呢！我轻轻的在她身旁叫了声奶奶，看着她用尽了全力回应了一生：“嗯”，很快又松了一口气，顿时眼角就湿润了，握着她皮包骨的双手，陪伴了她一会儿，她稍微安静了下来，没有反反复复的翻身，然后我才出去整理了下容装。此时最好的方式可能就剩下陪伴了，默默的坐在她床边，不知道做什么，也不能做点什么。持续到凌晨一点多，这是爸妈才赶回来到，看到他们焦脆的样子，估计心里也是很担心的了，回来从我妈的嘴里得知，我爸一路从广东开车赶回来，连休息都不舍得休息，有好几次自己边开车还边落着泪，我妈看不下去了，就找各种其他话题跟他聊，心里的牵挂在拉扯着他的心。那一晚，直到凌晨四点多我才回去眯了一会儿，一大早六点，天刚微亮，又起来了，只想着能多陪陪奶奶。可最后那一天还是来了，刚好六月初六，是我们那里重要的节日，每年的这一天都会宴请好多亲朋好友来家里做客，可今年我们做了个决定，取消宴请客人。可是这天依然来了很多人，但是他们都不是来做客的，都是看看望奶奶的。但大家都看得出来此时的奶奶已经没有什么意识了，翻来覆去，看着她很是痛苦的样子，感觉到很心酸。大家依然会说“没事的，会好转的，不用太担心”。持续到旁晚，客人也都走了，恢复了冷清清的。我在大门口坐着，思绪很凌乱，还没持续多久，突然大家都往奶奶的房间里跑，我也赶忙的转身跑进去，但此时已经绷不住了，我在人群外看到宁静而又慈祥的面孔，渐渐泪水迷糊了双眼，用上所有的劲咬住自己的嘴唇，没敢哭出声，久久没能平静。愿您在另一个世界里一起都安好！</li></ul><br /><ul><li>时间定格在十二月份（2021-12-14），事发前其实也是有些预感的，但可能只是巧合，因为我从来没有试过回到家还没看到她就感到很着急很着急，着急到要打电话那种。其实这个世界上，再怎么经久不衰的爱情，都离不开物质基础的支撑，但每个人的满足欲都不一样，所以会看到有些在我们眼里看来不怎好的，但是他们也是过得其乐融融。在我身上也终归逃不过这一劫。现在的情形就是，想要结婚就必须先买房，其中的原因这里就不再阐述。可是谈及买房，若是老家还好说，可是老家的房子我们完全派不上用场啊，但是广州的房子，一时间就要买，又谈何容易呢。财富都是慢慢积累的，出身贫寒家庭也不是我所能决定的，陷入了有心无力的情景。理想与现实的执拗，现实太骨感，就算你深爱着她，她也不得不面临着这样的抉择，毕竟谁不希望自己的未来能更好。我们两个未来的路如何，没人敢去拽测，但我已经为最坏的打算做好了准备。但我更希望的是我们未来的路越走越好，也希望我是那个能陪伴你走到最后的那个人。我虽然不够好，但我会努力给你更好。</li></ul></li></ul><br ><ul><li><p>说了这么多，其实无谓“总结”，权且当作是记录吧，记录自己“两进两出”之情绪变迁，世事无常，谁会意料到明天会发生什么事，回到最初的意愿，那就像《掌控习惯》作者所说的那样，回答三个问题吧。</p><h3 id="1-今年什么事做得比较好；"><a href="#1-今年什么事做得比较好；" class="headerlink" title="1. 今年什么事做得比较好；"></a>1. 今年什么事做得比较好；</h3><ul><li>几经波折，终于把自己的户口转移到广州了，定居广州的信念也更加增强了</li><li>成功地更换了新的工作，虽然新的工作也不咋地，但是相比原来的工作，还是稍稍有些提升的</li><li>坚持更新博客，今年总共坚持写27篇博文包含一些学习心得，相比去年的16篇提升了30%，平均每个月两篇多一点</li><li>更换了自己感觉比较好的租房，之前的住房虽然也不算太差，但不是自己租的，总觉得住得不够肆意</li></ul><h3 id="2-今年哪些事做得不太好；"><a href="#2-今年哪些事做得不太好；" class="headerlink" title="2. 今年哪些事做得不太好；"></a>2. 今年哪些事做得不太好；</h3><ul><li>曾经有一份很高的工作排在我面前，但是最后是关于履历时间不一致的谎话，擦肩而过</li><li>没有很认真的看及复习，英语的等级考试没过，还差几分</li><li>关于自己的性格没有完全的认识，也没有改进（软弱？没有主见？得过且过？遇事总是沉默？）</li><li>把go跟flutter都荒废了，都是刚学了一半，没有去写真实的项目，也没有坚持练习巩固</li></ul><h3 id="3-我学到了什么；"><a href="#3-我学到了什么；" class="headerlink" title="3. 我学到了什么；"></a>3. 我学到了什么；</h3><ul><li>学习了TypeScript，并在项目中实践了，总体的感觉还是比较好的，严谨，就是有些繁琐了</li><li>备份博文，说多了都是泪，意外的把电脑重装系统了，本来只是想格式化C盘的，结果连D盘也干没了，自然之前写好的博文只剩hexo打包过后的格式了，md格式没有了，一把心酸一把泪地把博文又重新复制一遍，重要的事说三遍：记得多备份！记得多备份！记得多备份！（包括自己大多数的重要数据）</li><li>重新认识了git版本控制工具，现在算是可以走一个比较完整的版本控制流程了</li><li>学习了自动化部署的一些相关知识，及docker的一些命令</li><li>把Nginx相关的知识点及反向代理原理理解了</li></ul></li></ul><h2 id="Best-buy"><a href="#Best-buy" class="headerlink" title="Best buy"></a>Best buy</h2><ul><li>买了一本书：《原则》</li><li>买了一台手机：iPhone 13</li><li>买了一个手表：Apple Watch Series 7</li></ul><h2 id="新的一年想做的（flag）"><a href="#新的一年想做的（flag）" class="headerlink" title="新的一年想做的（flag）"></a>新的一年想做的（flag）</h2><ul><li>来一次登山之旅</li><li>读《原则》</li><li>过英语等级考试</li><li>至少办一件大事（…）</li></ul><h2 id="分享一些东西"><a href="#分享一些东西" class="headerlink" title="分享一些东西"></a>分享一些东西</h2><ul><li><p>关于认知的50种偏差</p></li><li><p>马斯克说：“Should be taught to all at a young age”。这张图还是有点意思的，但是是翻译版本，有些翻译可能不太准确，但不影响理解，喜欢的话可以去看马克思的推文—&gt;<a href="https://twitter.com/elonmusk/status/1472647410568642564">https://twitter.com/elonmusk/status/1472647410568642564</a></p></li><li><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E5%85%B3%E4%BA%8E%E8%AE%A4%E7%9F%A5%E5%BE%9750%E7%A7%8D%E5%81%8F%E5%B7%AE.jpg" alt="关于认知的50种偏差(翻译版)"></p></li><li><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/FG_lAyfXIAIduQo.jfif" alt="关于认知的50种偏差(英文版)"></p></li></ul><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><ul><li>冰冻三尺非一日之寒，继续努力，加油Damao(ง •_•)ง</li></ul>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于js宏任务和微任务的理解</title>
      <link href="/2021/12/30/%E5%85%B3%E4%BA%8Ejs%E5%AE%8F%E4%BB%BB%E5%8A%A1%E5%92%8C%E5%BE%AE%E4%BB%BB%E5%8A%A1%E7%9A%84%E7%90%86%E8%A7%A3/"/>
      <url>/2021/12/30/%E5%85%B3%E4%BA%8Ejs%E5%AE%8F%E4%BB%BB%E5%8A%A1%E5%92%8C%E5%BE%AE%E4%BB%BB%E5%8A%A1%E7%9A%84%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="js的宏任务和微任务（作者：老司机）"><a href="#js的宏任务和微任务（作者：老司机）" class="headerlink" title="js的宏任务和微任务（作者：老司机）"></a>js的宏任务和微任务（作者：老司机）</h1><h2 id="一、前提（随便过一下）"><a href="#一、前提（随便过一下）" class="headerlink" title="一、前提（随便过一下）"></a>一、前提（随便过一下）</h2><ol><li>同步与异步</li></ol><ul><li>异步代码，如通过事件注册的回调，调用时，特点是调用后立即返回，到没有得到结果（后续通过回调函数获取）</li><li>同步代码，逐行执行的代码，特点是调用后，要等待该调用执行完毕，否则不会往下执行（调用返回后，结果也拿到了），如全局代码、非回调函数</li></ul><ol start="2"><li>事件循环：js是单线程语言（单线程执行代码），通过该机制高效执行代码</li><li>调用栈：当调用函数时，就会开辟内存空间（压栈），调用完毕后就会释放内存</li><li>队列：当某个事件有结果后，该事件所注册的回调函数被推入队列中，等待读入主线程执行（主线程空闲后就会执行该步骤）</li></ol><h2 id="二、宏任务"><a href="#二、宏任务" class="headerlink" title="二、宏任务"></a>二、宏任务</h2><ul><li>在调用栈中直接执行的代码，如：全局代码、定时器（setInterval）、延迟器（setTimeout）、promise、function（一般的函数）等，其中一个函数可认为是一个宏任务</li></ul><h2 id="三、微任务"><a href="#三、微任务" class="headerlink" title="三、微任务"></a>三、微任务</h2><ul><li>微任务是在执行某些宏任务时产生的，它们会在执行下一个宏任务之前执行，如：Promise.then等</li></ul><h2 id="四、示例代码"><a href="#四、示例代码" class="headerlink" title="四、示例代码"></a>四、示例代码</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/** * - 事件循环第一轮：执行宏任务1【testPromise()、setTimeout()、console.log(123)】 * 其中，testPromise().then()生成了一个微任务，两个setTimeout()注册了两个回调函数，执行完毕后，开始执行本轮事件循环产生的微任务then() * - 事件循环第二轮：（假如已经在某一刻将回调函数推入队列）读取一个延迟器注册的函数到主线程执行，该轮事件循环没有微任务 * - 事件循环第三轮：读取一个延迟器注册的回调到主线程执行... */</span><span class="token keyword">function</span> <span class="token function">testPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"----> Promise"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">testPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-----> setTimeout 1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"-----> setTimeout 2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 宏任务 </tag>
            
            <tag> 微任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过canvas生成水印方案</title>
      <link href="/2021/12/27/%E9%80%9A%E8%BF%87canvas%E7%94%9F%E6%88%90%E6%B0%B4%E5%8D%B0%E6%96%B9%E6%A1%88/"/>
      <url>/2021/12/27/%E9%80%9A%E8%BF%87canvas%E7%94%9F%E6%88%90%E6%B0%B4%E5%8D%B0%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h2 id="通过自定义指令生成canvas水印原理"><a href="#通过自定义指令生成canvas水印原理" class="headerlink" title="通过自定义指令生成canvas水印原理"></a>通过自定义指令生成canvas水印原理</h2><ul><li>水印（watermark）是一种容易识别、被夹于纸内，能够透过光线穿过从而显现出各种不同阴影的技术。<br>实现</li><li>前端实现的水印基本都是不安全的，可被破解的</li><li>使用canvas生成base64格式的图片文件，并将其设置为对应元素的背景图片，从而产生水印效果</li><li>通过绑定vue自定义指令，可以快速实现页面或组件局部水印效果</li></ul><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><ul><li><p>创建<code>directives.js</code>文件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 添加水印</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span>Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">'watermark'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">function</span> <span class="token function">addWaterMarker</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> parentNode<span class="token punctuation">,</span> font<span class="token punctuation">,</span> textColor</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 水印文字，父元素，字体，文字颜色</span>    <span class="token keyword">var</span> can <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    parentNode<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>can<span class="token punctuation">)</span><span class="token punctuation">;</span>    can<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>    can<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>    can<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> cans <span class="token operator">=</span> can<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cans<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cans<span class="token punctuation">.</span>font <span class="token operator">=</span> font <span class="token operator">||</span> <span class="token string">"16px PingFang SC"</span><span class="token punctuation">;</span>    cans<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> textColor <span class="token operator">||</span> <span class="token string">"rgba(180, 180, 180, 0.3)"</span><span class="token punctuation">;</span>    cans<span class="token punctuation">.</span>textAlign <span class="token operator">=</span> <span class="token string">'left'</span><span class="token punctuation">;</span>    cans<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">'Middle'</span><span class="token punctuation">;</span>    cans<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> can<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">,</span> can<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    parentNode<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundImage <span class="token operator">=</span> <span class="token string">"url("</span> <span class="token operator">+</span> can<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">"image/png"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">addWaterMarker</span><span class="token punctuation">(</span>binding<span class="token punctuation">.</span>value<span class="token punctuation">.</span>text<span class="token punctuation">,</span> el<span class="token punctuation">,</span> binding<span class="token punctuation">.</span>value<span class="token punctuation">.</span>font<span class="token punctuation">,</span> binding<span class="token punctuation">.</span>value<span class="token punctuation">.</span>textColor<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>main.js 引入directives.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span>  <span class="token string">'@/utils/directives'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div v<span class="token operator">-</span>watermark<span class="token operator">=</span><span class="token string">"&#123;text:'水印',textColor:'rgba(180, 180, 180, 0.3)'&#125;"</span><span class="token operator">></span>    这里是内容区域！  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Canvas </tag>
            
            <tag> 水印 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS中的递归示例</title>
      <link href="/2021/11/24/JS%E4%B8%AD%E7%9A%84%E9%80%92%E5%BD%92%E7%A4%BA%E4%BE%8B/"/>
      <url>/2021/11/24/JS%E4%B8%AD%E7%9A%84%E9%80%92%E5%BD%92%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="原始数据"><a href="#原始数据" class="headerlink" title="原始数据"></a>原始数据</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token comment">// 一级</span>  <span class="token punctuation">&#123;</span>    indexCode<span class="token operator">:</span> <span class="token string">'root00'</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'总区域'</span><span class="token punctuation">,</span>    parentIndexCode<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 二级</span>  <span class="token punctuation">&#123;</span>    indexCode<span class="token operator">:</span> <span class="token string">'A-01'</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'A区域-01'</span><span class="token punctuation">,</span>    parentIndexCode<span class="token operator">:</span> <span class="token string">'root00'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    indexCode<span class="token operator">:</span> <span class="token string">'B-01'</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'B区域-01'</span><span class="token punctuation">,</span>    parentIndexCode<span class="token operator">:</span> <span class="token string">'root00'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 三级</span>  <span class="token punctuation">&#123;</span>    indexCode<span class="token operator">:</span> <span class="token string">'A-01-01'</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'A区域-01-01'</span><span class="token punctuation">,</span>    parentIndexCode<span class="token operator">:</span> <span class="token string">'A-01'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    indexCode<span class="token operator">:</span> <span class="token string">'A-01-02'</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'A区域-01-02'</span><span class="token punctuation">,</span>    parentIndexCode<span class="token operator">:</span> <span class="token string">'A-01'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 四级</span>  <span class="token punctuation">&#123;</span>    indexCode<span class="token operator">:</span> <span class="token string">'A-01-01-01'</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'A区域-01-01-01'</span><span class="token punctuation">,</span>    parentIndexCode<span class="token operator">:</span> <span class="token string">'A-01-01'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">createTree</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> parentIndex</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> treeData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>parentIndex <span class="token operator">==</span> item<span class="token punctuation">.</span>parentIndexCode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      item<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token function">createTree</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> item<span class="token punctuation">.</span>indexCode<span class="token punctuation">)</span><span class="token punctuation">;</span>      treeData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> treeData<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="递归结果"><a href="#递归结果" class="headerlink" title="递归结果"></a>递归结果</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token function">createTree</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">'root00'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 结果</span><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    indexCode<span class="token operator">:</span> <span class="token string">"A-01"</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">"A区域-01"</span><span class="token punctuation">,</span>    parentIndexCode<span class="token operator">:</span> <span class="token string">"root00"</span><span class="token punctuation">,</span>    children<span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        indexCode<span class="token operator">:</span> <span class="token string">"A-01-01"</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">"A区域-01-01"</span><span class="token punctuation">,</span>        parentIndexCode<span class="token operator">:</span> <span class="token string">"A-01"</span><span class="token punctuation">,</span>        children<span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span>            indexCode<span class="token operator">:</span> <span class="token string">"A-01-01-01"</span><span class="token punctuation">,</span>            name<span class="token operator">:</span> <span class="token string">"A区域-01-01-01"</span><span class="token punctuation">,</span>            parentIndexCode<span class="token operator">:</span> <span class="token string">"A-01-01"</span><span class="token punctuation">,</span>            children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        indexCode<span class="token operator">:</span> <span class="token string">"A-01-02"</span><span class="token punctuation">,</span>        name<span class="token operator">:</span> <span class="token string">"A区域-01-02"</span><span class="token punctuation">,</span>        parentIndexCode<span class="token operator">:</span> <span class="token string">"A-01"</span><span class="token punctuation">,</span>        children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    indexCode<span class="token operator">:</span> <span class="token string">"B-01"</span><span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">"B区域-01"</span><span class="token punctuation">,</span>    parentIndexCode<span class="token operator">:</span> <span class="token string">"root00"</span><span class="token punctuation">,</span>    children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx编译安装配置</title>
      <link href="/2021/11/19/Nginx%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/11/19/Nginx%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-编译安装配置"><a href="#Nginx-编译安装配置" class="headerlink" title="Nginx 编译安装配置"></a>Nginx 编译安装配置</h1><h2 id="一、安装编译需要的软件依赖"><a href="#一、安装编译需要的软件依赖" class="headerlink" title="一、安装编译需要的软件依赖"></a>一、安装编译需要的软件依赖</h2><ul><li>gcc和gcc-c++<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">yum install -y gcc gcc-c++<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="二、安装Nginx依赖"><a href="#二、安装Nginx依赖" class="headerlink" title="二、安装Nginx依赖"></a>二、安装Nginx依赖</h2><ul><li>pcre-devel、openssl-devel、zlib-devel<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">yum install -y pcre pcre-devel openssl openssl-devel zlib zlib-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="三、创建Nginx用户"><a href="#三、创建Nginx用户" class="headerlink" title="三、创建Nginx用户"></a>三、创建Nginx用户</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">useradd -s &#x2F;bin&#x2F;false -M nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="四、下载Nginx源码"><a href="#四、下载Nginx源码" class="headerlink" title="四、下载Nginx源码"></a>四、下载Nginx源码</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">wget http:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.12.0.tar.gztar -zxf nginx-1.12.0.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="五、Nginx编译安装"><a href="#五、Nginx编译安装" class="headerlink" title="五、Nginx编译安装"></a>五、Nginx编译安装</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">## 生成make文件.&#x2F;configure --user&#x3D;nginx --group&#x3D;nginx --prefix&#x3D;&#x2F;etc&#x2F;nginx-1.12.0 --with-http_v2_module --withhttp_ssl_module --with-http_sub_module --with-http_stub_status_module --withhttp_gzip_static_module --with-pcre## 编译并安装make &amp;&amp; make install## 添加软连接ln -s &#x2F;etc&#x2F;nginx-1.12.0&#x2F; &#x2F;etc&#x2F;nginx## 添加环境变量ln -s &#x2F;etc&#x2F;nginx&#x2F;sbin&#x2F;* &#x2F;usr&#x2F;local&#x2F;sbin&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、Nginx目录介绍"><a href="#六、Nginx目录介绍" class="headerlink" title="六、Nginx目录介绍"></a>六、Nginx目录介绍</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">├── conf #配置文件目录│ ├── fastcgi.conf│ ├── fastcgi.conf.default│ ├── fastcgi_params│ ├── fastcgi_params.default #fastcgi *配合php│ ├── koi-utf│ ├── koi-win│ ├── mime.types #mime 媒体类型│ ├── mime.types.default│ ├── nginx.conf #nginx主配置文件│ ├── nginx.conf.default│ ├── scgi_params│ ├── scgi_params.default│ ├── uwsgi_params│ ├── uwsgi_params.default│ └── win-utf├── html #默认站点目录│ ├── 50x.html│ └── index.html├── logs #访问日志、错误日志、pid文件目录│ ├── access.log #访问日志│ ├── error.log #错误日志│ └── nginx.pid #pid文件└── sbin #命令目录└── nginx #nginx命令文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="七、Nginx-配置文件详解"><a href="#七、Nginx-配置文件详解" class="headerlink" title="七、Nginx 配置文件详解"></a>七、Nginx 配置文件详解</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">#定义Nginx运行的用户和用户组user www www;#nginx进程数，建议设置为等于CPU总核心数。worker_processes 8;#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]error_log &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;error.log info;#进程pid文件pid &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;nginx.pid;#指定进程可以打开的最大描述符：数目#工作模式与连接数上限#这个指令是指当一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -n 的值保持一致。#现在在linux 2.6内核下开启文件打开数为65535，worker_rlimit_nofile就相应应该填写65535。#这是因为nginx调度时分配请求到进程并不是那么的均衡，所以假如填写10240，总并发量达到3-4万时就有进程可能超过10240了，这时会返回502错误。worker_rlimit_nofile 65535;events&#123;    #参考事件模型，use [ kqueue | rtsig | epoll | &#x2F;dev&#x2F;poll | select | poll ]; epoll模型    #是Linux 2.6以上版本内核中的高性能网络I&#x2F;O模型，linux建议epoll，如果跑在FreeBSD上面，就用kqueue模型。    #补充说明：    #与apache相类，nginx针对不同的操作系统，有不同的事件模型    #A）标准事件模型    #Select、poll属于标准事件模型，如果当前系统不存在更有效的方法，nginx会选择select或poll    #B）高效事件模型    #Kqueue：使用于FreeBSD 4.1+, OpenBSD 2.9+, NetBSD 2.0 和 MacOS X.使用双处理器的MacOS X系统使用kqueue可能会造成内核崩溃。    #Epoll：使用于Linux内核2.6版本及以后的系统。    #&#x2F;dev&#x2F;poll：使用于Solaris 7 11&#x2F;99+，HP&#x2F;UX 11.22+ (eventport)，IRIX 6.5.15+ 和 Tru64 UNIX 5.1A+。    #Eventport：使用于Solaris 10。 为了防止出现内核崩溃的问题， 有必要安装安全补丁。    use epoll;    #单个进程最大连接数（最大连接数&#x3D;连接数*进程数）    #根据硬件调整，和前面工作进程配合起来用，尽量大，但是别把cpu跑到100%就行。每个进程允许的最多连接数，理论上每台nginx服务器的最大连接数为。    worker_connections 65535;    #keepalive超时时间。    keepalive_timeout 60;    #客户端请求头部的缓冲区大小。这个可以根据你的系统分页大小来设置，一般一个请求头的大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。    #分页大小可以用命令getconf PAGESIZE 取得。    #[root@web001 ~]# getconf PAGESIZE    #4096    #但也有client_header_buffer_size超过4k的情况，但是client_header_buffer_size该值必须设置为“系统分页大小”的整倍数。    client_header_buffer_size 4k;    #这个将为打开文件指定缓存，默认是没有启用的，max指定缓存数量，建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存。    open_file_cache max&#x3D;65535 inactive&#x3D;60s;    #这个是指多长时间检查一次缓存的有效信息。    #语法:open_file_cache_valid time 默认值:open_file_cache_valid 60 使用字段:http, server,location 这个指令指定了何时需要检查open_file_cache中缓存项目的有效信息.    open_file_cache_valid 80s;    #open_file_cache指令中的inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个文件在inactive时间内一次没被使用，它将被移除。    #语法:open_file_cache_min_uses number 默认值:open_file_cache_min_uses 1 使用字段:http, server, location 这个指令指定了在open_file_cache指令无效的参数中一定的时间范围内可以使用的最小文件数,如果使用更大的值,文件描述符在cache中总是打开状态.    open_file_cache_min_uses 1;    #语法:open_file_cache_errors on | off 默认值:open_file_cache_errors off 使用字段:http, server,location 这个指令指定是否在搜索一个文件是记录cache错误.    open_file_cache_errors on;&#125;#设定http服务器，利用它的反向代理功能提供负载均衡支持http&#123;    #文件扩展名与文件类型映射表    include mime.types;    #默认文件类型    default_type application&#x2F;octet-stream;    #默认编码    #charset utf-8;    #服务器名字的hash表大小    #保存服务器名字的hash表是由指令server_names_hash_max_size 和server_names_hash_bucket_size所控制的。参数hash bucket size总是等于hash表的大小，并且是一路处理器缓存大小的倍数。在减少了在内存中的存取次数后，使在处理器中加速查找hash表键值成为可能。如果hash bucket size等于一路处理器缓存的大小，那么在查找键的时候，最坏的情况下在内存中查找的次数为2。第一次是确定存储单元的地址，第二次是在存储单元中查找键 值。因此，如果Nginx给出需要增大hash max size 或 hash bucket size的提示，那么首要的是增大前一个参数的大小.    server_names_hash_bucket_size 128;    #客户端请求头部的缓冲区大小。这个可以根据你的系统分页大小来设置，一般一个请求的头部大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。分页大小可以用命令getconf PAGESIZE取得。    client_header_buffer_size 32k;    #客户请求头缓冲大小。nginx默认会用client_header_buffer_size这个buffer来读取header值，如果header过大，它会使用large_client_header_buffers来读取。    large_client_header_buffers 4 64k;    #设定通过nginx上传文件的大小    client_max_body_size 8m;    #开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I&#x2F;O处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成off。    #sendfile指令指定 nginx 是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度，降低系统uptime。    sendfile on;    #开启目录列表访问，合适下载服务器，默认关闭。    autoindex on;    #此选项允许或禁止使用socke的TCP_CORK的选项，此选项仅在使用sendfile的时候使用    tcp_nopush on;    tcp_nodelay on;    #长连接超时时间，单位是秒    keepalive_timeout 120;    #FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。    fastcgi_connect_timeout 300;    fastcgi_send_timeout 300;    fastcgi_read_timeout 300;    fastcgi_buffer_size 64k;    fastcgi_buffers 4 64k;    fastcgi_busy_buffers_size 128k;    fastcgi_temp_file_write_size 128k;    #gzip模块设置    gzip on; #开启gzip压缩输出    gzip_min_length 1k; #最小压缩文件大小    gzip_buffers 4 16k; #压缩缓冲区    gzip_http_version 1.0; #压缩版本（默认1.1，前端如果是squid2.5请使用1.0）    gzip_comp_level 2; #压缩等级    gzip_types text&#x2F;plain application&#x2F;x-javascript text&#x2F;css application&#x2F;xml; #压缩类型，默认就已经包含textml，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。    gzip_vary on;    #开启限制IP连接数的时候需要使用    #limit_zone crawler $binary_remote_addr 10m;    #负载均衡配置    upstream carlosxiao.cc &#123;        #upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。        server 192.168.13.43:8080 weight&#x3D;3;        server 192.168.13.44:8080 weight&#x3D;2;        #nginx的upstream目前支持4种方式的分配        #1、轮询（默认）        #每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。        #2、weight        #指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。        #例如：        #upstream bakend &#123;        # server 192.168.0.14 weight&#x3D;10;        # server 192.168.0.15 weight&#x3D;10;        #&#125;        #2、ip_hash        #每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。        #例如：        #upstream bakend &#123;        # ip_hash;        # server 192.168.0.14:88;        # server 192.168.0.15:80;        #&#125;        #3、fair（第三方）        #按后端服务器的响应时间来分配请求，响应时间短的优先分配。        #upstream backend &#123;        # server server1;        # server server2;        # fair;        #&#125;        #4、url_hash（第三方）        #按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。        #例：在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法        #upstream backend &#123;        # server squid1:3128;        # server squid2:3128;        # hash $request_uri;        # hash_method crc32;        #&#125;        #tips:        #upstream bakend&#123;#定义负载均衡设备的Ip及设备状态&#125;&#123;        # ip_hash;        # server 127.0.0.1:9090 down;        # server 127.0.0.1:8080 weight&#x3D;2;        # server 127.0.0.1:6060;        # server 127.0.0.1:7070 backup;        #&#125;        #在需要使用负载均衡的server中增加 proxy_pass http:&#x2F;&#x2F;bakend&#x2F;;        #每个设备的状态设置为:        #1.down表示单前的server暂时不参与负载        #2.weight为weight越大，负载的权重就越大。        #3.max_fails：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream模块定义的错误        #4.fail_timeout:max_fails次失败后，暂停的时间。        #5.backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。        #nginx支持同时设置多组的负载均衡，用来给不用的server来使用。        #client_body_in_file_only设置为On 可以讲client post过来的数据记录到文件中用来做debug        #client_body_temp_path设置记录文件的目录 可以设置最多3层目录        #location对URL进行匹配.可以进行重定向或者进行新的代理 负载均衡    &#125;    #虚拟主机的配置    server    &#123;        #监听端口        listen 80;        #域名可以有多个，用空格隔开        server_name www.carlosxiao.cc carlosxiao.cc;        index index.html index.htm index.php;        root &#x2F;data&#x2F;www;        #对******进行负载均衡        location ~ .*.(php|php5)?$        &#123;            fastcgi_pass 127.0.0.1:9000;            fastcgi_index index.php;            include fastcgi.conf;        &#125;        #图片缓存时间设置        location ~ .*.(gif|jpg|jpeg|png|bmp|swf)$        &#123;            expires 10d;        &#125;        #JS和CSS缓存时间设置        location ~ .*.(js|css)?$        &#123;            expires 1h;        &#125;        #日志格式设定        #$remote_addr与$http_x_forwarded_for用以记录客户端的ip地址；        #$remote_user：用来记录客户端用户名称；        #$time_local： 用来记录访问时间与时区；        #$request： 用来记录请求的url与http协议；        #$status： 用来记录请求状态；成功是200，        #$body_bytes_sent ：记录发送给客户端文件主体内容大小；        #$http_referer：用来记录从那个页面链接访问过来的；        #$http_user_agent：记录客户浏览器的相关信息；        #通常web服务器放在反向代理的后面，这样就不能获取到客户的IP地址了，通过$remote_add拿到的IP地址是反向代理服务器的iP地址。反向代理服务器在转发请求的http头信息中，可以增加x_forwarded_for信息，用以记录原有客户端的IP地址和原来客户端的请求的服务器地址。        log_format access &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;        &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;        &#39;&quot;$http_user_agent&quot; $http_x_forwarded_for&#39;;        #定义本虚拟主机的访问日志        access_log &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;host.access.log main;        access_log &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;host.access.404.log log404;        #对 &quot;&#x2F;&quot; 启用反向代理        location &#x2F; &#123;            proxy_pass http:&#x2F;&#x2F;127.0.0.1:88;            proxy_redirect off;            proxy_set_header X-Real-IP $remote_addr;            #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            #以下是一些反向代理的配置，可选。            proxy_set_header Host $host;            #允许客户端请求的最大单文件字节数            client_max_body_size 10m;            #缓冲区代理缓冲用户端请求的最大字节数，            #如果把它设置为比较大的数值，例如256k，那么，无论使用firefox还是IE浏览器，来提交任意小于256k的图片，都很正常。如果注释该指令，使用默认的client_body_buffer_size设置，也就是操作系统页面大小的两倍，8k或者16k，问题就出现了。            #无论使用firefox4.0还是IE8.0，提交一个比较大，200k左右的图片，都返回500 Internal Server Error错误            client_body_buffer_size 128k;            #表示使nginx阻止HTTP应答代码为400或者更高的应答。            proxy_intercept_errors on;            #后端服务器连接的超时时间_发起握手等候响应超时时间            #nginx跟后端服务器连接超时时间(代理连接超时)            proxy_connect_timeout 90;            #后端服务器数据回传时间(代理发送超时)            #后端服务器数据回传时间_就是在规定时间之内后端服务器必须传完所有的数据            proxy_send_timeout 90;            #连接成功后，后端服务器响应时间(代理接收超时)            #连接成功后_等候后端服务器响应时间_其实已经进入后端的排队之中等候处理（也可以说是后端服务器处理请求的时间）            proxy_read_timeout 90;            #设置代理服务器（nginx）保存用户头信息的缓冲区大小            #设置从被代理服务器读取的第一部分应答的缓冲区大小，通常情况下这部分应答中包含一个小的应答头，默认情况下这个值的大小为指令proxy_buffers中指定的一个缓冲区的大小，不过可以将其设置为更小            proxy_buffer_size 4k;            #proxy_buffers缓冲区，网页平均在32k以下的设置            #设置用于读取应答（来自被代理服务器）的缓冲区数目和大小，默认情况也为分页大小，根据操作系统的不同可能是4k或者8k            proxy_buffers 4 32k;            #高负荷下缓冲大小（proxy_buffers*2）            proxy_busy_buffers_size 64k;            #设置在写入proxy_temp_path时数据的大小，预防一个工作进程在传递文件时阻塞太长            #设定缓存文件夹大小，大于这个值，将从upstream服务器传            proxy_temp_file_write_size 64k;        &#125;        #设定查看Nginx状态的地址        location &#x2F;NginxStatus &#123;            stub_status on;            access_log on;            auth_basic &quot;NginxStatus&quot;;            auth_basic_user_file confpasswd;            #htpasswd文件的内容可以用apache提供的htpasswd工具来产生。        &#125;        #本地动静分离反向代理配置        #所有jsp的页面均交由tomcat或resin处理        location ~ .(jsp|jspx|do)?$ &#123;            proxy_set_header Host $host;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            proxy_pass http:&#x2F;&#x2F;127.0.0.1:8080;        &#125;        #所有静态文件由nginx直接读取不经过tomcat或resin        location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|        pdf|xls|mp3|wma)$        &#123;            expires 15d;        &#125;        location ~ .*.(js|css)?        &#123;            expires 1h;        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="location匹配模式以及顺序"><a href="#location匹配模式以及顺序" class="headerlink" title="location匹配模式以及顺序"></a>location匹配模式以及顺序</h3><ul><li>location = /uri  =开头表示精确匹配，只有完全匹配上才能生效</li><li>location ^~ /uri  ^~ 开头对URL路径进行前缀匹配，并且在正则之前</li><li>location ~ pattern  ~开头表示区分大小写的正则匹配</li><li>location ~* pattern  ~*开头表示不区分大小写的正则匹配</li><li>location /uri  不带任何修饰符，也表示前缀匹配，但是在正则匹配之后</li><li>location /  通用匹配，任何未匹配到其它location的请求都会匹配到，相当于switch中的default</li></ul><h2 id="八、Nginx常用命令"><a href="#八、Nginx常用命令" class="headerlink" title="八、Nginx常用命令"></a>八、Nginx常用命令</h2><h3 id="检查配置文件"><a href="#检查配置文件" class="headerlink" title="检查配置文件"></a>检查配置文件</h3><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">nginx -t<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="指定其他配置文件启动nginx"><a href="#指定其他配置文件启动nginx" class="headerlink" title="指定其他配置文件启动nginx"></a>指定其他配置文件启动nginx</h3><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">nginx -c file<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h3><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="停止nginx"><a href="#停止nginx" class="headerlink" title="停止nginx"></a>停止nginx</h3><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">## 快速停止nginxnginx -s stop## 平滑停止nginxnginx -s quit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="重启nginx"><a href="#重启nginx" class="headerlink" title="重启nginx"></a>重启nginx</h3><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">## 平滑重载所有配置nginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="九、配置示例"><a href="#九、配置示例" class="headerlink" title="九、配置示例"></a>九、配置示例</h2><h3 id="web服务器"><a href="#web服务器" class="headerlink" title="web服务器"></a>web服务器</h3><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">#user nobody;worker_processes auto;#worker_cpu_affinity auto;worker_rlimit_nofile 655350;#pid logs&#x2F;nginx.pid;error_log &#x2F;data&#x2F;logs&#x2F;nginx&#x2F;error.log error;events &#123;    use epoll;    worker_connections 655350;&#125;http &#123;    include mime.types;    default_type application&#x2F;octet-stream;    charset utf-8;    log_format main &#39;$remote_addr $server_addr $remote_user [$time_local] $host &#39;                    &#39;&quot;$request&quot; $status $body_bytes_sent $request_time $upstream_response_time &#39;                    &#39;&quot;$http_referer&quot; &quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;                    access_log &#x2F;data&#x2F;logs&#x2F;nginx&#x2F;access.log main;        sendfile on;    keepalive_timeout 90000;    server_names_hash_max_size 1024;    server_names_hash_bucket_size 512;    client_header_buffer_size 16k;    large_client_header_buffers 4 64k;    client_header_timeout 300m;    client_body_timeout 300m;    send_timeout 300m;    tcp_nopush on;    tcp_nodelay on;    client_max_body_size 100M;    client_body_buffer_size 50m;    proxy_connect_timeout 5;    proxy_send_timeout 15;    proxy_read_timeout 15;    proxy_buffer_size 256k;    proxy_buffers 8 256k;    proxy_busy_buffers_size 256k;    proxy_temp_file_write_size 256k;    proxy_intercept_errors on;    proxy_headers_hash_max_size 512;    proxy_headers_hash_bucket_size 256;    variables_hash_max_size 512;    variables_hash_bucket_size 128;    gzip on;    gzip_min_length 1100;    gzip_buffers 4 8k;    gzip_comp_level 3;    gzip_http_version 1.0;    gzip_types text&#x2F;plain application&#x2F;x-javascript application&#x2F;json application&#x2F;javascript    text&#x2F;css application&#x2F;xml text&#x2F;javascript application&#x2F;x-httpd-php image&#x2F;jpeg image&#x2F;gif image&#x2F;png;    output_buffers 1 32k;    postpone_output 1460;    gzip_vary on;    map_hash_max_size 102400;    map_hash_bucket_size 256;    fastcgi_intercept_errors on;    server &#123;        listen 80;        server_name carlosxiao.cc;        location &#x2F; &#123;            root &#x2F;data&#x2F;www;            index index.html index.htm;        &#125;        access_log &#x2F;data&#x2F;logs&#x2F;nginx&#x2F;carlosxiao.log;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">#user nobody;worker_processes auto;#worker_cpu_affinity auto;worker_rlimit_nofile 655350;#pid logs&#x2F;nginx.pid;error_log &#x2F;data&#x2F;logs&#x2F;nginx&#x2F;error.log error;events &#123;    use epoll;    worker_connections 655350;&#125;http &#123;    include mime.types;    default_type application&#x2F;octet-stream;    charset utf-8;    log_format main &#39;$remote_addr $server_addr $remote_user [$time_local] $host &#39;                    &#39;&quot;$request&quot; $status $body_bytes_sent $request_time $upstream_response_time &#39;                    &#39;&quot;$http_referer&quot; &quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;                    access_log &#x2F;data&#x2F;logs&#x2F;nginx&#x2F;access.log main;        sendfile on;    keepalive_timeout 90000;    server_names_hash_max_size 1024;    server_names_hash_bucket_size 512;    client_header_buffer_size 16k;    large_client_header_buffers 4 64k;    client_header_timeout 300m;    client_body_timeout 300m;    send_timeout 300m;    tcp_nopush on;    tcp_nodelay on;    client_max_body_size 100M;    client_body_buffer_size 50m;    proxy_connect_timeout 5;    proxy_send_timeout 15;    proxy_read_timeout 15;    proxy_buffer_size 256k;    proxy_buffers 8 256k;    proxy_busy_buffers_size 256k;    proxy_temp_file_write_size 256k;    proxy_intercept_errors on;    proxy_headers_hash_max_size 512;    proxy_headers_hash_bucket_size 256;    variables_hash_max_size 512;    variables_hash_bucket_size 128;    gzip on;    gzip_min_length 1100;    gzip_buffers 4 8k;    gzip_comp_level 3;    gzip_http_version 1.0;    gzip_types text&#x2F;plain application&#x2F;x-javascript application&#x2F;json application&#x2F;javascript    text&#x2F;css application&#x2F;xml text&#x2F;javascript application&#x2F;x-httpd-php image&#x2F;jpeg image&#x2F;gif image&#x2F;png;    output_buffers 1 32k;    postpone_output 1460;    gzip_vary on;    map_hash_max_size 102400;    map_hash_bucket_size 256;    fastcgi_intercept_errors on;    upstream carlosxiao.cc&#123;        server 192.168.13.43:8080;        server 192.168.13.44:8080;        check interval&#x3D;3000 rise&#x3D;2 fall&#x3D;3 timeout&#x3D;3000 type&#x3D;http;    &#125;    server &#123;        listen 80;        server_name carlosxiao.cc;        location &#x2F; &#123;            proxy_pass http:&#x2F;&#x2F;carlosxiao.cc;            proxy_set_header Host $host;            proxy_redirect off;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            proxy_connect_timeout 60;            proxy_read_timeout 600;            proxy_send_timeout 600;        &#125;        access_log &#x2F;data&#x2F;logs&#x2F;nginx&#x2F;carlosxiao.log;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h3><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">#user nobody;worker_processes auto;#worker_cpu_affinity auto;worker_rlimit_nofile 655350;#pid logs&#x2F;nginx.pid;error_log &#x2F;data&#x2F;logs&#x2F;nginx&#x2F;error.log error;events &#123;    use epoll;    worker_connections 655350;&#125;http &#123;    include mime.types;    default_type application&#x2F;octet-stream;    charset utf-8;    log_format main &#39;$remote_addr $server_addr $remote_user [$time_local] $host &#39;                    &#39;&quot;$request&quot; $status $body_bytes_sent $request_time $upstream_response_time &#39;                    &#39;&quot;$http_referer&quot; &quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;                    access_log &#x2F;data&#x2F;logs&#x2F;nginx&#x2F;access.log main;    sendfile on;    keepalive_timeout 90000;    server_names_hash_max_size 1024;    server_names_hash_bucket_size 512;    client_header_buffer_size 16k;    large_client_header_buffers 4 64k;    client_header_timeout 300m;    client_body_timeout 300m;    send_timeout 300m;    tcp_nopush on;    tcp_nodelay on;    client_max_body_size 100M;    client_body_buffer_size 50m;    proxy_connect_timeout 5;    proxy_send_timeout 15;    proxy_read_timeout 15;    proxy_buffer_size 256k;    proxy_buffers 8 256k;    proxy_busy_buffers_size 256k;    proxy_temp_file_write_size 256k;    proxy_intercept_errors on;    proxy_headers_hash_max_size 512;    proxy_headers_hash_bucket_size 256;    variables_hash_max_size 512;    variables_hash_bucket_size 128;    gzip on;    gzip_min_length 1100;    gzip_buffers 4 8k;    gzip_comp_level 3;    gzip_http_version 1.0;    gzip_types text&#x2F;plain application&#x2F;x-javascript application&#x2F;json application&#x2F;javascript    text&#x2F;css application&#x2F;xml text&#x2F;javascript application&#x2F;x-httpd-php image&#x2F;jpeg image&#x2F;gif image&#x2F;png;    output_buffers 1 32k;    postpone_output 1460;    gzip_vary on;    map_hash_max_size 102400;    map_hash_bucket_size 256;    fastcgi_intercept_errors on;    upstream carlosxiao.cc&#123;        server 127.0.0.1:10179;    &#125;    server &#123;        listen 80;        server_name carlosxiao.cc;        location &#x2F;api &#123;            proxy_pass http:&#x2F;&#x2F;carlosxiao.cc;            proxy_set_header Host $host;            proxy_redirect off;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            proxy_connect_timeout 60;            proxy_read_timeout 600;            proxy_send_timeout 600;        &#125;        location ~ .(jsp|jspx|do)?$ &#123;            proxy_set_header Host $host;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            proxy_pass http:&#x2F;&#x2F;carlosxiao.cc;        &#125;        #所有静态文件由nginx直接读取不经过tomcat或resin        location ~ .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|        pdf|xls|mp3|wma)$        &#123;            expires 15d;        &#125;                location ~ .*.(js|css)?$        &#123;            expires 1h;        &#125;        access_log &#x2F;data&#x2F;logs&#x2F;nginx&#x2F;carlosxiao.log;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css画梯形</title>
      <link href="/2021/11/10/css%E7%94%BB%E6%A2%AF%E5%BD%A2/"/>
      <url>/2021/11/10/css%E7%94%BB%E6%A2%AF%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="使用html-css画出梯形"><a href="#使用html-css画出梯形" class="headerlink" title="使用html+css画出梯形"></a>使用html+css画出梯形</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">.box</span> <span class="token punctuation">&#123;</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.a1,.a2</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> #ccff66<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.a3,.a4</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> #ccff66<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.a1</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">perspective</span><span class="token punctuation">(</span>14px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>25deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.a2</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">perspective</span><span class="token punctuation">(</span>14px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-25deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 65px<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.a3</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">perspective</span><span class="token punctuation">(</span>14px<span class="token punctuation">)</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>-25deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> -15px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.a4</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">perspective</span><span class="token punctuation">(</span>14px<span class="token punctuation">)</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>25deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 50px    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a>效果如下</h2><style type="text/css">    .box {        position: relative;        margin: 50px;        height: 100px;    }    .a1,.a2 {        width: 15px;        height: 50px;        position: absolute;        background: #ccff66;        display: inline-block;    }    .a3,.a4 {        width: 50px;        height: 15px;        position: absolute;        background: #ccff66;        display: inline-block;    }    .a1 {        transform: perspective(14px) rotateY(25deg);        left: 0;        top: 0;    }    .a2 {        transform: perspective(14px) rotateY(-25deg);        left: 65px;        top: 0;    }    .a3 {        transform: perspective(14px) rotateX(-25deg);        left: 15px;        top: -15px;    }    .a4 {        transform: perspective(14px) rotateX(25deg);        left: 15px;        top: 50px    }</style><div class="box">    <a class="a1"></a>    <a class="a2"></a>    <a class="a3"></a>    <a class="a4"></a></div>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue自定义组件的v-model例子</title>
      <link href="/2021/11/08/Vue%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E7%9A%84v-model%E4%BE%8B%E5%AD%90/"/>
      <url>/2021/11/08/Vue%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E7%9A%84v-model%E4%BE%8B%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<ul><li>一个组件上的 v-model 默认会利用名为 value 的 prop 和名为 input 的事件，但是像单选框、复选框或者其他自定义组件等类型的输入控件可能会将 value attribute 用于不同的目的。model 选项可以用来避免这样的冲突</li></ul><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><h3 id="父组件"><a href="#父组件" class="headerlink" title="父组件"></a>父组件</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>父元素的formData<span class="token punctuation">.</span>msg<span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> formData<span class="token punctuation">.</span>msg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"test"</span><span class="token operator">></span>父元素的formData<span class="token punctuation">.</span>msg<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>son v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"formData.msg"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>son<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> son <span class="token keyword">from</span> <span class="token string">"./son.vue"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  components<span class="token operator">:</span> <span class="token punctuation">&#123;</span> son <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      formData<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        msg<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>formData<span class="token punctuation">.</span>msg<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="子组件"><a href="#子组件" class="headerlink" title="子组件"></a>子组件</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>hr <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>这里是子元素<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>子元素的msg<span class="token operator">--</span><span class="token operator">-</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> msg <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"onClick"</span><span class="token operator">></span>子元素的msg<span class="token operator">-</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">"son"</span><span class="token punctuation">,</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    msg<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Number<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      sonMsg<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  model<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    prop<span class="token operator">:</span> <span class="token string">"msg"</span><span class="token punctuation">,</span>    event<span class="token operator">:</span> <span class="token string">"change"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 注意不能直接修改父元素的props</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>sonMsg<span class="token operator">--</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sonMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> v-model </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异步函数</title>
      <link href="/2021/10/18/%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0/"/>
      <url>/2021/10/18/%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="async"><a href="#async" class="headerlink" title="async"></a>async</h2><ul><li>async 变体 (async(异步) 函数总是返回 Promises )<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 异步函数声明</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">// 异步函数表达式</span><span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 异步函数定义</span><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token keyword">async</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token comment">// 异步箭头函数 </span><span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// async(异步) 函数的 Promise 完成状态</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asyncFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token number">123</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">asyncFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 123</span><span class="token comment">// async(异步) 函数的 Promise 拒绝状态</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asyncFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Problem!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">asyncFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: Problem!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="async-await"><a href="#async-await" class="headerlink" title="async/await"></a>async/await</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">testAwait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"testAwait"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">helloAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">await</span> <span class="token function">testAwait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"helloAsync"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//await后面可以是Promise对象么 也可以是字符串，布尔值，数值以及普通函数</span><span class="token keyword">function</span> <span class="token function">testAwait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"testAwait"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">helloAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">await</span> <span class="token function">testAwait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"helloAsync"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// await针对所跟的表达式不同，有两种处理方式：</span><span class="token comment">// 1、对于Promise对象，await会阻塞主函数的执行，等待 Promise 对象 resolve，然后得到 resolve 的值，作为 await 表达式的运算结果，然后继续执行主函数接下来的代码。</span><span class="token comment">// 2、对于非Promise对象，await等待函数或者直接量的返回，而不是等待其执行结果。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="async-await并行-串行触发"><a href="#async-await并行-串行触发" class="headerlink" title="async/await并行/串行触发"></a>async/await并行/串行触发</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">testAwait1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"testAwait1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">testAwait2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"testAwait2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">"testTime"</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> pramiseFn1 <span class="token operator">=</span> <span class="token function">testAwait1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> pramiseFn2 <span class="token operator">=</span> <span class="token function">testAwait2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> pramiseFn1<span class="token punctuation">;</span>  <span class="token keyword">let</span> res2 <span class="token operator">=</span> <span class="token keyword">await</span> pramiseFn2<span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"两个promise并行执行，done"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">"testTime"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">"test1Time"</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">testAwait1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> res2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">testAwait2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"两个promise串行执行，done"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">"test1Time"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="async-await在for循环中使用"><a href="#async-await在for循环中使用" class="headerlink" title="async/await在for循环中使用"></a>async/await在for循环中使用</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">testAwait</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"testAwait"</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">resolve</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">'start'</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> List <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>  <span class="token keyword">let</span> promises <span class="token operator">=</span> List<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token operator">=></span><span class="token function">testAwait</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> promise <span class="token keyword">of</span> promises<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> promise    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"promise结果："</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"for循环promise，done"</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">'start'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="async-await捕获异常"><a href="#async-await捕获异常" class="headerlink" title="async/await捕获异常"></a>async/await捕获异常</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">testPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token function">testAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">await</span> <span class="token function">testPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="async-await与Generator"><a href="#async-await与Generator" class="headerlink" title="async/await与Generator"></a>async/await与Generator</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// Generator函数，可以多次返回</span><span class="token comment">// yield暂停执行，next恢复执行</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">yield</span> <span class="token string">'11111111'</span><span class="token punctuation">;</span>  <span class="token keyword">yield</span> <span class="token string">'22222222'</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token string">'33333333'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> test <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>test<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123;value: '11111111', done: false&#125;</span>test<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123;value: '22222222', done: false&#125;</span>test<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123;value: '33333333', done: true&#125;</span>test<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123;value: undefined, done: true&#125;</span><span class="token comment">// async是Generator函数的语法糖</span><span class="token comment">// async函数就是将Generator函数的星号(*)替换成async，将yield替换成await</span><span class="token comment">// async函数自带执行器，而Generator函数需要每次都调用next()来执行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">resolve</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> value<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> async </tag>
            
            <tag> await </tag>
            
            <tag> promise </tag>
            
            <tag> Generator </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简易的发布订阅模式</title>
      <link href="/2021/10/09/%E7%AE%80%E6%98%93%E7%9A%84%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F/"/>
      <url>/2021/10/09/%E7%AE%80%E6%98%93%E7%9A%84%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<ul><li>购买者订阅是否有库存商品<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> storeObj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">// 定义发布者</span>storeObj<span class="token punctuation">.</span>list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 缓存列表，存放订阅的回调函数</span><span class="token comment">// 添加订阅者</span>storeObj<span class="token punctuation">.</span><span class="token function-variable function">listen</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 此时this指向storeObj</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 发布消息</span>storeObj<span class="token punctuation">.</span><span class="token function-variable function">trigger</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// arguments为类数组</span>    <span class="token comment">// shift() 方法用于把数组的第一个元素从其中删除,并返回第一个元素的值</span>    <span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>    <span class="token keyword">let</span> fns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">[</span>key<span class="token punctuation">]</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fns <span class="token operator">||</span> fns<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> fn<span class="token punctuation">;</span> fn<span class="token operator">=</span> fns<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// fn.apply(this, arguments)</span>        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 订阅</span>storeObj<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">size</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">您订阅的尺码：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>size<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">，有库存了</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>storeObj<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">'小张'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>size</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">您订阅的尺码：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>size<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">，有库存了</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 取消订阅</span>storeObj<span class="token punctuation">.</span><span class="token function-variable function">remove</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span>fn</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> fns <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fns<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        fn <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>fns<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> fns<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> _fn <span class="token operator">=</span> fns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>_fn <span class="token operator">==</span> fn<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                fns<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>storeObj<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"小明"</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">)</span>storeObj<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"小张"</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>封装<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> Event <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> list <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        listen<span class="token punctuation">,</span>        trigger<span class="token punctuation">,</span>        remove<span class="token punctuation">;</span>    <span class="token function-variable function">listen</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>list<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            list<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        list<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function-variable function">trigger</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>        <span class="token keyword">let</span> fns <span class="token operator">=</span> list<span class="token punctuation">[</span>key<span class="token punctuation">]</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fns <span class="token operator">||</span> fns<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> fn<span class="token punctuation">;</span> fn<span class="token operator">=</span> fns<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// fn.apply(this, arguments)</span>            <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function-variable function">remove</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span>fn</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> fns <span class="token operator">=</span> list<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fns<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            fn <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>fns<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> fns<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> _fn <span class="token operator">=</span> fns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>_fn <span class="token operator">==</span> fn<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    fns<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 发布订阅 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue项目中应用TypeScript</title>
      <link href="/2021/10/08/Vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%BA%94%E7%94%A8TypeScript/"/>
      <url>/2021/10/08/Vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%BA%94%E7%94%A8TypeScript/</url>
      
        <content type="html"><![CDATA[<h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><ul><li>在VUE项目中应用typescript，我们需要引入一个库<code>vue-property-decorator</code>，</li><li><code>vue-property-decorator</code>是基于<code>vue-class-component</code>库而来，这个库vue官方推出的一个支持使用class方式来开发vue单文件组件的库</li><li>主要的功能如下：<ul><li>methods 可以直接声明为类的成员方法</li><li>计算属性可以被声明为类的属性访问器</li><li>初始化的 data 可以被声明为类属性</li><li>data、render 以及所有的 Vue 生命周期钩子可以直接作为类的成员方法</li><li>所有其他属性，需要放在装饰器中</li></ul></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li><code>vue-property-decorator</code> 主要提供了以下装饰器<ul><li>@Prop</li><li>@PropSync</li><li>@Model</li><li>@Watch</li><li>@Provide</li><li>@Inject</li><li>@ProvideReactive</li><li>@InjectReactive</li><li>@Emit</li><li>@Ref</li><li>@Component (由 <code>vue-class-component</code> 提供)</li><li>Mixins (由 <code>vue-class-component</code> 提供)<h3 id="Component"><a href="#Component" class="headerlink" title="@Component"></a>@Component</h3></li></ul></li><li>Component装饰器它注明了此类为一个Vue组件，因此即使没有设置选项也不能省略</li><li>如果需要定义比如 name、components、filters、directives以及自定义属性，就可以在Component装饰器中定义，如下：<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>Component<span class="token punctuation">,</span>Vue<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-property-decorator'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>componentA<span class="token punctuation">,</span>componentB<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/components'</span><span class="token punctuation">;</span> @<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    components<span class="token operator">:</span><span class="token punctuation">&#123;</span>        componentA<span class="token punctuation">,</span>        componentB<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    directives<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        focus<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 指令的定义</span>            <span class="token function-variable function">inserted</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                el<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">YourCompoent</span> <span class="token keyword">extends</span> <span class="token class-name">Vue</span><span class="token punctuation">&#123;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="computed、data、methods"><a href="#computed、data、methods" class="headerlink" title="computed、data、methods"></a>computed、data、methods</h3></li><li>这里取消了组件的data和methods属性，以往data返回对象中的属性、methods中的方法需要直接定义在Class中，当做类的属性和方法<pre class="line-numbers language-js" data-language="js"><code class="language-js">@Component<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">HelloDecorator</span> <span class="token keyword">extends</span> <span class="token class-name">Vue</span> <span class="token punctuation">&#123;</span>    count<span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">123</span> <span class="token comment">// 类属性相当于以前的 data</span>    <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> number <span class="token punctuation">&#123;</span> <span class="token comment">// 类方法就是以前的方法</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 获取计算属性</span>    <span class="token keyword">get</span> <span class="token function">total</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> number <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 设置计算属性</span>    <span class="token keyword">set</span> <span class="token function">total</span><span class="token punctuation">(</span>param<span class="token operator">:</span>number<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> param    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="props"><a href="#props" class="headerlink" title="@props"></a>@props</h3></li><li>组件接收属性的装饰器，如下使用：<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>Component<span class="token punctuation">,</span>Vue<span class="token punctuation">,</span>Prop<span class="token punctuation">&#125;</span> from vue<span class="token operator">-</span>property<span class="token operator">-</span>decorator<span class="token punctuation">;</span>@Component<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">YourComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Vue</span> <span class="token punctuation">&#123;</span>    @<span class="token function">Prop</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span>    propA<span class="token operator">:</span>string<span class="token punctuation">;</span>        @<span class="token function">Prop</span><span class="token punctuation">(</span><span class="token punctuation">[</span>String<span class="token punctuation">,</span>Number<span class="token punctuation">]</span><span class="token punctuation">)</span>    propB<span class="token operator">:</span>string<span class="token operator">|</span>number<span class="token punctuation">;</span>        @<span class="token function">Prop</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>     type<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token comment">// type: [String , Number]</span>     <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">'default value'</span><span class="token punctuation">,</span> <span class="token comment">// 一般为String或Number</span>      <span class="token comment">//如果是对象或数组的话。默认值从一个工厂函数中返回</span>      <span class="token comment">// defatult: () => &#123;</span>      <span class="token comment">//     return ['a','b']</span>      <span class="token comment">// &#125;</span>     required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>     <span class="token function-variable function">validator</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span>          <span class="token string">'InProcess'</span><span class="token punctuation">,</span>          <span class="token string">'Settled'</span>        <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span>     <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    propC<span class="token operator">:</span>string<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="watch"><a href="#watch" class="headerlink" title="@watch"></a>@watch</h3></li><li>实际就是Vue中的监听器，如下：<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Vue<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> Watch <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-property-decorator'</span>@Component<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">YourComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Vue</span> <span class="token punctuation">&#123;</span>  @<span class="token function">Watch</span><span class="token punctuation">(</span><span class="token string">'child'</span><span class="token punctuation">)</span>  <span class="token function">onChildChanged</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token operator">:</span> string<span class="token punctuation">,</span> oldVal<span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  @<span class="token function">Watch</span><span class="token punctuation">(</span><span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> immediate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> deep<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token function">onPersonChanged1</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token operator">:</span> Person<span class="token punctuation">,</span> oldVal<span class="token operator">:</span> Person</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  @<span class="token function">Watch</span><span class="token punctuation">(</span><span class="token string">'person'</span><span class="token punctuation">)</span>  <span class="token function">onPersonChanged2</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token operator">:</span> Person<span class="token punctuation">,</span> oldVal<span class="token operator">:</span> Person</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="emit"><a href="#emit" class="headerlink" title="@emit"></a>@emit</h3></li><li>vue-property-decorator 提供的 @Emit 装饰器就是代替Vue中的事件的触发$emit，如下：<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>Vue<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> Emit<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue-property-decorator'</span><span class="token punctuation">;</span>    @<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Some</span> <span class="token keyword">extends</span> <span class="token class-name">Vue</span><span class="token punctuation">&#123;</span>        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">'emit-todo'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emitTodo</span><span class="token punctuation">(</span><span class="token string">'world'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        @<span class="token function">Emit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token function">emitTodo</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hello'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js中的this</title>
      <link href="/2021/10/07/js%E4%B8%AD%E7%9A%84this/"/>
      <url>/2021/10/07/js%E4%B8%AD%E7%9A%84this/</url>
      
        <content type="html"><![CDATA[<h1 id="如何区别JavaScript中的this指向"><a href="#如何区别JavaScript中的this指向" class="headerlink" title="如何区别JavaScript中的this指向"></a>如何区别JavaScript中的this指向</h1><h2 id="类型一：在函数中直接调用的"><a href="#类型一：在函数中直接调用的" class="headerlink" title="类型一：在函数中直接调用的"></a>类型一：在函数中直接调用的</h2><ul><li>直接调用的函数this指向window<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">greet</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">greet</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello</span><span class="token function">greet</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="类型二：函数作为对象的方法被调用的"><a href="#类型二：函数作为对象的方法被调用的" class="headerlink" title="类型二：函数作为对象的方法被调用的"></a>类型二：函数作为对象的方法被调用的</h2></li><li>谁调用函数，函数的this就指向谁<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span>    <span class="token function-variable function">sayHello</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">笑着向你说：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>text<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>person<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 张三笑着向你说：Hello</span>person<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> <span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 张三笑着向你说：Hello</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一道面试题"><a href="#一道面试题" class="headerlink" title="一道面试题"></a>一道面试题</h2></li><li>打印结果是什么？<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token number">222</span><span class="token punctuation">;</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token number">111</span><span class="token punctuation">,</span>    <span class="token function-variable function">say</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> fun <span class="token operator">=</span> a<span class="token punctuation">.</span>say<span class="token punctuation">;</span><span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>a<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token number">333</span><span class="token punctuation">,</span>    <span class="token function-variable function">say</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>b<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>say<span class="token punctuation">)</span><span class="token punctuation">;</span>b<span class="token punctuation">.</span>say <span class="token operator">=</span> a<span class="token punctuation">.</span>say<span class="token punctuation">;</span>b<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>打印结果<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 不要使用let</span><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token number">222</span><span class="token punctuation">;</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token number">111</span><span class="token punctuation">,</span>    <span class="token function-variable function">say</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> fun <span class="token operator">=</span> a<span class="token punctuation">.</span>say<span class="token punctuation">;</span><span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 222  -> fun.call(window)</span>a<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 111 a.say.call(a)</span><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token number">333</span><span class="token punctuation">,</span>    <span class="token function-variable function">say</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>b<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>say<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 222  -> fn.call(window)    此处传参a.say给fn()并执行，等价于  (a.say)()  也就是fn.call(window)</span>b<span class="token punctuation">.</span>say <span class="token operator">=</span> a<span class="token punctuation">.</span>say<span class="token punctuation">;</span>b<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 333  -> b.say.call(b)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="箭头函数中的this"><a href="#箭头函数中的this" class="headerlink" title="箭头函数中的this"></a>箭头函数中的this</h2><ul><li>箭头函数内部没有绑定this机制，即箭头函数没有this，导致箭头函数的this指向外层代码块的this<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    x<span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>    <span class="token function-variable function">say</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>obj<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 11    -> this指向外层的window</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    x<span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>    <span class="token function-variable function">say</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">33</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>obj<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 22    -> this指向外层的obj</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> this </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tsconfig.json配置项详解</title>
      <link href="/2021/10/06/tsconfig-json%E9%85%8D%E7%BD%AE%E9%A1%B9%E8%AF%A6%E8%A7%A3/"/>
      <url>/2021/10/06/tsconfig-json%E9%85%8D%E7%BD%AE%E9%A1%B9%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>  <span class="token string">"compilerOptions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"allowUnreachableCode"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 不报告执行不到的代码错误</span>    <span class="token string">"allowUnusedLabels"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 不报告未使用的标签错误</span>    <span class="token string">"alwaysStrict"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 以严格模式解析并为每个源文件生成 "use strict"语句</span>    <span class="token string">"baseUrl"</span><span class="token operator">:</span> <span class="token string">"."</span><span class="token punctuation">,</span> <span class="token comment">// 工作根目录</span>    <span class="token string">"experimentalDecorators"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 启用实验性的ES装饰器</span>    <span class="token string">"jsx"</span><span class="token operator">:</span> <span class="token string">"react"</span><span class="token punctuation">,</span> <span class="token comment">// 在 .tsx文件里支持JSX</span>    <span class="token string">"sourceMap"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否生成map文件</span>    <span class="token string">"module"</span><span class="token operator">:</span> <span class="token string">"commonjs"</span><span class="token punctuation">,</span> <span class="token comment">// 指定生成哪个模块系统代码</span>    <span class="token string">"noImplicitAny"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否默认禁用 any</span>    <span class="token string">"removeComments"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否移除注释</span>    <span class="token string">"types"</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">//指定引入的类型声明文件，默认是自动引入所有声明文件，一旦指定该选项，则会禁用自动引入，改为只引入指定的类型声明文件，如果指定空数组[]则不引用任何文件</span>      <span class="token string">"node"</span><span class="token punctuation">,</span> <span class="token comment">// 引入 node 的类型声明</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">"paths"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 指定模块的路径，和baseUrl有关联，和webpack中resolve.alias配置一样</span>      <span class="token string">"src"</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">//指定后可以在文件之直接 import * from 'src';</span>        <span class="token string">"./src"</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"target"</span><span class="token operator">:</span> <span class="token string">"ESNext"</span><span class="token punctuation">,</span> <span class="token comment">// 编译的目标是什么版本的</span>    <span class="token string">"outDir"</span><span class="token operator">:</span> <span class="token string">"./dist"</span><span class="token punctuation">,</span> <span class="token comment">// 输出目录</span>    <span class="token string">"declaration"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否自动创建类型声明文件</span>    <span class="token string">"declarationDir"</span><span class="token operator">:</span> <span class="token string">"./lib"</span><span class="token punctuation">,</span> <span class="token comment">// 类型声明文件的输出目录</span>    <span class="token string">"allowJs"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 允许编译javascript文件。</span>    <span class="token string">"lib"</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">// 编译过程中需要引入的库文件的列表</span>      <span class="token string">"es5"</span><span class="token punctuation">,</span>      <span class="token string">"es2015"</span><span class="token punctuation">,</span>      <span class="token string">"es2016"</span><span class="token punctuation">,</span>      <span class="token string">"es2017"</span><span class="token punctuation">,</span>      <span class="token string">"es2018"</span><span class="token punctuation">,</span>      <span class="token string">"dom"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 指定一个匹配列表（属于自动指定该路径下的所有ts相关文件）</span>  <span class="token string">"include"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"src/**/*"</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// 指定一个排除列表（include的反向操作）</span>  <span class="token string">"exclude"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"demo.ts"</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// 指定哪些文件使用该配置（属于手动一个个指定文件）</span>  <span class="token string">"files"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"demo.ts"</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TS </tag>
            
            <tag> tsconfig </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git之多SSH-key配置</title>
      <link href="/2021/09/13/git%E4%B9%8B%E5%A4%9ASSH-key%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/09/13/git%E4%B9%8B%E5%A4%9ASSH-key%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="1-生成SSH-Key"><a href="#1-生成SSH-Key" class="headerlink" title="1. 生成SSH-Key"></a>1. 生成SSH-Key</h1><ul><li>Windows系统请使用Git bash操作<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成第一个SSH-Key</span>$ ssh-keygen -t rsa -C <span class="token string">"你的邮箱” -f ~/.ssh/id_rsa_one# 生成第二个SSH-Key$ ssh-keygen -t rsa -C "</span>"你的邮箱”” -f ~/.ssh/id_rsa_two<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>创建完成之后 我们在.ssh的根目录下可以看到文件<ul><li>C:\Users\Administrator.ssh 或者 C:\Users\电脑用户名.ssh</li></ul></li></ul><h1 id="2-添加私钥"><a href="#2-添加私钥" class="headerlink" title="2. 添加私钥"></a>2. 添加私钥</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在终端中执行</span>$ ssh-add ~/.ssh/id_rsa_gitlab$ ssh-add ~/.ssh/id_rsa_github<span class="token comment"># 如果执行ssh-add时提示 Could not open a connection to your authentication agent</span><span class="token comment"># 可以先执行命令:</span>$ ssh-agent <span class="token function">bash</span><span class="token comment"># 然后再重新运行ssh-add命令即可</span><span class="token comment"># 添加成功会出现提示：</span><span class="token comment"># Identity added 等字样</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-查看私钥列表是否存在"><a href="#3-查看私钥列表是否存在" class="headerlink" title="3. 查看私钥列表是否存在"></a>3. 查看私钥列表是否存在</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ssh-add -l<span class="token comment"># 当我们可以看到2条私钥的时候就证明安装成功了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="4-修改配置文件config"><a href="#4-修改配置文件config" class="headerlink" title="4. 修改配置文件config"></a>4. 修改配置文件config</h1><ul><li>若.ssh目录(就是私钥所在的文件夹)下无config文件，那就需要自己创建config文件（可用vs code创建）</li><li>创建后添加一下内容：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># giglab</span>Host giglab.comHostName giglab.comPreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsa_gitlab<span class="token comment"># github</span>Host github.comHostName github.comPreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsa_github<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h1 id="5-在gitlab、github网站中设置SSH-keys"><a href="#5-在gitlab、github网站中设置SSH-keys" class="headerlink" title="5. 在gitlab、github网站中设置SSH keys"></a>5. 在gitlab、github网站中设置SSH keys</h1><ul><li>在gitlab、github网站中找到用户设置，找到SSH keys</li><li>在.ssh的根目录中找到对应网站的.pub结尾的文件，用记事本打开，然后复制内容到对应网站保存即可</li></ul><h1 id="6-用ssh命令测试验证"><a href="#6-用ssh命令测试验证" class="headerlink" title="6. 用ssh命令测试验证"></a>6. 用ssh命令测试验证</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ssh</span> -T git@gitlab.com$ <span class="token function">ssh</span> -T git@github.com<span class="token comment"># 如果出现 Are you sure you want to continue connecting? </span><span class="token comment"># 直接输入 yes</span><span class="token comment"># 然后重复上面的命令</span><span class="token comment"># 验证通过会有类似“Welconme”或者“Hi”的欢迎字样</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="7-清空私钥列表"><a href="#7-清空私钥列表" class="headerlink" title="7. 清空私钥列表"></a>7. 清空私钥列表</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ssh-add -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker</title>
      <link href="/2021/08/31/docker%E8%B5%B7%E6%AD%A5%E6%95%99%E7%A8%8B/"/>
      <url>/2021/08/31/docker%E8%B5%B7%E6%AD%A5%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装docker</span>yum <span class="token function">install</span> docker -y<span class="token comment"># 查看docker版本</span>docker -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="自动部署时需要的Dockerfile"><a href="#自动部署时需要的Dockerfile" class="headerlink" title="自动部署时需要的Dockerfile"></a>自动部署时需要的Dockerfile</h1><ul><li>编写Dockerfile时文件名就为Dockerfile，不需要要任何后缀，编写完后放到项目根目录下</li><li>版本1<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">FROM</span> docker<span class="token punctuation">.</span>dm<span class="token operator">-</span>ai<span class="token punctuation">.</span>cn<span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>node<span class="token operator">:</span><span class="token number">10</span><span class="token operator">-</span>frontend<span class="token operator">-</span><span class="token number">0.01</span><span class="token constant">WORKDIR</span> <span class="token operator">/</span>app<span class="token constant">ADD</span> <span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token constant">RUN</span> npm config <span class="token keyword">set</span> registry https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>npm<span class="token punctuation">.</span>dm<span class="token operator">-</span>ai<span class="token punctuation">.</span>cn<span class="token operator">/</span>repository<span class="token operator">/</span>npm <span class="token operator">&amp;&amp;</span> npm i <span class="token operator">&amp;&amp;</span> npm run build<span class="token constant">FROM</span> docker<span class="token punctuation">.</span>dm<span class="token operator">-</span>ai<span class="token punctuation">.</span>cn<span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>nginx<span class="token operator">:</span><span class="token number">1.17</span><span class="token constant">ENV</span> <span class="token constant">TZ</span><span class="token operator">=</span>Asia<span class="token operator">/</span>Shanghai<span class="token constant">WORKDIR</span> <span class="token operator">/</span>www<span class="token constant">COPY</span> –from<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">/</span>app<span class="token operator">/</span>dist <span class="token operator">/</span>www<span class="token constant">COPY</span> –from<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">/</span>app<span class="token operator">/</span>nginx<span class="token punctuation">.</span>conf <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>conf<span class="token punctuation">.</span>d<span class="token operator">/</span><span class="token keyword">default</span><span class="token punctuation">.</span>conf<span class="token constant">EXPOSE</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>版本2（嘉熙版本）<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">FROM</span> docker<span class="token punctuation">.</span>dm<span class="token operator">-</span>ai<span class="token punctuation">.</span>cn<span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>node<span class="token operator">:</span><span class="token number">14</span><span class="token constant">WORKDIR</span> <span class="token operator">/</span>app<span class="token constant">COPY</span> <span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token constant">RUN</span> npm config <span class="token keyword">set</span> registry https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>npm<span class="token punctuation">.</span>dm<span class="token operator">-</span>ai<span class="token punctuation">.</span>cn<span class="token operator">/</span>repository<span class="token operator">/</span>npm<span class="token operator">/</span> \  <span class="token operator">&amp;&amp;</span> npm config <span class="token keyword">set</span> sass_binary_site https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span class="token operator">/</span>mirrors<span class="token operator">/</span>node<span class="token operator">-</span>sass<span class="token operator">/</span> \  <span class="token operator">&amp;&amp;</span> npm i <span class="token operator">&amp;&amp;</span> npm run build<span class="token constant">FROM</span> docker<span class="token punctuation">.</span>dm<span class="token operator">-</span>ai<span class="token punctuation">.</span>cn<span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>nginx<span class="token operator">:</span><span class="token number">1.17</span><span class="token constant">ENV</span> <span class="token constant">TZ</span><span class="token operator">=</span>Asia<span class="token operator">/</span>Shanghai<span class="token constant">COPY</span> <span class="token operator">--</span>from<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">/</span>app<span class="token operator">/</span>dist <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>nginx<span class="token operator">/</span>html<span class="token constant">COPY</span> <span class="token operator">--</span>from<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">/</span>app<span class="token operator">/</span>nginx<span class="token punctuation">.</span>conf <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>conf<span class="token punctuation">.</span>d<span class="token operator">/</span><span class="token keyword">default</span><span class="token punctuation">.</span>conf<span class="token constant">EXPOSE</span> <span class="token number">80</span><span class="token constant">CMD</span> nginx <span class="token operator">-</span>g <span class="token string">"daemon off;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>npm config set registry <a href="https://xxx/">https://xxx</a> —&gt; 设置镜像源地址</li><li>COPY –from=0 &lt;源路径&gt; &lt;目标路径&gt; —&gt; 从指定目录复制文件到指定路径</li><li>EXPOSE —&gt; 声明端口</li><li>使用nginx -g “daemon off;”启动nginx容器的原因<ul><li>背景：Docker 容器启动时，默认会把容器内部第一个进程，也就是pid=1的程序，作为docker容器是否正在运行的依据，如果 docker 容器pid=1的进程挂了，那么docker容器便会直接退出。</li><li>原因：nginx默认是以后台模式启动的，Docker未执行自定义的CMD之前，nginx的pid是1，执行到CMD之后，nginx就在后台运行，bash或sh脚本的pid变成了1。所以一旦执行完自定义CMD，nginx容器也就退出了。为了保持nginx的容器不退出，应该关闭nginx后台运行</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git分支建立及提交规范</title>
      <link href="/2021/08/20/Git%E5%88%86%E6%94%AF%E5%BB%BA%E7%AB%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/"/>
      <url>/2021/08/20/Git%E5%88%86%E6%94%AF%E5%BB%BA%E7%AB%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h1 id="分支建立规范"><a href="#分支建立规范" class="headerlink" title="分支建立规范"></a>分支建立规范</h1><h2 id="Git主要分支说明："><a href="#Git主要分支说明：" class="headerlink" title="Git主要分支说明："></a>Git主要分支说明：</h2><ul><li>Master<ul><li>主分支，维护发布产品的代码，存储了正式发布的历史版本</li></ul></li><li>Develop<ul><li>开发分支，作为功能的集成分支，维护开发中的代码，代码最终要合入Master分支</li></ul></li><li>Feature<ul><li>开自Develop分支，主要用于开发新功能，开发者根据自己负责模块自行维护，模块开发完成并自测通过后，代码合入Develop分支，新功能提交应该从不直接与master分支交互</li><li>命名规范为：feature/#…，每一个功能都应对应一个issue，…即为issue号</li><li>开发中的合并代码采用rebase方法（可以使分支的提交历史看上去更简洁，详细可见rebase与merge的对比），具体方法如下：<ul><li>新建feature分支：git checkout develop， git branch feature/#…， git checkout feature/#…</li><li>feature分支开发一段功能后：git add.， git commit -m “…”， git checkout develop， git pull origin develop， git checkout feature/#…， git rebase develop（代码依次为提交本次代码，添加提交信息，切换到develop分支并拉取最新分支，切换回feature分支，rebase develop分支）</li><li>在rebase develop分支时，可能会产生conflict，此时仍在rebase过程中，这时需要手动修改代码解决冲突，然后解决完该次冲突（rebase会对比每次未合入develop分支的提交，可能每次提交都会有冲突）后，再执行git add.，git rebase –continue命令，rebase完成后，即可push代码。</li><li>多个分支同时开发时，应当频繁地将测试后可运行的feature分支更新到dev分支，每次更新dev分支时通知其他开发人员，拉取最新的dev分支，将自己正在开发的分支rebase dev分支。这样可以避免较长时间没有进行rebase而导致的冲突较多问题。</li></ul></li></ul></li><li>Bugfix<ul><li>开自Develop分支或者Release分支，主要用于修复当前开发中的功能的已知bug；每一个已发现的bug都应该在gitlab中记录issue，并定期更新当前解决进展，如有有价值的思考或独特的解决方法，可以在issue中评论并在wiki的技术知识库或个人空间博文中进行记录。</li><li>命名规范为：bugfix/#…</li></ul></li><li>Hotfix<ul><li>开自Master分支，主要用于修复当前已发布版本的已知bug；解决bug时注意事项参考Bugfix。这是唯一可以直接从master分支fork出来的分支。修复完成，修改应该马上合并回master分支和develop分支（当前的发布分支），master分支应该用新的版本号打好Tag。为Bug修复使用专门分支，让团队可以处理掉问题而不用打断其它工作或是等待下一个发布循环。你可以把它想成是一个直接在master分支上处理的临时发布。</li><li>命名规范为：hotfix/#…</li></ul></li><li>Release<ul><li>开自Develop分支，主要用于发布版本，一旦develop分支上有了做一次发布（或者说快到了既定的发布日）的足够功能，就从develop分支上fork一个发布分支。新建的分支用于开始发布循环，所以从这个时间点开始之后新的功能不能再加到这个分支上 —— 这个分支只应该做Bug修复、文档生成和其它面向发布任务。一旦对外发布的工作都完成了，执行以下三个操作：</li><li>合并Release分支到Master；</li><li>给Master打上对应版本的标签tag；</li><li>Release回归，这些从新建发布分支以来的做的修改要合并回develop分支。</li><li>命名规范为：release/…，…即为版本号</li></ul></li></ul><h1 id="代码提交规范"><a href="#代码提交规范" class="headerlink" title="代码提交规范"></a>代码提交规范</h1><ul><li>建议经常用命令git status查看当前所在分支并用git log查看当前分支记录，每次提交前与checkout分支时都先查看当前分支再进行下一步操作</li><li>提交信息的说明，禁止无意义的日志语言，如modify，修改xxx文件等，任何修改都应该简要说明</li><li>Commit message格式 <type>: <subject> 注意冒号后面有空格</li><li>type 用于说明 commit 的类别，只允许使用下面7个标识<ul><li>feat：新功能（feature）</li><li>fix：修补bug</li><li>docs：文档（documentation）</li><li>style： 格式（不影响代码运行的变动）</li><li>refactor：重构（即不是新增功能，也不是修改bug的代码变动）</li><li>test：增加测试</li><li>chore：构建过程或辅助工具的变动</li></ul></li><li>subject<ul><li>subject是 commit 目的的简短描述，不超过50个字符，且结尾不加句号（.）。</li><li>提交分支合并请求之前的基础原则，如本地编译通过、手工或者自动化验收的测试通过</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS实现杨辉三角</title>
      <link href="/2021/07/26/JS%E5%AE%9E%E7%8E%B0%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/"/>
      <url>/2021/07/26/JS%E5%AE%9E%E7%8E%B0%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/</url>
      
        <content type="html"><![CDATA[<h1 id="杨辉三角"><a href="#杨辉三角" class="headerlink" title="杨辉三角"></a>杨辉三角</h1><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92.png" alt="杨辉三角"></p><h2 id="给定一个函数-function-triangle-n-实现输入n就返回杨辉三角的第n行"><a href="#给定一个函数-function-triangle-n-实现输入n就返回杨辉三角的第n行" class="headerlink" title="给定一个函数 function triangle(n){} ,实现输入n就返回杨辉三角的第n行"></a>给定一个函数 function triangle(n){} ,实现输入n就返回杨辉三角的第n行</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">triangle</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token keyword">let</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">==</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        arr2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// console.log('arr1',arr1);</span>        arr2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr1<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> arr1<span class="token punctuation">[</span>j<span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// console.log('arr2', arr2);</span>    arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr2<span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">triangle</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="给定一个函数-function-triangle-n-实现输入n就返回杨辉三角的前n行"><a href="#给定一个函数-function-triangle-n-实现输入n就返回杨辉三角的前n行" class="headerlink" title="给定一个函数 function triangle(n){} ,实现输入n就返回杨辉三角的前n行"></a>给定一个函数 function triangle(n){} ,实现输入n就返回杨辉三角的前n行</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">triangle</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// console.log(`数组共有$&#123;n&#125;行：`);</span>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//按照杨辉三角的特性，将数填入二维数字中。</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// console.log(arr);</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// console.log(arr[i]);</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">triangle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杨辉三角 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Taro与uni-app对比</title>
      <link href="/2021/07/25/Taro%E4%B8%8Euni-app%E5%AF%B9%E6%AF%94/"/>
      <url>/2021/07/25/Taro%E4%B8%8Euni-app%E5%AF%B9%E6%AF%94/</url>
      
        <content type="html"><![CDATA[<h1 id="Taro和uni-app的介绍"><a href="#Taro和uni-app的介绍" class="headerlink" title="Taro和uni-app的介绍"></a>Taro和uni-app的介绍</h1><h2 id="Taro的介绍"><a href="#Taro的介绍" class="headerlink" title="Taro的介绍"></a>Taro的介绍</h2><ul><li>Taro 是一个开放式跨端跨框架解决方案，支持使用 React/Vue/Nerv 等框架来开发 微信 / 京东 / 百度 / 支付宝 / 字节跳动 / QQ 小程序 / H5 / RN 等应用。</li><li>官方文档：<a href="https://nervjs.github.io/taro">https://nervjs.github.io/taro</a></li><li>Github地址：<a href="https://github.com/nervjs/taro">https://github.com/nervjs/taro</a><h2 id="uni-app的介绍"><a href="#uni-app的介绍" class="headerlink" title="uni-app的介绍"></a>uni-app的介绍</h2></li><li>uni-app 是一个使用 Vue.js 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、Web（响应式）、以及各种小程序（微信/支付宝/百度/头条/QQ/钉钉/淘宝）、快应用等多个平台。</li><li>官方文档：<a href="https://uniapp.dcloud.io/">https://uniapp.dcloud.io</a></li><li>Github地址：<a href="https://github.com/dcloudio/uni-app">https://github.com/dcloudio/uni-app</a><h1 id="两者的对比"><a href="#两者的对比" class="headerlink" title="两者的对比"></a>两者的对比</h1><h2 id="共同点"><a href="#共同点" class="headerlink" title="共同点"></a>共同点</h2></li><li>两者都是用主流框架开发的</li><li>都能支持微信、百度、支付宝、今日头条等小程序，H5，以及iOS和Android的App</li><li>均支持使用npm/yarn安装管理第三方依赖</li><li>均支持使用ES6甚至更新的ES规范</li><li>均支持使用less/scss/ts等预编译器</li><li>均支持进行应用状态管理，taro支持Redux，uni-app支持vuex<h2 id="差异点"><a href="#差异点" class="headerlink" title="差异点"></a>差异点</h2></li></ul><table><thead><tr><th align="left"></th><th align="left">Taro</th><th align="left">uni-app</th></tr></thead><tbody><tr><td align="left">开发技术栈</td><td align="left">React框架开发</td><td align="left">Vue框架开发</td></tr><tr><td align="left">开发工具</td><td align="left">官方未特别推荐IDE</td><td align="left">官方推荐HBuilderX,开发工具可视化的方式比较简单，HBuilderX内置相关环境，开箱即用，无需配置nodejs</td></tr><tr><td align="left">跨端程度</td><td align="left">微信 / 京东 / 百度 / 支付宝 / 字节跳动 / QQ 小程序 / H5 / RN</td><td align="left">微信/支付宝/百度/头条/QQ/钉钉/淘宝小程序、快应用、iOS、Android、Web（响应式）</td></tr><tr><td align="left">版本升级差异</td><td align="left">1.X与2.X之间没有做平滑升级，版本差异太大，升级版本会导致各种不兼容的bug；3.X则属于开放式架构的改动，采用了重运行时的架构</td><td align="left">无版本升级影响</td></tr><tr><td align="left">物料市场</td><td align="left">NutUI、Taro UI；物料市场活跃度低，更新速度慢</td><td align="left">uni-ui、uView UI、mui；插件市场活跃度高，插件数量多，更新速度快</td></tr><tr><td align="left">社区活跃度</td><td align="left">GitHub Issuse、Discussions</td><td align="left">GitHub Issuse、官网社区问答</td></tr><tr><td align="left">学习维护成本</td><td align="left">高</td><td align="left">低</td></tr><tr><td align="left">云开发支持</td><td align="left">无</td><td align="left">uniCloud</td></tr></tbody></table><h2 id="Taro-amp-amp-DCloud-amp-amp-uni-app-amp-amp-微信小程序诞生节点"><a href="#Taro-amp-amp-DCloud-amp-amp-uni-app-amp-amp-微信小程序诞生节点" class="headerlink" title="Taro &amp;&amp; DCloud &amp;&amp; uni-app &amp;&amp; 微信小程序诞生节点"></a>Taro &amp;&amp; DCloud &amp;&amp; uni-app &amp;&amp; 微信小程序诞生节点</h2><ul><li>Taro 2018年4月8日发布0.0.1版本<ul><li><a href="https://github.com/NervJS/taro/releases?after=v0.0.5">https://github.com/NervJS/taro/releases?after=v0.0.5</a></li></ul></li><li>DCloud于2012年开始研发小程序技术，优化webview的功能和性能，并加入W3C和HTML5中国产业联盟，推出了HBuilder开发工具，为后续产业化做准备<ul><li><a href="https://uniapp.dcloud.io/history">https://uniapp.dcloud.io/history</a></li></ul></li><li>uni-app 2019年1月11日发布1.4.0.20181227 版本<ul><li><a href="https://github.com/dcloudio/uni-app/releases?after=1.8.0.20190330">https://github.com/dcloudio/uni-app/releases?after=1.8.0.20190330</a></li></ul></li><li>微信团队于2016年初决定上线小程序业务，但其没有接入联盟标准，而是订制了自己的标准。2017年1月9日，张小龙在2017微信公开课Pro上发布的微信小程序正式上线<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/e1fd563ba0301f44e923d9b9ae67b59.png" alt="微信小程序上线"></li></ul><h1 id="安装及使用"><a href="#安装及使用" class="headerlink" title="安装及使用"></a>安装及使用</h1><h2 id="Taro"><a href="#Taro" class="headerlink" title="Taro"></a>Taro</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps"># 全局安装 @tarojs&#x2F;cli$ npm install -g @tarojs&#x2F;cli# 创建 taro 项目$ taro init myApp# 进入项目目录$ cd myApp# 运行到微信小程序，调试模式$ npm run dev:weapp# 发行到微信小程序$ npm run build:weapp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="uni-app"><a href="#uni-app" class="headerlink" title="uni-app"></a>uni-app</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps"># 全局安装 vue-cli$ npm install -g @vue&#x2F;cli# 创建uni-app项目$ vue create -p dcloudio&#x2F;uni-preset-vue my-project# 进入项目目录$ cd my-project# 运行到微信小程序，调试模式$ npm run dev:mp-weixin# 发行到微信小程序$ npm run build:mp-weixin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>或者直接通过HBuilderX可视化界面</li></ul>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Taro </tag>
            
            <tag> uni-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS中的call()、apply()、bind()的用法</title>
      <link href="/2021/07/09/JS%E4%B8%AD%E7%9A%84call()%E3%80%81apply()%E3%80%81bind()%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>/2021/07/09/JS%E4%B8%AD%E7%9A%84call()%E3%80%81apply()%E3%80%81bind()%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="少罗嗦，直接看代码"><a href="#少罗嗦，直接看代码" class="headerlink" title="少罗嗦，直接看代码"></a>少罗嗦，直接看代码</h1><ul><li><p>其实是一个很简单的东西，认真看十分钟就从一脸懵B 到完全 理解！</p></li><li><p>先看明白下面：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 例1</span><span class="token comment">// 注意是var不是let  如果使用let的话，obj.objAge 为undefined</span><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">'小王'</span><span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">17</span><span class="token punctuation">;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'小张'</span><span class="token punctuation">,</span>  objAge<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">,</span>  <span class="token function-variable function">myFun</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">年龄</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>objAge<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//17</span>obj<span class="token punctuation">.</span><span class="token function">myFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//小张年龄undefined</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 例2</span><span class="token keyword">var</span> fav <span class="token operator">=</span> <span class="token string">'盲僧'</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">shows</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fav<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">shows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//盲僧　</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>比较一下这两者this 的差别，第一个打印里面的this 指向obj，第二个全局声明的shows()函数 this 是window</p></li></ul><h3 id="1-call-、apply-、bind-都是用来重定义-this-这个对象的！"><a href="#1-call-、apply-、bind-都是用来重定义-this-这个对象的！" class="headerlink" title="1. call()、apply()、bind()都是用来重定义 this 这个对象的！"></a>1. call()、apply()、bind()都是用来重定义 this 这个对象的！</h3><p>  如：<br>  <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">'小王'</span><span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">17</span><span class="token punctuation">;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>name<span class="token operator">:</span> <span class="token string">'小张'</span><span class="token punctuation">,</span>objAge<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">,</span><span class="token function-variable function">myFun</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">年龄</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token punctuation">&#123;</span>name<span class="token operator">:</span> <span class="token string">'玛丽'</span><span class="token punctuation">,</span>age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">&#125;</span>obj<span class="token punctuation">.</span><span class="token function">myFun</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">;</span>　　　　<span class="token comment">//玛丽年龄18</span>obj<span class="token punctuation">.</span><span class="token function">myFun</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">;</span>　　　 <span class="token comment">//玛丽年龄18</span>obj<span class="token punctuation">.</span><span class="token function">myFun</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>　　　<span class="token comment">//玛丽年龄18</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p><ul><li>以上出了bind 方法后面多了个()外 ，结果返回都一致</li><li>由此得出结论，bind返回的是一个新的函数，你必须调用它才会被执行</li></ul><h3 id="2-对比call、bind、apply传参情况下"><a href="#2-对比call、bind、apply传参情况下" class="headerlink" title="2. 对比call、bind、apply传参情况下"></a>2. 对比call、bind、apply传参情况下</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">'小王'</span><span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">17</span><span class="token punctuation">;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>name<span class="token operator">:</span> <span class="token string">'小张'</span><span class="token punctuation">,</span>objAge<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">,</span><span class="token function-variable function">myFun</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">k<span class="token punctuation">,</span>v</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">年龄</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> -> 来自</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>k<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">去往</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>v<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token punctuation">&#123;</span>name<span class="token operator">:</span> <span class="token string">'玛丽'</span><span class="token punctuation">,</span>age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">&#125;</span>obj<span class="token punctuation">.</span><span class="token function">myFun</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span><span class="token string">'广州'</span><span class="token punctuation">,</span><span class="token string">'上海'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>　　　　      <span class="token comment">// 玛丽年龄18 -> 来自广州去往上海</span>obj<span class="token punctuation">.</span><span class="token function">myFun</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'广州'</span><span class="token punctuation">,</span><span class="token string">'上海'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 玛丽年龄18 -> 来自广州去往上海</span>obj<span class="token punctuation">.</span><span class="token function">myFun</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span><span class="token string">'广州'</span><span class="token punctuation">,</span><span class="token string">'上海'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 玛丽年龄18 -> 来自广州去往上海</span>obj<span class="token punctuation">.</span><span class="token function">myFun</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'广州'</span><span class="token punctuation">,</span><span class="token string">'上海'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>　　     <span class="token comment">// 玛丽年龄18 -> 来自广州,上海去往undefined</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>微妙的差距</p></li><li><p>从上面四个结果不难看出 call 、bind 、 apply 这三个函数的第一个参数都是 this 的指向对象，第二个参数差别就来了：</p><ul><li>call的参数是直接放进去的，第二第三第n个参数全都用逗号分隔，直接放到后面obj.myFun.call(db,’成都’, … ,’string’);</li><li>apply的所有参数都必须放在一个数组里面传进去 obj.myFun.apply(db,[‘成都’, …, ‘string’ ]);</li><li>bind除了返回是函数以外，它 的参数和call 一样</li></ul></li><li><p>当然，三者的参数不限定是string类型，允许是各种类型，包括函数、object等等</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> call </tag>
            
            <tag> apply </tag>
            
            <tag> bind </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于React三千问</title>
      <link href="/2021/07/08/%E5%85%B3%E4%BA%8EReact%E4%B8%89%E5%8D%83%E9%97%AE/"/>
      <url>/2021/07/08/%E5%85%B3%E4%BA%8EReact%E4%B8%89%E5%8D%83%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="如何理解React？有哪些新特性？"><a href="#如何理解React？有哪些新特性？" class="headerlink" title="如何理解React？有哪些新特性？"></a>如何理解React？有哪些新特性？</h1><h2 id="一、是什么"><a href="#一、是什么" class="headerlink" title="一、是什么"></a>一、是什么</h2><ul><li><p>React，用于构建用户界面的 JavaScript 库，提供了 UI 层面的解决方案</p></li><li><p>遵循组件设计模式、声明式编程范式和函数式编程概念，以使前端应用程序更高效</p></li><li><p>使用虚拟DOM来有效地操作真实DOM，遵循从高阶组件到低阶组件的单向数据流</p></li><li><p>帮助我们将界面分成了各个独立的小块，每一个块就是组件，这些组件之间可以组合、嵌套，构成整体页面</p></li><li><p>React 类组件使用一个名为 render() 的方法或者函数组件return，接收输入的数据并返回需要展示的内容</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">HelloMessage</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        Hello <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>name<span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>  <span class="token operator">&lt;</span>HelloMessage name<span class="token operator">=</span><span class="token string">"Taylor"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'hello-example'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、特性"><a href="#二、特性" class="headerlink" title="二、特性"></a>二、特性</h2><p>React特性有很多，如：</p></li><li><p>JSX语法</p></li><li><p>单向数据绑定</p></li><li><p>虚拟DOM</p></li><li><p>声明式编程</p></li><li><p>Component</p></li></ul><p>着重介绍下声明式编程及Component</p><h3 id="声明式编程"><a href="#声明式编程" class="headerlink" title="声明式编程"></a>声明式编程</h3><ul><li><p>声明式编程是一种编程范式，它关注的是你要做什么，而不是如何做</p></li><li><p>它表达逻辑而不显式地定义步骤。这意味着我们需要根据逻辑的计算来声明要显示的组件</p></li><li><p>如实现一个标记的地图：</p></li><li><p>通过命令式创建地图、创建标记、以及在地图上添加的标记的步骤如下：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 创建地图</span><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token punctuation">.</span>map</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'map'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    zoom<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>    center<span class="token operator">:</span> <span class="token punctuation">&#123;</span>lat<span class="token punctuation">,</span>lng<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建标记</span><span class="token keyword">const</span> marker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token punctuation">.</span>marker</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    position<span class="token operator">:</span> <span class="token punctuation">&#123;</span>lat<span class="token punctuation">,</span> lng<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    title<span class="token operator">:</span> <span class="token string">'Hello Marker'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 地图上添加标记</span>marker<span class="token punctuation">.</span><span class="token function">setMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而用React实现上述功能则如下：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>Map zoom<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span> center<span class="token operator">=</span><span class="token punctuation">&#123;</span>lat<span class="token punctuation">,</span> lng<span class="token punctuation">&#125;</span><span class="token operator">></span>    <span class="token operator">&lt;</span>Marker position<span class="token operator">=</span><span class="token punctuation">&#123;</span>lat<span class="token punctuation">,</span> lng<span class="token punctuation">&#125;</span> title<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'Hello Marker'</span><span class="token punctuation">&#125;</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>Map<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>声明式编程方式使得React组件很容易使用，最终的代码简单易于维护</p></li></ul><h3 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h3><ul><li><p>在React 中，一切皆为组件。通常将应用程序的整个逻辑分解为小的单个部分。我们将每个单独的部分称为组件</p></li><li><p>组件可以是一个函数或者是一个类，接受数据输入，处理它并返回在UI中呈现的React元素</p></li><li><p>函数式组件（无状态组件）如下：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">Header</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span><span class="token punctuation">(</span>        <span class="token operator">&lt;</span>Jumbotron style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>backgroundColor<span class="token operator">:</span><span class="token string">'orange'</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">></span>            <span class="token operator">&lt;</span>h1<span class="token operator">></span><span class="token constant">TODO</span> App<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>Jumbotron<span class="token operator">></span>    <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>类组件（有状态组件）如下：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Dashboard</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">&#123;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"dashboard"</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>ToDoForm <span class="token operator">/</span><span class="token operator">></span>                <span class="token operator">&lt;</span>ToDolist <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一个组件该有的特点如下：</p></li><li><p>可组合：个组件易于和其它组件一起使用，或者嵌套在另一个组件内部</p></li><li><p>可重用：每个组件都是具有独立功能的，它可以被使用在多个UI场景</p></li><li><p>可维护：每个小的组件仅仅包含自身的逻辑，更容易被理解和维护</p><h2 id="三、优势"><a href="#三、优势" class="headerlink" title="三、优势"></a>三、优势</h2></li><li><p>通过上面的初步了解，可以感受到React存在的优势：</p><ul><li>高效灵活</li><li>声明式的设计，简单使用</li><li>组件式开发，提高代码复用率</li><li>单向响应的数据流会比双向绑定的更安全，速度更快<h1 id="Real-DOM-与-Virtual-DOM-的区别？有何优缺点？"><a href="#Real-DOM-与-Virtual-DOM-的区别？有何优缺点？" class="headerlink" title="Real DOM 与 Virtual DOM 的区别？有何优缺点？"></a>Real DOM 与 Virtual DOM 的区别？有何优缺点？</h1><h2 id="一、是什么-1"><a href="#一、是什么-1" class="headerlink" title="一、是什么"></a>一、是什么</h2></li></ul></li><li><p>Real DOM，真实DOM， 意思为文档对象模型，是一个结构化文本的抽象，在页面渲染出的每一个结点都是一个真实DOM结构，如下：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello world<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>Virtual Dom，本质上是以 JavaScript 对象形式存在的对 DOM 的描述</p></li><li><p>创建虚拟DOM目的就是为了更好将虚拟的节点渲染到页面视图中，虚拟DOM对象的节点与真实DOM的属性一一照应</p></li><li><p>在React中，JSX是其一大特性，可以让你在JS中通过使用XML的方式去直接声明界面的DOM结构</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> vDom <span class="token operator">=</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello World<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span> <span class="token comment">// 创建h1标签，右边千万不能加引号</span><span class="token keyword">const</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span> <span class="token comment">// 找到&lt;div id="root">&lt;/div>节点</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>vDom<span class="token punctuation">,</span> root<span class="token punctuation">)</span> <span class="token comment">// 把创建的h1标签渲染到root节点上</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>上述中，ReactDOM.render()用于将你创建好的虚拟DOM节点插入到某个真实节点上，并渲染到页面上</p></li><li><p>JSX实际是一种语法糖，在使用过程中会被babel进行编译转化成JS代码，上述VDOM转化为如下：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> vDom <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>  <span class="token string">'h1'</span>，   <span class="token punctuation">&#123;</span> className<span class="token operator">:</span> <span class="token string">'hClass'</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token string">'hId'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token string">'hello world'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>可以看到，JSX就是为了简化直接调用React.createElement() 方法：</p></li><li><p>第一个参数是标签名，例如h1、span、table…</p></li><li><p>第二个参数是个对象，里面存着标签的一些属性，例如id、class等</p></li><li><p>第三个参数是节点中的文本</p></li><li><p>通过console.log(VDOM)，则能够得到虚拟VDOM消息</p></li><li><p>所以可以得到，JSX通过babel的方式转化成React.createElement执行，返回值是一个对象，也就是虚拟DOM</p></li></ul><h2 id="二、区别"><a href="#二、区别" class="headerlink" title="二、区别"></a>二、区别</h2><ul><li><p>两者的区别如下：</p><ul><li>虚拟DOM不会进行排版与重绘操作，而真实DOM会频繁重排与重绘</li><li>虚拟DOM的总损耗是“虚拟DOM增删改 + 真实DOM差异增删改+排版与重绘”，真实DOM的总损耗是“真实DOM完全增删改+排版与重绘”</li></ul></li><li><p>传统的原生api或jQuery去操作DOM时，浏览器会从构建DOM树开始从头到尾执行一遍流程</p></li><li><p>当你在一次操作时，需要更新10个DOM节点，浏览器没这么智能，收到第一个更新DOM请求后，并不知道后续还有9次更新操作，因此会马上执行流程，最终执行10次流程</p></li><li><p>而通过VNode，同样更新10个DOM节点，虚拟DOM不会立即操作DOM，而是将这10次更新的diff内容保存到本地的一个js对象中，最终将这个js对象一次性attach到DOM树上，避免大量的无谓计算</p></li></ul><h2 id="三、优缺点"><a href="#三、优缺点" class="headerlink" title="三、优缺点"></a>三、优缺点</h2><ul><li>真实DOM的优势：<ul><li>易用</li></ul></li><li>缺点：<ul><li>效率低，解析速度慢，内存占用量过高</li><li>性能差：频繁操作真实DOM，易于导致重绘与回流</li></ul></li><li>使用虚拟DOM的优势如下：<ul><li>简单方便：如果使用手动操作真实DOM来完成页面，繁琐又容易出错，在大规模应用下维护起来也很困难</li><li>性能方面：使用Virtual DOM，能够有效避免真实DOM数频繁更新，减少多次引起重绘与回流，提高性能</li><li>跨平台：React借助虚拟DOM， 带来了跨平台的能力，一套代码多端运行</li></ul></li><li>缺点：<ul><li>在一些性能要求极高的应用中虚拟 DOM 无法进行针对性的极致优化</li><li>首次渲染大量DOM时，由于多了一层虚拟DOM的计算，速度比正常稍慢<h1 id="React生命周期有哪些不同的阶段？每个阶段对应的方法是？"><a href="#React生命周期有哪些不同的阶段？每个阶段对应的方法是？" class="headerlink" title="React生命周期有哪些不同的阶段？每个阶段对应的方法是？"></a>React生命周期有哪些不同的阶段？每个阶段对应的方法是？</h1><h1 id="对State-和-Porps的理解？有何区别？"><a href="#对State-和-Porps的理解？有何区别？" class="headerlink" title="对State 和 Porps的理解？有何区别？"></a>对State 和 Porps的理解？有何区别？</h1><h1 id="super-和-super-props-有何区别？"><a href="#super-和-super-props-有何区别？" class="headerlink" title="super() 和 super(props) 有何区别？"></a>super() 和 super(props) 有何区别？</h1><h1 id="React中的setState执行机制？"><a href="#React中的setState执行机制？" class="headerlink" title="React中的setState执行机制？"></a>React中的setState执行机制？</h1><h1 id="对React的执行机制如何理解？"><a href="#对React的执行机制如何理解？" class="headerlink" title="对React的执行机制如何理解？"></a>对React的执行机制如何理解？</h1><h1 id="React事件绑定方式有哪些？有何区别？"><a href="#React事件绑定方式有哪些？有何区别？" class="headerlink" title="React事件绑定方式有哪些？有何区别？"></a>React事件绑定方式有哪些？有何区别？</h1><h1 id="React构建组件的方式有哪些？有何区别？"><a href="#React构建组件的方式有哪些？有何区别？" class="headerlink" title="React构建组件的方式有哪些？有何区别？"></a>React构建组件的方式有哪些？有何区别？</h1><h1 id="React中组件通信方式有哪些？"><a href="#React中组件通信方式有哪些？" class="headerlink" title="React中组件通信方式有哪些？"></a>React中组件通信方式有哪些？</h1><h1 id="React中的key有什么作用？"><a href="#React中的key有什么作用？" class="headerlink" title="React中的key有什么作用？"></a>React中的key有什么作用？</h1><h1 id="对React-refs的理解？有何应用场景？"><a href="#对React-refs的理解？有何应用场景？" class="headerlink" title="对React refs的理解？有何应用场景？"></a>对React refs的理解？有何应用场景？</h1><h1 id="对React中类组件和函数组件的理解？有何区别？"><a href="#对React中类组件和函数组件的理解？有何区别？" class="headerlink" title="对React中类组件和函数组件的理解？有何区别？"></a>对React中类组件和函数组件的理解？有何区别？</h1></li></ul></li></ul><p><a href="#">来源：JS每日一题</a></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6的两个特性：Class类和类的继承extens</title>
      <link href="/2021/06/25/ES6%E7%9A%84%E4%B8%A4%E4%B8%AA%E7%89%B9%E6%80%A7%EF%BC%9AClass%E7%B1%BB%E5%92%8C%E7%B1%BB%E7%9A%84%E7%BB%A7%E6%89%BFextens/"/>
      <url>/2021/06/25/ES6%E7%9A%84%E4%B8%A4%E4%B8%AA%E7%89%B9%E6%80%A7%EF%BC%9AClass%E7%B1%BB%E5%92%8C%E7%B1%BB%E7%9A%84%E7%BB%A7%E6%89%BFextens/</url>
      
        <content type="html"><![CDATA[<h1 id="Class类"><a href="#Class类" class="headerlink" title="Class类"></a>Class类</h1><ul><li><p>ES6引入Class(类)的概念，让类的写法更接近传统语言的写法，ES6的类可以看作是语法糖，它的绝大部分功能，ES5都可以做得到，新的class写法只是让对象原型的写法更加清晰、更像面向对象编程的语法</p></li><li><p>对比ES5和ES6创建class的写法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ================= ES5 start =================</span><span class="token comment">// ES5 -> 构造函数、原型方法、静态属性</span><span class="token comment">// 构造函数</span><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 原型方法</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 静态属性</span>Person<span class="token punctuation">.</span>info <span class="token operator">=</span> <span class="token string">"Person的静态属性"</span><span class="token punctuation">;</span><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"Damao"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Damao</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Person的静态属性</span><span class="token comment">// ================= ES5 end =================</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ================= ES6 start =================</span><span class="token comment">// ES6 -> 构造函数、原型方法、静态属性</span><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 构造函数</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 原型方法（无需加function）</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 静态属性</span>Person<span class="token punctuation">.</span>info <span class="token operator">=</span> <span class="token string">"Person的静态属性"</span><span class="token punctuation">;</span><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"Damao"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Damao</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Person的静态属性</span><span class="token comment">// ================= ES6 end =================</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>ES6 class中，用static修饰即为类的静态方法（可以直接用类名访问），即在这个类（构造函数）对象本身上的方法，加上static表示该方法不会被实例继承</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span><span class="token keyword">static</span> <span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">"this is static method"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span><span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// this is static method</span><span class="token comment">//</span><span class="token comment">// 静态方法不可以通过实例来即成，即不能通过实例调用，如</span><span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TypeError: person.classMethod is not a function</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="类的继承extends"><a href="#类的继承extends" class="headerlink" title="类的继承extends"></a>类的继承extends</h1></li><li><p>Class可以通过extends关键字来实现继承，而ES5则需要通过修改原型链来实现继承</p></li><li><p>对比ES5和ES6继承的写法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ================= ES5 start =================</span><span class="token comment">// ES5 -> 利用原型让一个引用类型继承另一个引用类型的属性和方法，即让原型对象等于另一个类型的实例</span><span class="token comment">// 原型继承缺点：父类公有和私有属性方法都为子类公有</span><span class="token comment">// </span><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"Damao"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">SuperPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>superName <span class="token operator">=</span> <span class="token string">"Damao2250"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 继承 Person</span><span class="token class-name">SuperPerson</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SuperPerson</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> SuperPerson<span class="token punctuation">;</span><span class="token class-name">SuperPerson</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getSuperName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>superName<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> superPerson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>superPerson<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Damao</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>superPerson<span class="token punctuation">.</span><span class="token function">getSuperName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Damao2250</span><span class="token comment">// ================= ES5 end =================</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ================= ES6 start =================</span><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 构造函数</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 原型方法（无需加function）</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">SuperPerson</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> superName</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 在继承的构造函数中，必须调用一次super方法，它表示构造函数的继承；必须在this前调用</span>  <span class="token comment">// super()是将父类中的this对象继承给子类</span>  <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>superName <span class="token operator">=</span> superName<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">superGetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// super 直接调用父级的原型方法</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>superName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperPerson</span><span class="token punctuation">(</span><span class="token string">"Damao"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"Damao2250"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Damao</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">superGetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Damao  Damao2250</span><span class="token comment">// ================= ES6 end =================</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
            <tag> Class </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一道基础Vue生命周期的面试题</title>
      <link href="/2021/05/11/%E4%B8%80%E9%81%93%E5%9F%BA%E7%A1%80Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
      <url>/2021/05/11/%E4%B8%80%E9%81%93%E5%9F%BA%E7%A1%80Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="根据Vue的生命周期说出console打印出来的值"><a href="#根据Vue的生命周期说出console打印出来的值" class="headerlink" title="根据Vue的生命周期说出console打印出来的值"></a>根据Vue的生命周期说出console打印出来的值</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    num1<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    num2<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>num1 <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>num2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"beforeCreated"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// undefined    (页面载入触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"created"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 3     (页面载入触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">beforeMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"beforeMount"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3     (页面载入触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"mounted"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3     (页面载入触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">beforeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"beforeUpdate"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3     (有数据更新时才会触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">updated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"updated"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3     (有数据更新时才会触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">beforeDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"beforeDestroy"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3     (离开组件时才会触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">destroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"destroyed"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3    (离开组件时才会触发)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><ul><li>父子组件生命周期如何执行<ul><li>父beforeCreate -&gt; 父created -&gt; 父beforeMount -&gt;</li><li>子beforeCreate -&gt; 子created -&gt; 子beforeMount -&gt; 子mounted -&gt;</li><li>父mounted -&gt;</li><li>父beforeUpdate -&gt; 子beforeUpdate -&gt; 子updated -&gt; 父updated -&gt;</li><li>父beforeDestroy-&gt; 子beforeDestroy -&gt; 子destroyed -&gt; 父destroyed</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组的一些操作技巧</title>
      <link href="/2021/05/08/%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/"/>
      <url>/2021/05/08/%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="快速复制数组"><a href="#快速复制数组" class="headerlink" title="快速复制数组"></a>快速复制数组</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> sameArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"arr: "</span><span class="token punctuation">,</span> arr<span class="token punctuation">,</span> <span class="token string">"\n"</span><span class="token punctuation">,</span> <span class="token string">"sameArr: "</span><span class="token punctuation">,</span> sameArr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// arr:[1, 2, 3, 4]</span><span class="token comment">// sameArr:[1, 2, 3, 4]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="快速合并数组"><a href="#快速合并数组" class="headerlink" title="快速合并数组"></a>快速合并数组</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> mergedArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">,</span> <span class="token operator">...</span>arr3<span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"mergedArr: "</span><span class="token punctuation">,</span> mergedArr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// mergedArr:[1, 2, 3, 4, 5, 6, 7, 8, 9]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="快速过滤掉相同元素"><a href="#快速过滤掉相同元素" class="headerlink" title="快速过滤掉相同元素"></a>快速过滤掉相同元素</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> uniqueArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"uniqueArr: "</span><span class="token punctuation">,</span> uniqueArr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// uniqueArr: [1, 2, 3, 4, 5, 8, 9, 6]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><ul><li><p>ES6 之 new Set()</p><ul><li>Set 是 es6 新增的数据结构，似于数组，但它的一大特性就是所有元素都是唯一的，没有重复的值，我们一般称为集合。<ul><li>Set 对象方法</li><li>add 添加某个值，返回 Set 对象本身</li><li>clear 删除所有的键/值对，没有返回值</li><li>delete 删除某个键，返回 true，如果删除失败，返回 false</li><li>forEach 对每个元素执行指定操作</li><li>has 返回一个布尔值，表示某个键是否在当前 Set 对象之中<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// Array 转 Set</span><span class="token keyword">var</span> mySet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"value1"</span><span class="token punctuation">,</span> <span class="token string">"value2"</span><span class="token punctuation">,</span> <span class="token string">"value3"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 用...操作符，将 Set 转 Array</span><span class="token keyword">var</span> myArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>mySet<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// String 转 Set</span><span class="token keyword">var</span> mySet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Set(4) &#123;"h", "e", "l", "o"&#125;</span><span class="token comment">// 注：Set 中 toString 方法是不能将 Set 转换成 String</span>Set 对象作用<span class="token comment">// 数组去重</span><span class="token keyword">var</span> mySet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token operator">...</span>mySet<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3, 4]</span><span class="token comment">// 并集</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> union <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123;1, 2, 3, 4&#125;</span><span class="token comment">// 交集</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> intersect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span> b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123;2, 3&#125;</span><span class="token comment">// 差集</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> difference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span>b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123;1&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li></ul><h2 id="过滤符合条件的数组项"><a href="#过滤符合条件的数组项" class="headerlink" title="过滤符合条件的数组项"></a>过滤符合条件的数组项</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token string">"apple"</span><span class="token punctuation">,</span>  <span class="token string">"banana"</span><span class="token punctuation">,</span>  <span class="token string">"pear"</span><span class="token punctuation">,</span>  <span class="token string">"watermelon"</span><span class="token punctuation">,</span>  <span class="token string">"strawberry"</span><span class="token punctuation">,</span>  <span class="token string">"arbutus"</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> hFruits <span class="token operator">=</span> fruits<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fruit</span><span class="token punctuation">)</span> <span class="token operator">=></span> fruit<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"hFruits: "</span><span class="token punctuation">,</span> hFruits<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// hFruits: ["apple", "arbutus"]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="检查数组中的某些项目是否匹配条件"><a href="#检查数组中的某些项目是否匹配条件" class="headerlink" title="检查数组中的某些项目是否匹配条件"></a>检查数组中的某些项目是否匹配条件</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">isEven</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span>isEven<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span>isEven<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数组的交集"><a href="#数组的交集" class="headerlink" title="数组的交集"></a>数组的交集</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> intersection <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=></span> arr2<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>intersection<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [4, 5]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="筛选数组的差异部分"><a href="#筛选数组的差异部分" class="headerlink" title="筛选数组的差异部分"></a>筛选数组的差异部分</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 法一</span><span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> difference <span class="token operator">=</span> arr1<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span>arr2<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> allDifference <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token operator">...</span>arr1<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span>arr2<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token operator">...</span>arr2<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span>arr1<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>difference<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>allDifference<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3, 6, 7, 8, 9]</span><span class="token comment">// 法二</span><span class="token comment">// 比较两个数组，然后返回一个新数组，该数组为两个数组的差异部分，与allDifference同理</span><span class="token keyword">function</span> <span class="token function">diff</span><span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  arr1 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 去重</span>  arr2 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 去重</span>  newArr <span class="token operator">=</span>arr1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> newArr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token operator">=></span><span class="token operator">!</span><span class="token punctuation">(</span>arr1<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> arr2<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">diff</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [4]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="对数组中的项目进行排序"><a href="#对数组中的项目进行排序" class="headerlink" title="对数组中的项目进行排序"></a>对数组中的项目进行排序</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 升序</span><span class="token keyword">const</span> asc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>numbers<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>asc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [9, 16, 20, 23, 52, 99]</span><span class="token comment">// 降序</span><span class="token keyword">const</span> desc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>numbers<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> b <span class="token operator">-</span> a<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [99, 52, 23, 20, 16, 9]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Tips-1"><a href="#Tips-1" class="headerlink" title="Tips"></a>Tips</h3><h4 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h4><ul><li>实现原理<ul><li>数组中有 n 个数，比较每相邻两个数，如果前者大于后者，就把两个数交换位置；这样一来，第一轮就可以选出一个最大的数放在最后面；那么经过 n-1（数组的 length - 1） 轮，就完成了所有数的排序。<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/sort%E6%8E%92%E5%BA%8F.gif" alt="sort排序"></li></ul></li></ul>  <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> max <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> max<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 声明一个变量，作为标志位</span>    <span class="token keyword">var</span> done <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> max <span class="token operator">-</span> j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>        done <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> arr<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">bubbleSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 1、外层 for 循环控制循环次数</span><span class="token comment">// 2、内层 for 循环进行两数交换，找每次的最大数，排到最后</span><span class="token comment">// 3、设置一个标志位，减少不必要的循环</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数组对象树结构的筛选"><a href="#数组对象树结构的筛选" class="headerlink" title="数组对象树结构的筛选"></a>数组对象树结构的筛选</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">filterTree</span><span class="token punctuation">(</span><span class="token parameter">nodes<span class="token punctuation">,</span> query</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 条件就是节点的title过滤关键字</span>  <span class="token keyword">let</span> <span class="token function-variable function">predicate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token comment">// 结束递归的条件</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>nodes <span class="token operator">&amp;&amp;</span> nodes<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span> newChildren <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> node <span class="token keyword">of</span> nodes<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 一、带父节点     以下两个条件任何一个成立，当前节点都应该加入到新子节点集中</span>    <span class="token comment">//  1. 子孙节点中存在符合条件的，即 subs 数组中有值</span>    <span class="token comment">//  2. 自己本身符合条件</span>    <span class="token keyword">let</span> subs <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">filterTree</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>children<span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">predicate</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      newChildren<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>subs <span class="token operator">&amp;&amp;</span> subs<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      node<span class="token punctuation">.</span>children <span class="token operator">=</span> subs<span class="token punctuation">;</span>      newChildren<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// // 二、不带父节点     以下只需要考虑自身的节点满足条件即可,不用带上父节点</span>    <span class="token comment">// if (predicate(node)) &#123;</span>    <span class="token comment">//   newChildren.push(node);</span>    <span class="token comment">//   node.children = this.filterTree(node.children, query);</span>    <span class="token comment">// &#125; else &#123;</span>    <span class="token comment">//   newChildren.push(...this.filterTree(node.children, query));</span>    <span class="token comment">// &#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> newChildren<span class="token punctuation">.</span>length <span class="token operator">?</span> newChildren <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个简单的柯里化函数示例</title>
      <link href="/2021/04/19/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%9F%AF%E9%87%8C%E5%8C%96%E5%87%BD%E6%95%B0%E7%A4%BA%E4%BE%8B/"/>
      <url>/2021/04/19/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%9F%AF%E9%87%8C%E5%8C%96%E5%87%BD%E6%95%B0%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是柯里化"><a href="#什么是柯里化" class="headerlink" title="什么是柯里化"></a>什么是柯里化</h1><ul><li>柯里化就是把一个多参数的函数转换为一系列只带单个参数的函数<h2 id="未柯里化前的函数"><a href="#未柯里化前的函数" class="headerlink" title="未柯里化前的函数"></a>未柯里化前的函数</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> a <span class="token operator">*</span> b <span class="token operator">*</span> c<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">1</span>，<span class="token number">2</span>，<span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="柯里化后的函数"><a href="#柯里化后的函数" class="headerlink" title="柯里化后的函数"></a>柯里化后的函数</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token parameter">b</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token parameter">c</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> a <span class="token operator">*</span> b <span class="token operator">*</span> c<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="柯里化过程"><a href="#柯里化过程" class="headerlink" title="柯里化过程"></a>柯里化过程</h2></li><li>将 <code>multiply(1，2，3)</code> 函数调用转换为 <code>multiply(1)(2)(3)</code> 调用</li><li>拆分<code>multiply(1)(2)(3)</code>便于理解<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> multiply1 <span class="token operator">=</span> <span class="token function">multiplytiply</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> multiply2 <span class="token operator">=</span> <span class="token function">multiply1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> multiply3 <span class="token operator">=</span> <span class="token function">multiply2</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>multiply3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令速查表</title>
      <link href="/2021/04/15/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
      <url>/2021/04/15/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><table><thead><tr><th align="left">Tips</th><th></th></tr></thead><tbody><tr><td align="left">master：</td><td>默认开发分支</td></tr><tr><td align="left">origin：</td><td>默认远程版本库</td></tr></tbody></table><h1 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h1><table><thead><tr><th align="left">创建版本库</th><th></th></tr></thead><tbody><tr><td align="left">$ git clone <url></td><td>#克隆远程版本库</td></tr><tr><td align="left">$ git init</td><td>#初始化本地版本库</td></tr></tbody></table><h1 id="修改和提交"><a href="#修改和提交" class="headerlink" title="修改和提交"></a>修改和提交</h1><table><thead><tr><th align="left">修改和提交</th><th></th></tr></thead><tbody><tr><td align="left">$ git status</td><td>#查看当前修改状况</td></tr><tr><td align="left">$ git diff</td><td>#查看变更的内容</td></tr><tr><td align="left">$ git add .</td><td>#把所有修改的文件添加到缓存（跟踪文件）</td></tr><tr><td align="left">$ git add <file></td><td>#把指定的文件添加到缓存</td></tr><tr><td align="left">$ git mv <old_file> <new_file></td><td>#修改文件名</td></tr><tr><td align="left">$ git rm <file></td><td>#删除文件</td></tr><tr><td align="left">$ git rm –cached <file></td><td>#停止跟踪文件但不删除</td></tr><tr><td align="left">$ git commit -m “message”</td><td>#提交所有更新过的文件</td></tr><tr><td align="left">$ git commit –amend</td><td>#修改最后一次提交</td></tr></tbody></table><h1 id="查看提交历史"><a href="#查看提交历史" class="headerlink" title="查看提交历史"></a>查看提交历史</h1><table><thead><tr><th align="left">查看提交历史</th><th></th></tr></thead><tbody><tr><td align="left">$ git log</td><td>#查看提交历史</td></tr><tr><td align="left">$ git log -p <file></td><td>#查看指定文件提交历史</td></tr><tr><td align="left">$ git blame <file></td><td>#以列表的方式查看指定文件提交历史</td></tr></tbody></table><h1 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h1><table><thead><tr><th align="left">撤销</th><th></th></tr></thead><tbody><tr><td align="left">$ git reset –hard HEAD</td><td>#撤销工作目录中所有未提交文件的修改内容</td></tr><tr><td align="left">$ git checkout HEAD <file></td><td>#撤销指定未提交文件的修改内容</td></tr><tr><td align="left">$ git revert <commit></td><td>#撤销指定的提交</td></tr></tbody></table><h1 id="分支与标签"><a href="#分支与标签" class="headerlink" title="分支与标签"></a>分支与标签</h1><table><thead><tr><th align="left">分支与标签</th><th></th></tr></thead><tbody><tr><td align="left">$ git branch</td><td>#显示所有本地分支</td></tr><tr><td align="left">$ git branch -r</td><td>#显示所有远程分支</td></tr><tr><td align="left">$ git branch -a</td><td>#显示所有本地和远程分支</td></tr><tr><td align="left">$ git checkout &lt;branch/tag&gt;</td><td>#切换到指定分支或标签</td></tr><tr><td align="left">$ git branch <new_branch></td><td>#创建新分支</td></tr><tr><td align="left">$ git checkout -b <new_branch></td><td>#创建并切换到新分支</td></tr><tr><td align="left">$ git branch -d <branch></td><td>#删除本地分支</td></tr><tr><td align="left">$ git tag</td><td>#显示所有本地标签</td></tr><tr><td align="left">$ git tag <tagname></td><td>#基于最新提交创建标签</td></tr><tr><td align="left">$ git tag -d <tagname></td><td>#删除标签</td></tr></tbody></table><h1 id="合并与衍合"><a href="#合并与衍合" class="headerlink" title="合并与衍合"></a>合并与衍合</h1><table><thead><tr><th align="left">合并与衍合</th><th></th></tr></thead><tbody><tr><td align="left">$ git merge <branch></td><td>#合并指定分支到当前分支</td></tr><tr><td align="left">$ git rebase <branch></td><td>#衍合指定分支到当前分支</td></tr></tbody></table><h1 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h1><table><thead><tr><th align="left">远程操作</th><th></th></tr></thead><tbody><tr><td align="left">$ git remote -v</td><td>#查看远程版本库信息</td></tr><tr><td align="left">$ git remote show <remote></td><td>#查看指定远程版本库信息</td></tr><tr><td align="left">$ git remote add <remote> <url></td><td>#添加远程版本库</td></tr><tr><td align="left">$ git fetch <remote></td><td>#从远程库获取代码</td></tr><tr><td align="left">$ git pull <remote> <branch></td><td>#从远程库拉去代码并快速合并</td></tr><tr><td align="left">$ git push <remote> <branch></td><td>#上传代码到远程库并快速合并</td></tr><tr><td align="left">$ git push <remote> -d &lt;branch/tag&gt;</td><td>#删除远程分支或标签</td></tr><tr><td align="left">$ git push –tags</td><td>#上传所有标签</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Element-Ui封装一个滑动组件</title>
      <link href="/2021/04/08/%E7%94%A8Element-Ui%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%AA%E6%BB%91%E5%8A%A8%E7%BB%84%E4%BB%B6/"/>
      <url>/2021/04/08/%E7%94%A8Element-Ui%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%AA%E6%BB%91%E5%8A%A8%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="基于Element-Ui的“Slider滑块”组件封装一个前端滑动滑动验证组件"><a href="#基于Element-Ui的“Slider滑块”组件封装一个前端滑动滑动验证组件" class="headerlink" title="基于Element-Ui的“Slider滑块”组件封装一个前端滑动滑动验证组件"></a>基于Element-Ui的“Slider滑块”组件封装一个前端滑动滑动验证组件</h2><ul><li>主要用于登录验证</li><li>纯前端验证（滑着过瘾）目前无法与后端进行校验</li><li>封装还可以优化</li><li>直接看代码吧<h3 id="slider组件"><a href="#slider组件" class="headerlink" title="slider组件"></a>slider组件</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// slider/index.vue'</span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"bar"</span> ref<span class="token operator">=</span><span class="token string">"bar"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>slider      <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"slider"</span>      ref<span class="token operator">=</span><span class="token string">"slider"</span>      v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"value"</span>      <span class="token operator">:</span>show<span class="token operator">-</span>tooltip<span class="token operator">=</span><span class="token string">"false"</span>      @change<span class="token operator">=</span><span class="token string">"sliderChange"</span>      <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">"sliderDisabled"</span>    <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>slider<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"slider-text-before"</span> ref<span class="token operator">=</span><span class="token string">"barText"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"noReset?'run run-no-slider':'run'"</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"!isSuccess"</span><span class="token operator">></span>拖动滑块验证<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>span v<span class="token operator">-</span><span class="token keyword">else</span> style<span class="token operator">=</span><span class="token string">"color:#fff;"</span><span class="token operator">></span>验证通过<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">"slider"</span><span class="token punctuation">,</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    reset<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    noReset<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      value<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      isSuccess<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      sliderDisabled<span class="token operator">:</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function-variable function">reset</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sliderReset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">noReset</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>bar<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"no-slider"</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>bar<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"no-slider"</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">value</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">,</span>val<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>slider<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button1<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button<span class="token punctuation">)</span>    <span class="token comment">// this.$refs.slider.$refs.button1.$refs.button.style = ""</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>slider<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button1<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button<span class="token punctuation">.</span>lastChild<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span>      <span class="token string">"&lt;i class='el-icon-d-arrow-right icon-arrow-right'>&lt;/i>"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">sliderChange</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">===</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sliderSucceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sliderReset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">sliderSucceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>isSuccess <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>slider<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button1<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button<span class="token punctuation">.</span>lastChild<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span>        <span class="token string">"&lt;i class='el-icon-success icon-success'>&lt;/i>"</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>sliderDisabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">sliderReset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>isSuccess <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>sliderDisabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"update:reset"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>slider<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button1<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>button<span class="token punctuation">.</span>lastChild<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span>        <span class="token string">"&lt;i class='el-icon-d-arrow-right icon-arrow-right'>&lt;/i>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">"scss"</span> scoped<span class="token operator">></span>$color<span class="token operator">:</span> #<span class="token number">67</span>c23a<span class="token punctuation">;</span><span class="token comment">// $color: #409EFF;</span>$slider_button_width<span class="token operator">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span>$slider_button_height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span><span class="token punctuation">.</span>bar <span class="token punctuation">&#123;</span>  position<span class="token operator">:</span> relative<span class="token punctuation">;</span>  width<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #e4e7ed<span class="token punctuation">;</span>  border<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>  <span class="token punctuation">.</span>slider<span class="token operator">-</span>text<span class="token operator">-</span>before <span class="token punctuation">&#123;</span>    position<span class="token operator">:</span> absolute<span class="token punctuation">;</span>    left<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    top<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    transform<span class="token operator">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>    letter<span class="token operator">-</span>spacing<span class="token operator">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>    user<span class="token operator">-</span>select<span class="token operator">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">.</span>run <span class="token punctuation">&#123;</span>      padding<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">30</span>px<span class="token punctuation">;</span>      color<span class="token operator">:</span> transparent<span class="token punctuation">;</span>      <span class="token operator">-</span>moz<span class="token operator">-</span>user<span class="token operator">-</span>select<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>user<span class="token operator">-</span>select<span class="token operator">:</span> none<span class="token punctuation">;</span>      user<span class="token operator">-</span>select<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token operator">-</span>o<span class="token operator">-</span>user<span class="token operator">-</span>select<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token operator">-</span>ms<span class="token operator">-</span>user<span class="token operator">-</span>select<span class="token operator">:</span> none<span class="token punctuation">;</span>      background<span class="token operator">:</span> <span class="token operator">-</span>webkit<span class="token operator">-</span><span class="token function">gradient</span><span class="token punctuation">(</span>        linear<span class="token punctuation">,</span>        left top<span class="token punctuation">,</span>        right top<span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> #<span class="token number">333</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">,</span> #<span class="token number">333</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> #fff<span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">,</span> #<span class="token number">333</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> #<span class="token number">333</span><span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>background<span class="token operator">-</span>clip<span class="token operator">:</span> text<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>text<span class="token operator">-</span>fill<span class="token operator">-</span>color<span class="token operator">:</span> transparent<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>text<span class="token operator">-</span>size<span class="token operator">-</span>adjust<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">:</span> slidetounlock <span class="token number">3</span>s infinite<span class="token punctuation">;</span>      animation<span class="token operator">:</span> slidetounlock <span class="token number">3</span>s infinite<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span>run<span class="token operator">-</span>no<span class="token operator">-</span>slider<span class="token punctuation">&#123;</span>      background<span class="token operator">:</span> <span class="token operator">-</span>webkit<span class="token operator">-</span><span class="token function">gradient</span><span class="token punctuation">(</span>        linear<span class="token punctuation">,</span>        left top<span class="token punctuation">,</span>        right top<span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> #<span class="token constant">F56C6C</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">,</span> #<span class="token constant">F56C6C</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> #fff<span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">,</span> #<span class="token constant">F56C6C</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        color<span class="token operator">-</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> #<span class="token constant">F56C6C</span><span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>background<span class="token operator">-</span>clip<span class="token operator">:</span> text<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>text<span class="token operator">-</span>fill<span class="token operator">-</span>color<span class="token operator">:</span> transparent<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>text<span class="token operator">-</span>size<span class="token operator">-</span>adjust<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>animation<span class="token operator">:</span> slidetounlock <span class="token number">3</span>s infinite<span class="token punctuation">;</span>      animation<span class="token operator">:</span> slidetounlock <span class="token number">3</span>s infinite<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token punctuation">.</span>slider<span class="token operator">-</span>text<span class="token operator">-</span>after <span class="token punctuation">&#123;</span>    position<span class="token operator">:</span> absolute<span class="token punctuation">;</span>    left<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    top<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">;</span>    transform<span class="token operator">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">50</span><span class="token operator">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    z<span class="token operator">-</span>index<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">;</span>    color<span class="token operator">:</span> #fff<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token punctuation">.</span>slider <span class="token punctuation">&#123;</span>    width<span class="token operator">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">%</span> <span class="token operator">-</span> #<span class="token punctuation">&#123;</span>$slider_button_width<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__runway <span class="token punctuation">&#123;</span>      margin<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__bar <span class="token punctuation">&#123;</span>      height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>      background<span class="token operator">-</span>color<span class="token operator">:</span> $color<span class="token punctuation">;</span>      border<span class="token operator">-</span>top<span class="token operator">-</span>left<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>      border<span class="token operator">-</span>bottom<span class="token operator">-</span>left<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__runway <span class="token punctuation">&#123;</span>      height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__button<span class="token operator">-</span>wrapper <span class="token punctuation">&#123;</span>      top<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      width<span class="token operator">:</span> $slider_button_width<span class="token punctuation">;</span>      height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>      margin<span class="token operator">-</span>left<span class="token operator">:</span> <span class="token punctuation">(</span>$slider_button_width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">:</span>hover <span class="token punctuation">&#123;</span>        transform<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__button <span class="token punctuation">&#123;</span>      width<span class="token operator">:</span> $slider_button_width<span class="token punctuation">;</span>      height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>      border<span class="token operator">-</span>radius<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      border<span class="token operator">-</span>color<span class="token operator">:</span> #dcdfe6<span class="token punctuation">;</span>      <span class="token operator">:</span>hover <span class="token punctuation">&#123;</span>        transform<span class="token operator">:</span> none<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__button<span class="token punctuation">.</span>dragging<span class="token punctuation">,</span>    <span class="token punctuation">.</span>el<span class="token operator">-</span>slider__button<span class="token punctuation">.</span>hover<span class="token punctuation">,</span>    <span class="token punctuation">.</span>el<span class="token operator">-</span>slider__button<span class="token operator">:</span>hover <span class="token punctuation">&#123;</span>      <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> none <span class="token operator">!</span>important<span class="token punctuation">;</span>      transform<span class="token operator">:</span> none <span class="token operator">!</span>important<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>el<span class="token operator">-</span>slider__runway<span class="token punctuation">.</span>disabled <span class="token punctuation">.</span>el<span class="token operator">-</span>slider__button<span class="token operator">:</span>hover <span class="token punctuation">&#123;</span>      cursor<span class="token operator">:</span> grab <span class="token operator">!</span>important<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>icon<span class="token operator">-</span>arrow<span class="token operator">-</span>right <span class="token punctuation">&#123;</span>      line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token punctuation">(</span>$slider_button_height <span class="token operator">-</span> <span class="token number">4</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>      font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>      color<span class="token operator">:</span> #<span class="token number">4</span>c4c4c<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">deep</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>icon<span class="token operator">-</span>success <span class="token punctuation">&#123;</span>      line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token punctuation">(</span>$slider_button_height <span class="token operator">-</span> <span class="token number">4</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>      font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>      color<span class="token operator">:</span> $color<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>@<span class="token operator">-</span>webkit<span class="token operator">-</span>keyframes slidetounlock <span class="token punctuation">&#123;</span>  from <span class="token punctuation">&#123;</span>    background<span class="token operator">-</span>position<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">70</span>px <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  to <span class="token punctuation">&#123;</span>    background<span class="token operator">-</span>position<span class="token operator">:</span> <span class="token number">80</span>px <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span>no<span class="token operator">-</span>slider<span class="token punctuation">&#123;</span>  animation<span class="token operator">:</span> shake <span class="token number">800</span>ms ease<span class="token operator">-</span><span class="token keyword">in</span><span class="token operator">-</span>out<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@keyframes shake <span class="token punctuation">&#123;</span>    <span class="token number">10</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span> transform<span class="token operator">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span>px<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token number">20</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span> transform<span class="token operator">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">2</span>px<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token number">30</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span> transform<span class="token operator">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span>px<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token number">40</span><span class="token operator">%</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span> transform<span class="token operator">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">4</span>px<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token number">50</span><span class="token operator">%</span> <span class="token punctuation">&#123;</span> transform<span class="token operator">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span>px<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入</span><span class="token keyword">import</span> slider <span class="token keyword">from</span> <span class="token string">'./slider'</span><span class="token comment">// 使用</span> <span class="token operator">&lt;</span>slider v<span class="token operator">-</span>bind<span class="token operator">:</span>reset<span class="token punctuation">.</span>sync<span class="token operator">=</span><span class="token string">"isResetSlider"</span> <span class="token operator">:</span>noReset<span class="token operator">=</span><span class="token string">"isNoReset"</span> @value<span class="token operator">=</span><span class="token string">"sliderValue"</span> @success<span class="token operator">=</span><span class="token string">"sliderSuccess"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>slider<span class="token operator">></span>components<span class="token operator">:</span><span class="token punctuation">&#123;</span>  slider<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    isResetSlider<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    isSeccess<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    sliderVal<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    isNoReset<span class="token operator">:</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 滑动验证</span>  <span class="token function">sliderSuccess</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>isSeccess <span class="token operator">=</span> val  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">sliderValue</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>sliderVal <span class="token operator">=</span> val  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">submitForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sliderVal <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>isNoReset <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>isNoReset <span class="token operator">=</span> <span class="token boolean">false</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">900</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isSeccess<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"submit"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>isResetSlider <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>isSeccess <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"请滑动滑块验证"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>效果截图</li><li>滑动验证-未滑动</li></ul><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E6%BB%91%E5%8A%A8%E9%AA%8C%E8%AF%81-%E6%9C%AA%E6%BB%91%E5%8A%A8.jpg" alt="滑动验证-未滑动"><br>滑动验证-未滑动</p><ul><li>滑动验证-滑动中</li></ul><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E6%BB%91%E5%8A%A8%E9%AA%8C%E8%AF%81-%E6%BB%91%E5%8A%A8%E4%B8%AD.jpg" alt="滑动验证-滑动中"><br>滑动验证-滑动中</p><ul><li>滑动验证-滑动成功</li></ul><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E6%BB%91%E5%8A%A8%E9%AA%8C%E8%AF%81-%E6%BB%91%E5%8A%A8%E6%88%90%E5%8A%9F.jpg" alt="滑动验证-滑动成功"><br>滑动验证-滑动成功</p><ul><li>滑动验证GIF</li></ul><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E6%BB%91%E5%8A%A8%E9%AA%8C%E8%AF%81-DIF.gif" alt="滑动验证GIF"><br>滑动验证GIF</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Element-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动端1px问题</title>
      <link href="/2021/04/08/%E7%A7%BB%E5%8A%A8%E7%AB%AF1px%E9%97%AE%E9%A2%98/"/>
      <url>/2021/04/08/%E7%A7%BB%E5%8A%A8%E7%AB%AF1px%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="为什么会出现？"><a href="#为什么会出现？" class="headerlink" title="为什么会出现？"></a>为什么会出现？</h1><ul><li><p>首先了解两个像素：设备的 物理像素[设备像素] &amp; 虚拟像素[CSS像素] &amp; 逻辑像素[设备独立像素]</p><ul><li>物理像素：移动设备出厂时，不同设备的屏幕自带的不同屏幕像素，也称硬件像素；</li><li>虚拟像素：即css中记录的像素</li><li>逻辑像素：计算机坐标系统中的一个点，是由程序使用的虚拟像素(比如: CSS 像素)，这个点没有固定大小，越小越清晰，可由相关系统转换为物理像素</li></ul></li><li><p>devicePixelRatio（DPR）：反应css中的像素与设备的像素比</p><ul><li>DPR为设备像素（物理像素）和设备独立像素（逻辑像素）的比例</li><li>DPR = 物理像素 / 独立设备像素</li></ul></li><li><p>1px变粗的原因：</p><ul><li>viewport的设置和屏幕物理分辨率是按比例而不是相同的. 移动端window对象有个devicePixelRatio属性,它表示设备物理像素和css像素的比例, 在retina屏的iphone手机上, 这个值为2或3,css里写的1px长度映射到物理像素上就有2px或3px那么长<h1 id="如何解决（最佳解决方案）？"><a href="#如何解决（最佳解决方案）？" class="headerlink" title="如何解决（最佳解决方案）？"></a>如何解决（最佳解决方案）？</h1></li></ul></li><li><p>transform: scale(0.5) 方案</p><ul><li>设置height: 1px，根据媒体查询结合transform缩放为相应尺寸<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span>1px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span>#000<span class="token punctuation">;</span>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-transform-origin</span><span class="token punctuation">:</span>0 0<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>用::after和::befor,设置border-bottom：1px solid #000,然后在缩放-webkit-transform: scaleY(0.5);可以实现两根边线的需求<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div::after</span><span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span>    <span class="token property">border-bottom</span><span class="token punctuation">:</span>1px solid #000<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>用::after设置border：1px solid #000; width:200%; height:200%,然后再缩放scaleY(0.5); 优点可以实现圆角，京东就是这么实现的，缺点是按钮添加active比较麻烦<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.div::after</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 200%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 200%<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #bfbfbf<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">,</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">,</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-transform-origin</span><span class="token punctuation">:</span> top left<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>媒体查询 + transfrom<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 2倍屏 */</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">-webkit-min-device-pixel-ratio</span><span class="token punctuation">:</span> 2.0<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.border-bottom::after</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 3倍屏 */</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">-webkit-min-device-pixel-ratio</span><span class="token punctuation">:</span> 3.0<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.border-bottom::after</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.33<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0.33<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 移动端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 移动端1px </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何快速给类、函数和变量命名</title>
      <link href="/2021/03/26/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E7%BB%99%E7%B1%BB%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D/"/>
      <url>/2021/03/26/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E7%BB%99%E7%B1%BB%E3%80%81%E5%87%BD%E6%95%B0%E5%92%8C%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="A-HC-LC-命名法"><a href="#A-HC-LC-命名法" class="headerlink" title="A/HC/LC 命名法"></a>A/HC/LC 命名法</h1><h2 id="P-A-HC-LC是什么"><a href="#P-A-HC-LC是什么" class="headerlink" title="(P)A/HC/LC是什么"></a>(P)A/HC/LC是什么</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">prefix<span class="token operator">?</span> <span class="token punctuation">(</span><span class="token constant">P</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">action</span> <span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">)</span> <span class="token operator">+</span> high <span class="token function">context</span> <span class="token punctuation">(</span><span class="token constant">HC</span><span class="token punctuation">)</span> <span class="token operator">+</span> low context<span class="token operator">?</span> <span class="token punctuation">(</span><span class="token constant">LC</span><span class="token punctuation">)</span><span class="token comment">// 前缀 + 动作 + 高语境 + 低语境</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Prefix"><a href="#Prefix" class="headerlink" title="Prefix"></a>Prefix</h3><ul><li>prefix（前缀）增加函数的可读性<h3 id="is-是什么"><a href="#is-是什么" class="headerlink" title="- is (是什么)"></a>- is (是什么)</h3></li><li>描述当前上下文（语境）的特征或状态,通常为布尔值。<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token string">'blue'</span><span class="token keyword">const</span> isBlue <span class="token operator">=</span> <span class="token punctuation">(</span> color <span class="token operator">===</span> <span class="token string">'blue'</span> <span class="token punctuation">)</span> <span class="token comment">// 特征</span><span class="token keyword">const</span> isPresent <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 状态</span><span class="token keyword">if</span> <span class="token punctuation">(</span>isBlue <span class="token operator">&amp;&amp;</span> isPresent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>‘Blue is present’<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="has-有什么"><a href="#has-有什么" class="headerlink" title="- has (有什么)"></a>- has (有什么)</h3></li><li>描述当前上下文（语境）是否具有某个特定的值或状态，通常为布尔值<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* Bad */</span><span class="token keyword">const</span> isProductsExist <span class="token operator">=</span> <span class="token punctuation">(</span>productsCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span> areProductsPresent <span class="token operator">=</span> <span class="token punctuation">(</span>productsCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">/* Good */</span><span class="token keyword">const</span> hasProducts <span class="token operator">=</span> <span class="token punctuation">(</span>productsCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="should-应该做什么"><a href="#should-应该做什么" class="headerlink" title="- should (应该做什么)"></a>- should (应该做什么)</h3></li><li>映射具有明确动作的条件语句，通常为布尔值<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">shouldUpdateUrl</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> expectedUrl</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>url <span class="token operator">!==</span> expectedUrl<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="函数的核心是-Actions"><a href="#函数的核心是-Actions" class="headerlink" title="函数的核心是 Actions"></a>函数的核心是 <code>Actions</code></h2><ul><li>Actions（动作），是函数名的动词部分，描述这个函数要做什么</li></ul><h3 id="get-获取数据"><a href="#get-获取数据" class="headerlink" title="- get (获取数据)"></a>- get (获取数据)</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 快速获取内部数据</span><span class="token keyword">function</span> <span class="token function">getFruitsCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fruits<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="set-设置数据"><a href="#set-设置数据" class="headerlink" title="- set (设置数据)"></a>- set (设置数据)</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 将某个变量的值由A变为B</span><span class="token keyword">let</span> fruits <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">function</span> <span class="token function">setFruits</span><span class="token punctuation">(</span><span class="token parameter">nextFruits</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  fruits <span class="token operator">=</span> nextFruits<span class="token punctuation">&#125;</span><span class="token function">setFruits</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token comment">// 5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="reset-还原数据"><a href="#reset-还原数据" class="headerlink" title="- reset (还原数据)"></a>- reset (还原数据)</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 将某个变量的值设为其初始值或状态</span><span class="token keyword">let</span> initialFruits <span class="token operator">=</span> <span class="token number">5</span><span class="token keyword">let</span> fruits <span class="token operator">=</span> initialFruits<span class="token function">setFruits</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token comment">// 10</span><span class="token keyword">function</span> <span class="token function">resetFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  fruits <span class="token operator">=</span> initialFruits<span class="token punctuation">&#125;</span><span class="token function">resetFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span> <span class="token comment">// 5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="fetch-请求数据"><a href="#fetch-请求数据" class="headerlink" title="- fetch (请求数据)"></a>- fetch (请求数据)</h3><ul><li>通常为一个比较耗时的操作，如：异步请求<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">fetchPosts</span><span class="token punctuation">(</span><span class="token parameter">postCount</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>‘https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>api<span class="token punctuation">.</span>dev<span class="token operator">/</span>posts'<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>…<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="remove-移除数据"><a href="#remove-移除数据" class="headerlink" title="- remove (移除数据)"></a>- remove (移除数据)</h3><ul><li>逻辑上的删除，数据可能只是被移动某个特定的地方了</li><li>假设页面有个搜索过滤器，可以通过 <code>removeFilter</code> 来移除过滤器的某个值，而不是 <code>deleteFilter</code><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">removeFilter</span><span class="token punctuation">(</span><span class="token parameter">filterName<span class="token punctuation">,</span> filters</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> filters<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">name</span> <span class="token operator">=></span> name <span class="token operator">!==</span> filterName<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> selectedFilters <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">,</span> <span class="token string">'availability'</span><span class="token punctuation">,</span> <span class="token string">'size'</span><span class="token punctuation">]</span><span class="token function">removeFilter</span><span class="token punctuation">(</span><span class="token string">'price'</span><span class="token punctuation">,</span> selectedFilters<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="delete-删除数据"><a href="#delete-删除数据" class="headerlink" title="- delete (删除数据)"></a>- delete (删除数据)</h3></li><li>将某个数据彻底删除, 是物理上的删除.</li><li>假设你是一个文章审核员, 看到一篇不合规的文章, 当你想彻底删除这篇文章并点击 删除文章 按钮的时候, 执行的应该是一个 deletePost 的删除动作, 而不是 removePost<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">deletePost</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> database<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> id <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="compose-组合数据"><a href="#compose-组合数据" class="headerlink" title="- compose (组合数据)"></a>- compose (组合数据)</h3></li><li>基于现有的数据来创建一个新的数据, 适用于字符串、对象和函数<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">composePageUrl</span><span class="token punctuation">(</span><span class="token parameter">pageName<span class="token punctuation">,</span> pageId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> $<span class="token punctuation">&#123;</span>pageName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">-</span>$<span class="token punctuation">&#123;</span>pageId<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="handle-处理数据"><a href="#handle-处理数据" class="headerlink" title="- handle (处理数据)"></a>- handle (处理数据)</h3><ul><li>处理某个动作, 通常用来声明一个回调函数<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">handleLinkClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Clicked a link!'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>link<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> handleLinkClick<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="最后是-Context"><a href="#最后是-Context" class="headerlink" title="最后是 Context"></a>最后是 Context</h2></li><li>context 是一个域, 指代当前函数的执行环境</li><li>函数通常是处理某件事的一个动作, 所以注明函数所属的域, 或者至少注明一个预期的数据类型是很重要的<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* 基于内置方法的纯函数 */</span><span class="token keyword">function</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">predicate<span class="token punctuation">,</span> list</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>predicate<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* 确切的表明这个函数是处理 posts 的 */</span><span class="token keyword">function</span> <span class="token function">getRecentPosts</span><span class="token punctuation">(</span><span class="token parameter">posts</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token function">filter</span><span class="token punctuation">(</span>posts<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token operator">=></span> post<span class="token punctuation">.</span>date <span class="token operator">===</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>一些编程语言允许你省略 context, 比如在 JavaScript 中 filter 方法只存在于数组上, 所以没必要给函数添加 context.</li></ul><h2 id="综上总结"><a href="#综上总结" class="headerlink" title="综上总结"></a>综上总结</h2><table><thead><tr><th align="left">Name</th><th>Prefix</th><th>Action(A)</th><th>High context(HC)</th><th>Low context(LC)</th></tr></thead><tbody><tr><td align="left">getPost</td><td></td><td>get</td><td>Post</td><td></td></tr><tr><td align="left">getPostData</td><td></td><td>get</td><td>Post</td><td>Data</td></tr><tr><td align="left">handleClickOutside</td><td></td><td>handle</td><td>Click</td><td>Outside</td></tr><tr><td align="left">shouldDisplayMessage</td><td>should</td><td>Display</td><td>Message</td><td></td></tr></tbody></table><h2 id="提高代码可读性的变量命名技巧参考"><a href="#提高代码可读性的变量命名技巧参考" class="headerlink" title="提高代码可读性的变量命名技巧参考"></a>提高代码可读性的变量命名技巧参考</h2><ol><li>遵循 S-I-D 原则<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* Bad */</span><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">5</span> <span class="token comment">// "a" 没有什么含义</span><span class="token keyword">const</span> isPaginatable <span class="token operator">=</span> <span class="token punctuation">(</span>postsCount <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// "Paginatable" 听起来很不自然</span><span class="token keyword">const</span> shouldPaginatize <span class="token operator">=</span> <span class="token punctuation">(</span>postsCount <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// "Paginatize" 编造一个动词更加荒谬!</span><span class="token comment">/* Good */</span><span class="token keyword">const</span> postsCount <span class="token operator">=</span> <span class="token number">5</span><span class="token keyword">const</span> hasPagination <span class="token operator">=</span> <span class="token punctuation">(</span>postsCount <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">const</span> shouldDisplayPagination <span class="token operator">=</span> <span class="token punctuation">(</span>postsCount <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// alternatively</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ul><li>避免缩写</li><li>不要使用缩写形式, 这会降低代码可读性. 起一个简短并且语义化的名称可能有点难度, 但是不要让这成为你使用缩写的借口<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* Bad */</span><span class="token keyword">const</span> <span class="token function-variable function">onItmClk</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Good */</span><span class="token keyword">const</span> <span class="token function-variable function">onItemClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>避免重复的上下文</li><li>如果命名中的 context 存在与否不会降低其可读性的话, 最好还是移除它:<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">MenuItem</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/* 命名中的 "MenuItem" 与类名的域重复 */</span>  <span class="token function-variable function">handleMenuItemClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span>  <span class="token comment">/* 去掉 "MenuItem", 看起来更简洁 */</span>  <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>应该映射预期结果<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* Bad */</span><span class="token keyword">const</span> isEnabled <span class="token operator">=</span> <span class="token punctuation">(</span>itemsCount <span class="token operator">></span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token operator">&lt;</span>Button disabled<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token operator">!</span>isEnabled<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span><span class="token comment">/* Good */</span><span class="token keyword">const</span> isDisabled <span class="token operator">=</span> <span class="token punctuation">(</span>itemsCount <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token operator">&lt;</span>Button disabled<span class="token operator">=</span><span class="token punctuation">&#123;</span>isDisabled<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>考虑单数和复数形式</li><li>因为一个变量可能拥有单个或多个值, 所以命名的时候也要考虑单数和复数形式.</li></ul><h2 id="参考原文链接"><a href="#参考原文链接" class="headerlink" title="参考原文链接"></a><a href="https://betterprogramming.pub/a-useful-framework-for-naming-your-classes-functions-and-variables-e7d186e3189f">参考原文链接</a></h2>]]></content>
      
      
      <categories>
          
          <category> 项目规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx基本功能及配置</title>
      <link href="/2021/02/26/Nginx%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD%E5%8F%8A%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/02/26/Nginx%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD%E5%8F%8A%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx的基本功能及配置"><a href="#Nginx的基本功能及配置" class="headerlink" title="Nginx的基本功能及配置"></a>Nginx的基本功能及配置</h1><h2 id="查找-Nginx-安装目录"><a href="#查找-Nginx-安装目录" class="headerlink" title="查找 Nginx 安装目录"></a>查找 Nginx 安装目录</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">ps aux | grep Nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="默认的-nginx-配置文件-nginx-conf-内容"><a href="#默认的-nginx-配置文件-nginx-conf-内容" class="headerlink" title="默认的 nginx 配置文件 nginx.conf 内容"></a>默认的 nginx 配置文件 nginx.conf 内容</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">#user  nobody;worker_processes  1;#error_log  logs&#x2F;error.log;#error_log  logs&#x2F;error.log  notice;#error_log  logs&#x2F;error.log  info;#pid        logs&#x2F;nginx.pid;events &#123;    worker_connections  1024;&#125;http &#123;    include       mime.types;    default_type  application&#x2F;octet-stream;    #log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;    #                  &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;    #                  &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;    #access_log  logs&#x2F;access.log  main;    sendfile        on;    #tcp_nopush     on;    #keepalive_timeout  0;    keepalive_timeout  65;    #gzip  on;    server &#123;        listen       80;        server_name  localhost;        #charset koi8-r;        #access_log  logs&#x2F;host.access.log  main;        location &#x2F; &#123;            root   html;            index  index.html index.htm;        &#125;        #error_page  404              &#x2F;404.html;        # redirect server error pages to the static page &#x2F;50x.html        #        error_page   500 502 503 504  &#x2F;50x.html;        location &#x3D; &#x2F;50x.html &#123;            root   html;        &#125;        # proxy the PHP scripts to Apache listening on 127.0.0.1:80        #        #location ~ \.php$ &#123;        #    proxy_pass   http:&#x2F;&#x2F;127.0.0.1;        #&#125;        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000        #        #location ~ \.php$ &#123;        #    root           html;        #    fastcgi_pass   127.0.0.1:9000;        #    fastcgi_index  index.php;        #    fastcgi_param  SCRIPT_FILENAME  &#x2F;scripts$fastcgi_script_name;        #    include        fastcgi_params;        #&#125;        # deny access to .htaccess files, if Apache&#39;s document root        # concurs with nginx&#39;s one        #        #location ~ &#x2F;\.ht &#123;        #    deny  all;        #&#125;    &#125;    # another virtual host using mix of IP-, name-, and port-based configuration    #    #server &#123;    #    listen       8000;    #    listen       somename:8080;    #    server_name  somename  alias  another.alias;    #    location &#x2F; &#123;    #        root   html;    #        index  index.html index.htm;    #    &#125;    #&#125;    # HTTPS server    #    #server &#123;    #    listen       443 ssl;    #    server_name  localhost;    #    ssl_certificate      cert.pem;    #    ssl_certificate_key  cert.key;    #    ssl_session_cache    shared:SSL:1m;    #    ssl_session_timeout  5m;    #    ssl_ciphers  HIGH:!aNULL:!MD5;    #    ssl_prefer_server_ciphers  on;    #    location &#x2F; &#123;    #        root   html;    #        index  index.html index.htm;    #    &#125;    #&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="nginx-文件结构"><a href="#nginx-文件结构" class="headerlink" title="nginx 文件结构"></a>nginx 文件结构</h2><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">...              #全局块events &#123;         #events块  ...&#125;http      #http块&#123;    ...   #http全局块    server        #server块    &#123;         ...       #server全局块        location [PATTERN]   #location块        &#123;            ...        &#125;        location [PATTERN]         &#123;            ...        &#125;    &#125;    server    &#123;      ...    &#125;    ...     #http全局块&#125;### 1、全局块：配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。### 2、events块：配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。### 3、http块：可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件，连接超时时间，单连接请求数等。### 4、server块：配置虚拟主机的相关参数，一个http中可以有多个server。### 5、location块：配置请求的路由，以及各种页面的处理情况。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于typescript改造旧项目的一些坑</title>
      <link href="/2021/02/26/%E5%85%B3%E4%BA%8Etypescript%E6%94%B9%E9%80%A0%E6%97%A7%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
      <url>/2021/02/26/%E5%85%B3%E4%BA%8Etypescript%E6%94%B9%E9%80%A0%E6%97%A7%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h2 id="‘-‘-引入组件报红问题"><a href="#‘-‘-引入组件报红问题" class="headerlink" title="‘@/‘ 引入组件报红问题"></a>‘@/‘ 引入组件报红问题</h2><ul><li>使用 ‘@/xxx/xxx’ 引入组件，vetur报红 找不到module，但是可以正常运行问题</li><li>解决办法：1.把项目目录放工作区根目录；2.项目一定排列在第一位<h2 id="引入第三方包报红"><a href="#引入第三方包报红" class="headerlink" title="引入第三方包报红"></a>引入第三方包报红</h2></li><li>引入第三方库 报红找不到module，无法正常使用包，如qs、jQuery</li><li>解决办法1：使用@types进行包管理，然后正常引入<pre class="line-numbers language-js" data-language="js"><code class="language-js">npm i @types<span class="token operator">/</span>qs<span class="token keyword">import</span> qs <span class="token keyword">from</span> <span class="token string">'qs'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>解决办法2：有些包不能用@types管理，自己写声明 XX.d.ts  不推荐</li></ul><h2 id="router配置里引入component组件的时候必须添加-vue后缀"><a href="#router配置里引入component组件的时候必须添加-vue后缀" class="headerlink" title="router配置里引入component组件的时候必须添加.vue后缀"></a>router配置里引入component组件的时候必须添加.vue后缀</h2><h2 id="Element表单验证报红问题"><a href="#Element表单验证报红问题" class="headerlink" title="Element表单验证报红问题"></a>Element表单验证报红问题</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 报错信息如下</span><span class="token comment">// Property 'validate' does not exist on type 'Vue | Element | Vue[] | Element[]'.</span><span class="token comment">// Property 'validate' does not exist on type 'Vue'.</span><span class="token comment">// 解决办法</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Form <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"element-ui"</span><span class="token punctuation">;</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>loginForm <span class="token keyword">as</span> Form <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">valid<span class="token operator">:</span> boolean</span> <span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 如果不引入Form，把Form换成any也可以，但是typescript会报警告⚠</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用axios封装的请求，然后解构请求结果报错<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 报错信息</span><span class="token comment">// Property 'XXX' does not exist on type 'AxiosResponse&lt;any>'</span><span class="token comment">// 解决办法</span><span class="token comment">// 新建axios.d.ts文案，添加如下内容，重启项目</span><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span>declare module <span class="token string">'axios'</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">interface</span> <span class="token class-name">AxiosInstance</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>any<span class="token operator">></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>@typescript<span class="token operator">/</span>esline 报错 xxx_x is not <span class="token keyword">in</span> camel <span class="token keyword">case</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="关闭esline驼峰校验"><a href="#关闭esline驼峰校验" class="headerlink" title="关闭esline驼峰校验"></a>关闭esline驼峰校验</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 在.eslinetrc.js中配置如下：</span>rules<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span>  <span class="token string">'@typescript-eslint/camelcase'</span><span class="token operator">:</span> <span class="token string">'off'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="TS使用”require”报错"><a href="#TS使用”require”报错" class="headerlink" title="TS使用”require”报错"></a>TS使用”require”报错</h2></li><li>提示报错信息：Cannot find name ‘require’. Do you need to install type definitions for node? Try ‘npm i –save-dev @types/node’</li><li>解决方案：<ul><li>1.安装@types/node，npm i –save-dev @types/node；</li><li>2.在tsconfig.json中的compilerOptions中的types添加”node”；</li><li>3.在使用require前面添加declare var require:any<h2 id="TS使用”this-xxx”报错"><a href="#TS使用”this-xxx”报错" class="headerlink" title="TS使用”this.xxx”报错"></a>TS使用”this.xxx”报错</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 使用"this.$router.push("/xxx")" => Property '$router' does not exist on type 'Experiment'.</span><span class="token comment">// 解决：</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"/xxx"</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span><span class="token parameter">mainVideo</span> <span class="token operator">=></span> Property <span class="token string">'clientWidth'</span> does not exist on type <span class="token string">'Vue | Element | Vue[] | Element[]'</span><span class="token punctuation">.</span><span class="token comment">// Property 'clientWidth' does not exist on type 'Vue'</span><span class="token comment">// 解决：</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>mainVideo <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span>clientWidth<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3的setup函数</title>
      <link href="/2020/12/30/Vue3%E7%9A%84setup%E5%87%BD%E6%95%B0/"/>
      <url>/2020/12/30/Vue3%E7%9A%84setup%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="setup函数"><a href="#setup函数" class="headerlink" title="setup函数"></a>setup函数</h1><ul><li>setup用于定义变量和方法</li><li>ref用于声明简单数据类型，如：String Number Boolean</li><li>reactive用来声明复杂数据类型，如：Array Objec</li><li>是使用Composition API的入口<ul><li>Composition API的主要思想，将它们定义为从新的setup函数返回的JavaScript变量，而不是从组件的功能（如：data、methods、computed等）定义为对象的属性</li><li>Composition API 代替 Vue Mixins （解决命名冲突、隐式依赖、代码重用等问题）</li></ul></li><li>在生命周期beforeCreate前被调用（执行setup时，组件实例尚未被创建）</li><li>可以返回一个对象，这个对象的属性会被合并到渲染上下文，可以在模板中直接使用</li><li>也可以返回一个渲染函数，如：return () =&gt; h(‘div’, [count.value, object.foo])</li><li>在setup中没有this</li><li>接收props作为第一个参数，如果props为对象，可通过watchEffect监视其变化</li><li>接收context作为第二个参数，这个对象包含attrs、slots、emit三个属性</li><li>context非响应式，可以直接解构使用 setup(props,{attr,slots,emit}){}</li><li>执行setup函数时可以访问：props、attrs、slots、emit，不可以访问：data、computed、methods<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ref<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> toRefs<span class="token punctuation">,</span> isRef <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">export</span> defalut <span class="token punctuation">&#123;</span>  props<span class="token operator">:</span><span class="token punctuation">&#123;</span>    title<span class="token operator">:</span> String  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">setup</span><span class="token punctuation">(</span> <span class="token parameter">props<span class="token punctuation">,</span> context</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 不能直接解构</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> title <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">toRefs</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// 声明简单数据类型</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>valeu<span class="token punctuation">)</span><span class="token punctuation">;</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 判断是否为ref创建出来的对象</span>    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 声明复杂数据类型</span>    <span class="token keyword">let</span> <span class="token function-variable function">addOne</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      count<span class="token punctuation">.</span>value<span class="token operator">++</span> <span class="token comment">// 想改变或获取值 必须 xxx.value</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// Attribute(非响应式对象)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span>    <span class="token comment">// 插槽(非响应式对象)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>slots<span class="token punctuation">)</span>    <span class="token comment">// 触发时间（方法）</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span>emit<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 必须返回 模板中才能使用</span>      count<span class="token punctuation">,</span> arr<span class="token punctuation">,</span> addOne    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
            <tag> setup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序通知推送</title>
      <link href="/2020/12/29/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%80%9A%E7%9F%A5%E6%8E%A8%E9%80%81/"/>
      <url>/2020/12/29/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%80%9A%E7%9F%A5%E6%8E%A8%E9%80%81/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序推送通知方式（订阅消息-amp-消息模板）"><a href="#小程序推送通知方式（订阅消息-amp-消息模板）" class="headerlink" title="小程序推送通知方式（订阅消息&amp;消息模板）"></a>小程序推送通知方式（订阅消息&amp;消息模板）</h1><h2 id="小程序发送小程序的订阅消息-推送到服务通知"><a href="#小程序发送小程序的订阅消息-推送到服务通知" class="headerlink" title="小程序发送小程序的订阅消息(推送到服务通知)"></a>小程序发送小程序的订阅消息(推送到服务通知)</h2><ul><li>准备1：登录小程序-功能-订阅消息（未开通的，需要先开通）-从模板库中添加消息模板并获得模板ID（也可以申请消息模板）</li><li>步骤：<ul><li>获取下发权限 （用户发生点击行为或者发起支付回调后）— 调用接口下发订阅消息</li><li>获取js_code</li><li>根据js_code获取OpenId和UnionID</li><li>获取小程序access_token</li><li>根据access_token调用接口下发订阅消息</li></ul></li><li>参考的开发文档<br>  -<a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/subscribe-message/wx.requestSubscribeMessage.html">获取下发权限</a><br>  -<a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/subscribe-message/subscribeMessage.send.html">调用接口下发订阅消息</a><h2 id="小程序调用公众号的消息模板-推送到微信公众号"><a href="#小程序调用公众号的消息模板-推送到微信公众号" class="headerlink" title="小程序调用公众号的消息模板(推送到微信公众号)"></a>小程序调用公众号的消息模板(推送到微信公众号)</h2></li><li>准备1：注册微信开放平台，将微信公众号和小程序绑定到微信开放平台（目的：获取UnionID）</li><li>准备2：微信公众号添加消息模板功能，从模板库中添加消息模板并获得模板ID，也可以申请模板</li><li>步骤：(根据用户唯一的UnionID去寻找用户在公众号的OpenId,再根据微信公众号的OpenId发送通知到相应的用户)<ul><li>批量获取微信公众号关注的用户Openid</li><li>根据用户Openid获取微信公众号关注的用户UnionID</li><li>将微信公众号关注的用户Openid、UnionID保存到数据库</li><li>两种方式获取小程序用户UnionID<ul><li>根据js_code获取小程序的OpenId和UnionID</li><li>根据小程序的OpenId、access_token获取用户信息UserInfo，根据UserInfo的encryptedData字段解密出小程序的UnionID（不推荐）</li></ul></li><li>根据小程序appid、secret获取小程序access_token</li><li>根据小程序的UnionID去数据库匹配用户在公众号的OpenId</li><li>根据用户在公众号的OpenId、access_token发送消息模板到对应用户</li></ul></li><li>参考的开发文档<ul><li><a href="https://open.weixin.qq.com/">微信开放平台登录</a></li><li><a href="https://mp.weixin.qq.com/">微信公众号登录</a></li><li><a href="https://mp.weixin.qq.com/">微信小程序登录</a></li><li><a href="https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Template_Message_Interface.html">公众号消息模板接口</a></li><li><a href="https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Receiving_event_pushes.html">公众号关注/取消关注事件</a>：微信公众号-开发-基本配置-服务器配置-启用</li><li><a href="https://developers.weixin.qq.com/doc/offiaccount/Basic_Information/Access_Overview.html">服务器配置</a></li><li>[公众号获取用户列表/获取OpenId]<a href="https://developers.weixin.qq.com/doc/offiaccount/User_Management/Getting_a_User_List.html">https://developers.weixin.qq.com/doc/offiaccount/User_Management/Getting_a_User_List.html</a>)</li><li><a href="https://developers.weixin.qq.com/doc/offiaccount/User_Management/Get_users_basic_information_UnionID.html#UinonId">公众号获取用户基本信息(UnionID)</a></li><li><a href="https://developers.weixin.qq.com/doc/offiaccount/Basic_Information/Get_access_token.html">公众号获取Access token</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html">小程序获取js_code</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/login/auth.code2Session.html">小程序获取OpenId和UnionID/获取code2Session</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html">小程序获取access_token</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/user-info/wx.getUserInfo.html">小程序获取用户信息UserInfo</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html#%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95">UserInfo解密算法解密</a></li><li><a href="https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Template_Message_Interface.html#5">公众号消息模板发送</a></li></ul></li></ul><h2 id="下发统一服务消息（官方不支持了）"><a href="#下发统一服务消息（官方不支持了）" class="headerlink" title="下发统一服务消息（官方不支持了）"></a>下发统一服务消息（官方不支持了）</h2><ul><li>下发小程序和公众号统一的服务消息（需要填小程序模板id和公众号模板id）<h2 id="小程序消息模板（已废弃）"><a href="#小程序消息模板（已废弃）" class="headerlink" title="小程序消息模板（已废弃）"></a>小程序消息模板（已废弃）</h2><h2 id="预备知识："><a href="#预备知识：" class="headerlink" title="预备知识："></a>预备知识：</h2></li><li>小程序openid：小程序用户的唯一id</li><li>公众号openid：公众号用户的唯一id</li><li>unionid：同一用户，对同一个微信开放平台下的不同应用，unionid是相同的</li><li>准备：<ol><li>将小程序与公众号绑定（绑定后才可获取unionid），官方文档：小程序与公众号绑定获取unionid</li><li>接入微信公众平台开发，也就是给服务号配置一下开发者服务器。当有用户关注/取消服务号时，微信服务器会推送关注/取消的事件给我们的服务器。官方文档：接入微信公众平台开发</li><li>获取公众号用户列表，即所有用户的公众号openid。官方文档：获取公众号用户列表</li><li>通过公众号openid获取用户的unionid。官方文档：通过公众号openid获取unionid</li><li>推送服务号消息。官方文档：公众号发送模版消息</li></ol><ul><li>注意：</li></ul><ol start="6"><li>在上述的一些接口中，需要获取access_token。小程序和公众号的access_token是不同的，需要用各自的appid和secret去获取。</li><li>access_token每天只能获取200次，有效期是7200秒。所以应该把它加入缓存，而不是每次都去获取新的access_token。<h2 id="开始开发"><a href="#开始开发" class="headerlink" title="开始开发"></a>开始开发</h2></li></ol></li><li>将小程序用户与公众号用户关联：<ul><li>小程序用户openid→unionid←公众号用户openid</li><li>要想将小程序与公众号用户关联，第一件事就是获取用户的unionid。</li><li>我们可以在两种情况下获取用户的unionid：</li></ul></li><li>一、如果用户已经关注了公众号，那么在用户登录的时候，就可以获取到unionid</li><li>二、如果用户没有关注公众号，那么得让前端调用wx.getUserInfo，把加密数据给后端解密拿到unionid。<ul><li>解密需要session_key，而session_key又有有效期，得注意它过期的情况。</li><li>当用户关注公众号时，微信会推送事件给我们（本文准备条件的第2条）。</li><li>通过关注事件，我们可以拿到用户的公众号openid，再获取unionid（本文准备条件的第4条）。拿到unionid后，去数据库查询这个unionid的用户，并把公众号openid保存。</li><li>但是，还有两个情况没有考虑到：<ol><li>在我们开发之前，已经关注了公众号的用户没有去关联<ul><li>解决方案：</li><li>获取微信公众号的用户列表，再依次获取用户unionid（本文准备条件的第3、4条）。注意，此操作非常耗时。</li></ul></li><li>用户先关注了公众号，但是从来没用过小程序（数据库里没有unionid，导致无法关联）<ul><li>解决方案：</li><li>新建一张表，把这个公众号用户先记录下来。当小程序用户登录时，先检查一遍这张表尝试关联。</li></ul></li></ol></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一份参考用的axios封装</title>
      <link href="/2020/11/19/%E4%B8%80%E4%BB%BD%E5%8F%82%E8%80%83%E7%94%A8%E7%9A%84axios%E5%B0%81%E8%A3%85/"/>
      <url>/2020/11/19/%E4%B8%80%E4%BB%BD%E5%8F%82%E8%80%83%E7%94%A8%E7%9A%84axios%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="一份拷贝即用的axios封装代码"><a href="#一份拷贝即用的axios封装代码" class="headerlink" title="一份拷贝即用的axios封装代码"></a>一份拷贝即用的axios封装代码</h1><h2 id="安装Axios"><a href="#安装Axios" class="headerlink" title="安装Axios"></a>安装Axios</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">npm install axios<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> axios<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> AxiosRequestConfig<span class="token punctuation">,</span> AxiosResponse <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token keyword">const</span> <span class="token function-variable function">showStatus</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status<span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">''</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token number">400</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'请求错误(400)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">401</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'未授权，请重新登录(401)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">403</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'拒绝访问(403)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">404</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'请求出错(404)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">408</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'请求超时(408)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">500</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'服务器错误(500)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">501</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'服务未实现(501)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">502</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'网络错误(502)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">503</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'服务不可用(503)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">504</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'网络超时(504)'</span>      <span class="token keyword">break</span>    <span class="token keyword">case</span> <span class="token number">505</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token string">'HTTP版本不受支持(505)'</span>      <span class="token keyword">break</span>    <span class="token keyword">default</span><span class="token operator">:</span>      message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">连接出错(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>status<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)!</span><span class="token template-punctuation string">`</span></span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>message<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">，请检查网络或联系管理员！</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 联调</span>  baseURL<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">'production'</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">'/apis'</span><span class="token punctuation">,</span>  headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    get<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'application/x-www-form-urlencoded;charset=utf-8'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    post<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'application/json;charset=utf-8'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 是否跨站点访问控制请求</span>  withCredentials<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  timeout<span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>  transformRequest<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token keyword">return</span> data  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token function">validateStatus</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 使用async-await，处理reject情况较为繁琐，所以全部返回resolve，在业务代码中处理异常</span>    <span class="token keyword">return</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  transformResponse<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data <span class="token operator">===</span> <span class="token string">'string'</span> <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'&#123;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> data  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 请求拦截器</span>service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">config<span class="token operator">:</span> AxiosRequestConfig</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> config<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 错误抛到业务代码</span>    error<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    error<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">'服务器异常，请联系管理员！'</span>    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 响应拦截器</span>service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response<span class="token operator">:</span> AxiosResponse</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> status <span class="token operator">=</span> response<span class="token punctuation">.</span>status    <span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">&lt;</span> <span class="token number">200</span> <span class="token operator">||</span> status <span class="token operator">>=</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 处理http错误，抛到业务代码</span>        msg <span class="token operator">=</span> <span class="token function">showStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> response<span class="token punctuation">.</span>data <span class="token operator">===</span> <span class="token string">'string'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            response<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>msg<span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg <span class="token operator">=</span> msg        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> response<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 错误抛到业务代码</span>    error<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    error<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">'请求超时或服务器异常，请检查网络或联系管理员！'</span>    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一些关于Axios的注释"><a href="#一些关于Axios的注释" class="headerlink" title="一些关于Axios的注释"></a>一些关于Axios的注释</h2><ul><li>请求方法应为小写：method: get/post/put/delete在axios内部全部转为小写</li><li>Axios实现原理是基于 XMLHttpRequest 详细可见’axios/lib/adapters/xhr.js’#20</li><li>‘axios/lib/adapters/xhr.js’ -&gt; 浏览器请求模块</li><li>‘axios/lib/cancel/Cancel.js’ -&gt; 取消请求模块</li><li>‘axios/lib/core/Axios.js’ -&gt; 发送请求模块</li><li>‘axios/Defaults.js’ -&gt; 默认配置模块</li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页安全策略---CSP</title>
      <link href="/2020/11/18/%E7%BD%91%E9%A1%B5%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5---CSP/"/>
      <url>/2020/11/18/%E7%BD%91%E9%A1%B5%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5---CSP/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Content Security Policy （网页安全策略或内容安全策略，简称 CSP)，主要用于检测并削弱某些特定类型的攻击，如跨站脚本(xss)、数据注入攻击等，相当于是让浏览器自动禁止外部注入恶意脚本</p></li><li><p>CSP的实质就是白名单制度，开发者明确告诉客户端，哪些外部资源可以加载和执行，它的实现和执行全部由浏览器完成，开发者只需要提供配置</p></li><li><p>两种启用CSP方式</p><ul><li>①通过HTTP头部信息的Content-Security-Policy字段添加指定策略<pre class="line-numbers language-js" data-language="js"><code class="language-js">Content<span class="token operator">-</span>Security<span class="token operator">-</span>Policy<span class="token operator">:</span> script<span class="token operator">-</span>src <span class="token string">'self'</span><span class="token punctuation">;</span> boject<span class="token operator">-</span>src <span class="token string">'none'</span><span class="token punctuation">;</span> style<span class="token operator">-</span>src cdn<span class="token punctuation">.</span>example<span class="token punctuation">.</span>org third<span class="token operator">-</span>party<span class="token punctuation">.</span>org<span class="token punctuation">;</span> child<span class="token operator">-</span>src https<span class="token operator">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>②通过网页的<meta>标签<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">'Content-Security-Policy'</span> content<span class="token operator">=</span><span class="token string">"script-src 'self'; boject-src 'none'; style-src cdn.example.org third-party.org; child-src https:"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><ul><li>以上代码的配置信息：</li><li>脚本：只信任当前域名</li><li>标签，不信任任何URL，即不加载任何资源</li><li>样式表：只信任cdn.example.org third-party.org</li><li>框架(frame)：必须使用HTTPS协议加载</li><li>其他资源：没有限制</li><li>资源限制选项<ul><li>script-src: 外部脚本</li><li>style-src: 样式表</li><li>img-src: 图片</li><li>media-src: 媒体文件</li><li>font-src: 字体文件</li><li>object-src: 插件，如Flash</li><li>child-src: 框架</li><li>frame-ancestors: 嵌入的外部资源，如：frame、iframe</li><li>content-src: HTTP连接（通过XHR、WebSockets）</li><li>worker-src: worker脚本</li><li>manifest-src: manifest文件</li></ul></li><li>default-src 选项<ul><li>用来限制各个选项的默认值<pre class="line-numbers language-js" data-language="js"><code class="language-js">Content<span class="token operator">-</span>Security<span class="token operator">-</span>Policy<span class="token operator">:</span> <span class="token keyword">default</span><span class="token operator">-</span>src <span class="token string">'self'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li>以上代码限制所有资源只能从当前域名加载</li></ul></li><li><p>参考</p><ul><li><a href="http://www.ruanyifeng.com/blog/2016/09/csp.html">http://www.ruanyifeng.com/blog/2016/09/csp.html</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> CSP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github搜索技巧</title>
      <link href="/2020/11/12/Github%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/"/>
      <url>/2020/11/12/Github%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="1-搜索关键字"><a href="#1-搜索关键字" class="headerlink" title="1.搜索关键字"></a>1.搜索关键字</h2><ul><li>Vue in:name 表示在项目名称中搜索 Vue 关键字</li><li>Vue in:readme 表示在项目readme中搜索 Vue 关键字</li><li>Vue in:description 表示在 项目描述中搜索 Vue 关键字</li><li>Vue in:USERNAME 表示在USERNAME中搜索 Vue 关键字</li><li>Vue in:ORGNAME 表示在组织或机构名中搜索 Vue 关键字<h2 id="2-按照项目大小搜索"><a href="#2-按照项目大小搜索" class="headerlink" title="2.按照项目大小搜索"></a>2.按照项目大小搜索</h2></li><li>size:&gt;=5000 Vue 搜索大小超过5M 的包含 Vue 关键字项目<h2 id="3-按照Stars量搜索"><a href="#3-按照Stars量搜索" class="headerlink" title="3.按照Stars量搜索"></a>3.按照Stars量搜索</h2></li><li>stars:&gt;1000 搜索Stars量大于1000的项目</li><li>Vue stars:&gt;1000 搜索Stars量大于1000的Vue项目</li><li>language:Vue stars:&gt;10000搜索开发语言为Vue且stars数大于10000的所有项目<h2 id="4-按照语言搜索"><a href="#4-按照语言搜索" class="headerlink" title="4.按照语言搜索"></a>4.按照语言搜索</h2></li><li>language:Vue location:china 搜索国内的开发者，语言限定为Vue<h2 id="5-Github高级搜索"><a href="#5-Github高级搜索" class="headerlink" title="5.Github高级搜索"></a>5.Github高级搜索</h2></li><li><a href="https://github.com/search/advanced">https://github.com/search/advanced</a><h2 id="6-每天-每周-每月热门"><a href="#6-每天-每周-每月热门" class="headerlink" title="6.每天/每周/每月热门"></a>6.每天/每周/每月热门</h2></li><li><a href="https://github.com/trending">https://github.com/trending</a><h2 id="7-git如何统计代码行数"><a href="#7-git如何统计代码行数" class="headerlink" title="7.git如何统计代码行数"></a>7.git如何统计代码行数</h2></li><li>git中有个中自带的查询提交行数的命令<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> log --since<span class="token operator">=</span><span class="token number">2018</span>-01-01 --until<span class="token operator">=</span><span class="token number">2018</span>-12-31 --author<span class="token operator">=</span><span class="token string">"like"</span> --pretty<span class="token operator">=</span>tformat: --numstat <span class="token operator">|</span> <span class="token function">gawk</span> <span class="token string">'&#123; add += $1 ; subs += $2 ; loc += $1 - $2 &#125; END &#123; printf "added lines: %s removed lines : %s total lines: %s\n",add,subs,loc &#125;'</span> -<span class="token comment"># 设置对应时间段，--author后面改成自己的名字或空</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一个无聊的canvas</title>
      <link href="/2020/11/11/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%AA%E6%97%A0%E8%81%8A%E7%9A%84canvas/"/>
      <url>/2020/11/11/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%AA%E6%97%A0%E8%81%8A%E7%9A%84canvas/</url>
      
        <content type="html"><![CDATA[<h2 id="先看效果"><a href="#先看效果" class="headerlink" title="先看效果"></a>先看效果</h2><ul><li><p>静态效果<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/fish.png" alt="flying-fish"></p></li><li><p>GIF<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/fish.gif" alt="flying-fish-gif"></p></li></ul><h2 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a>代码如下</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- index.html --></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">*</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#jsi-flying-fish-container</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>      <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>      <span class="token property">z-index</span><span class="token punctuation">:</span> 999<span class="token punctuation">;</span>      <span class="token property">bottom</span><span class="token punctuation">:</span> 240px<span class="token punctuation">;</span>      <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>      <span class="token property">max-height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.bootcdn.net/ajax/libs/jquery/2.2.0/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jsi-flying-fish-container<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1221<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>241<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./fish.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// fish.js</span><span class="token keyword">var</span> <span class="token constant">RENDERER</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token constant">POINT_INTERVAL</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>    <span class="token constant">FISH_COUNT</span> <span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>    <span class="token constant">MAX_INTERVAL_COUNT</span> <span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>    <span class="token constant">INIT_HEIGHT_RATE</span> <span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>    <span class="token constant">THRESHOLD</span> <span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>    <span class="token function-variable function">init</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reconstructMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bindEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">setParameters</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$window <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$container <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#jsi-flying-fish-container'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$canvas <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;canvas />'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$canvas<span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>points <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fishes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>watchIds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">createSurfacePoints</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> count <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">POINT_INTERVAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pointInterval <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token punctuation">(</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SURFACE_POINT</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SURFACE_POINT</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> i <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pointInterval<span class="token punctuation">)</span><span class="token punctuation">,</span>                previous <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            point<span class="token punctuation">.</span><span class="token function">setPreviousPoint</span><span class="token punctuation">(</span>previous<span class="token punctuation">)</span><span class="token punctuation">;</span>            previous<span class="token punctuation">.</span><span class="token function">setNextPoint</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">reconstructMethods</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>watchWindowSize <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">watchWindowSize</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>jdugeToStopResize <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">jdugeToStopResize</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>startEpicenter <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startEpicenter</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>moveEpicenter <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveEpicenter</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>reverseVertical <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reverseVertical</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>render <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">setup</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>watchIds<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>intervalCount <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">MAX_INTERVAL_COUNT</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fishCount <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">FISH_COUNT</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">500</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">500</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$canvas<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>width <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> height <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>reverse <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FISH</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createSurfacePoints</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">watchWindowSize</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">clearTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tmpWidth <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tmpHeight <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>watchIds<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>jdugeToStopResize<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">WATCH_INTERVAL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">clearTimer</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>watchIds<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">clearTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>watchIds<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">jdugeToStopResize</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> width <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            stopped <span class="token operator">=</span> <span class="token punctuation">(</span>width <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tmpWidth <span class="token operator">&amp;&amp;</span> height <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tmpHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tmpWidth <span class="token operator">=</span> width<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tmpHeight <span class="token operator">=</span> height<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>stopped<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">bindEvent</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>watchWindowSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startEpicenter<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>moveEpicenter<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reverseVertical<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">getAxis</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> offset <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            x <span class="token operator">:</span> event<span class="token punctuation">.</span>clientX <span class="token operator">-</span> offset<span class="token punctuation">.</span>left <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            y <span class="token operator">:</span> event<span class="token punctuation">.</span>clientY <span class="token operator">-</span> offset<span class="token punctuation">.</span>top <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$window<span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">startEpicenter</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>axis <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAxis</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">moveEpicenter</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> axis <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAxis</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>axis<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>axis <span class="token operator">=</span> axis<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateEpicenter</span><span class="token punctuation">(</span>axis<span class="token punctuation">.</span>x<span class="token punctuation">,</span> axis<span class="token punctuation">.</span>y<span class="token punctuation">,</span> axis<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>axis<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>axis <span class="token operator">=</span> axis<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">generateEpicenter</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> velocity</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">THRESHOLD</span> <span class="token operator">||</span> y <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">THRESHOLD</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> index <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>x <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pointInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> index <span class="token operator">>=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">interfere</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> velocity<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">reverseVertical</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>reverse <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>reverse<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverseVertical</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">controlStatus</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">updateSelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">updateNeighbors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fishCount<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">--</span><span class="token keyword">this</span><span class="token punctuation">.</span>intervalCount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>intervalCount <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">MAX_INTERVAL_COUNT</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FISH</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">render</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">controlStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'#0184b2'</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>fishes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>globalCompositeOperation <span class="token operator">=</span> <span class="token string">'xor'</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reverse <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reverse <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">SURFACE_POINT</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">renderer<span class="token punctuation">,</span> x</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>renderer <span class="token operator">=</span> renderer<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">SURFACE_POINT</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token constant">SPRING_CONSTANT</span> <span class="token operator">:</span> <span class="token number">0.03</span><span class="token punctuation">,</span>    <span class="token constant">SPRING_FRICTION</span> <span class="token operator">:</span> <span class="token number">0.9</span><span class="token punctuation">,</span>    <span class="token constant">WAVE_SPREAD</span> <span class="token operator">:</span> <span class="token number">0.3</span><span class="token punctuation">,</span>    <span class="token constant">ACCELARATION_RATE</span> <span class="token operator">:</span> <span class="token number">0.01</span><span class="token punctuation">,</span>    <span class="token function-variable function">init</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>initHeight <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">INIT_HEIGHT_RATE</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>initHeight<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>force <span class="token operator">=</span> <span class="token punctuation">&#123;</span>previous <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> next <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">setPreviousPoint</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">previous</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>previous <span class="token operator">=</span> previous<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">setNextPoint</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">interfere</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">y<span class="token punctuation">,</span> velocity</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">ACCELARATION_RATE</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">-</span> y<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>velocity<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">updateSelf</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fy <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">SPRING_CONSTANT</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>initHeight <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fy <span class="token operator">*=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">SPRING_FRICTION</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fy<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">updateNeighbors</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>previous<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">.</span>previous <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">WAVE_SPREAD</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>previous<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">WAVE_SPREAD</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">render</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>previous<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>previous<span class="token punctuation">.</span>height <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">.</span>previous<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>previous<span class="token punctuation">.</span>fy <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">.</span>previous<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token punctuation">.</span>height <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token punctuation">.</span>fy <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>force<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        context<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">FISH</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">renderer</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>renderer <span class="token operator">=</span> renderer<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">FISH</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token constant">GRAVITY</span> <span class="token operator">:</span> <span class="token number">0.4</span><span class="token punctuation">,</span>    <span class="token function-variable function">init</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.5</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>width <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">THRESHOLD</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">THRESHOLD</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>previousY <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>vx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>vy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token number">6</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token number">9</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>vy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.05</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>isOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>theta <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>phi <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">getRandomValue</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> min <span class="token operator">+</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">reverseVertical</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>isOut <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isOut<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ay <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">controlStatus</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>previousY <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vx<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vy<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>vy <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ay<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">INIT_HEIGHT_RATE</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>vy <span class="token operator">-=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GRAVITY</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>isOut <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isOut<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>ay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>isOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">INIT_HEIGHT_RATE</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>vy <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">GRAVITY</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>isOut <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isOut<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>ay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.05</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>isOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isOut<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>theta <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">20</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>theta <span class="token operator">%=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>phi <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>phi <span class="token operator">%=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token function">generateEpicenter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">THRESHOLD</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>previousY<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vx <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>width <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">THRESHOLD</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vx <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token constant">THRESHOLD</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function-variable function">render</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        context<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">atan2</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vy<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.9</span> <span class="token operator">+</span> <span class="token number">0.2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>theta<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">quadraticCurveTo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">quadraticCurveTo</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">quadraticCurveTo</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">quadraticCurveTo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">3</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>phi<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>reverse <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        context<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">controlStatus</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token constant">RENDERER</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Canvas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Element-Ui的select二次封装的下拉搜索组件</title>
      <link href="/2020/11/09/%E5%9F%BA%E4%BA%8EElement-Ui%E7%9A%84select%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85%E7%9A%84%E4%B8%8B%E6%8B%89%E6%90%9C%E7%B4%A2%E7%BB%84%E4%BB%B6/"/>
      <url>/2020/11/09/%E5%9F%BA%E4%BA%8EElement-Ui%E7%9A%84select%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85%E7%9A%84%E4%B8%8B%E6%8B%89%E6%90%9C%E7%B4%A2%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="少了罗嗦，直接看代码"><a href="#少了罗嗦，直接看代码" class="headerlink" title="少了罗嗦，直接看代码"></a>少了罗嗦，直接看代码</h2><ul><li>注意代码不能直接使用，只是提供一种封装思路，其中 dSearchList 及样式需要自己重新写, dCountryList 来自 dropListMixin</li><li>还有很多方法并未加进来，可根据实际自行添加<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// select/index.vue</span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>el<span class="token operator">-</span>select      <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"value"</span>      <span class="token operator">:</span>placeholder<span class="token operator">=</span><span class="token string">"placeholder"</span>      <span class="token operator">:</span>filterable<span class="token operator">=</span><span class="token string">"true"</span>      <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">"customStyle"</span>      <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"customClass"</span>      <span class="token operator">:</span>remote<span class="token operator">=</span><span class="token string">"true"</span>      <span class="token operator">:</span>size<span class="token operator">=</span><span class="token string">"size"</span>      <span class="token operator">:</span>remote<span class="token operator">-</span>method<span class="token operator">=</span><span class="token string">"dSearchList('countryList')"</span>      <span class="token operator">:</span>loading<span class="token operator">=</span><span class="token string">"dLoading"</span>      <span class="token operator">:</span>clearable<span class="token operator">=</span><span class="token string">"true"</span>      @input<span class="token operator">=</span><span class="token string">"onChange($event)"</span>      @change<span class="token operator">=</span><span class="token string">"(val) => onSelectChange(val)"</span>    <span class="token operator">></span>      <span class="token operator">&lt;</span>el<span class="token operator">-</span>option        v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"item in dCountryList"</span>        <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"item[optionKey]"</span>        <span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"item[optionLabel]"</span>        <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"item[optionValue]"</span>      <span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"d-f f-jc-sb"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>code <span class="token operator">||</span> <span class="token string">""</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>          <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">""</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>          <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> item<span class="token punctuation">.</span>numCode <span class="token operator">||</span> <span class="token string">""</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>option<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>select<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> dropListMixin <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@/mixins/drop_list_mixin"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  mixins<span class="token operator">:</span> <span class="token punctuation">[</span>dropListMixin<span class="token punctuation">]</span><span class="token punctuation">,</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    value<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    placeholder<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"请输入"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    customStyle<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"width: 100%;"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    customClass<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    clearable<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    size<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"small"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    optionKey<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"code"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    optionLabel<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    optionValue<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> String<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"code"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dInit</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"countryList"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">onSelectChange</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">"selectChange"</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token comment">//   使用示例 </span>  <span class="token operator">&lt;</span>country<span class="token operator">-</span>select <span class="token operator">:</span>size<span class="token operator">=</span><span class="token string">"medium"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"formData.countryCode"</span> @selectChange<span class="token operator">=</span><span class="token string">"val => onCountrySelect(val,'countryCode')"</span> <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>country<span class="token operator">-</span>select<span class="token operator">></span> <span class="token comment">//   使用示例 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Element-ui </tag>
            
            <tag> UI框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于js中对小数的计算</title>
      <link href="/2020/10/03/%E5%85%B3%E4%BA%8Ejs%E4%B8%AD%E5%AF%B9%E5%B0%8F%E6%95%B0%E7%9A%84%E8%AE%A1%E7%AE%97/"/>
      <url>/2020/10/03/%E5%85%B3%E4%BA%8Ejs%E4%B8%AD%E5%AF%B9%E5%B0%8F%E6%95%B0%E7%9A%84%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><ul><li><p>在js的小数计算中，0.1+0.2=0.30000000000000004</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span><span class="token keyword">let</span> num2 <span class="token operator">=</span> <span class="token number">0.2</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> num1 <span class="token operator">+</span> num2 <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 0.30000000000000004 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h1></li><li><p>为什么出现这样的结果，我们把小数转换成计算机能读得懂的二进制就比较明了了</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 0.1 -> 0.1.toString(2) -> 0.0001100110011001100110011001100110011001100110011001101(无限循环…)</span><span class="token comment">// 0.2 -> 0.1.toString(2) -> 0.001100110011001100110011001100110011001100110011001101(无限循环…)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>双精度浮点数的小数部分最多支持 52 位，所以两者相加之后得到这么一串 </p><ul><li>0.0100110011001100110011001100110011001100110011001100 </li></ul></li><li><p>因浮点数小数位的限制而截断的二进制数字，这时候，我们再把它转换为十进制，就成了 0.30000000000000004</p></li></ul><h1 id="如何处理此类问题？"><a href="#如何处理此类问题？" class="headerlink" title="如何处理此类问题？"></a>如何处理此类问题？</h1><ul><li>为了避免产生精度差异，我们要把需要计算的数字乘以 10 的 n 次幂，换算成计算机能够精确识别的整数，然后再除以 10 的 n 次幂，大部分编程语言都是这样处理精度差异的，我们就借用过来处理一下 JS 中的浮点数精度误差。</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function-variable function">formatNum</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">num<span class="token punctuation">,</span> digit</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> m <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span> <span class="token number">10</span><span class="token punctuation">,</span> digit <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span> num <span class="token operator">*</span> m<span class="token punctuation">,</span> <span class="token number">10</span> <span class="token punctuation">)</span> <span class="token operator">/</span> m<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span><span class="token keyword">let</span> num2 <span class="token operator">=</span> <span class="token number">0.2</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> num1 <span class="token operator">+</span> num2 <span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token function">formatNum</span><span class="token punctuation">(</span> num1 <span class="token operator">+</span> num2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Tips:</span><span class="token comment">// pow() 方法可返回 x 的 y 次幂的值。</span><span class="token comment">// parseInt() 函数可解析一个字符串，并返回一个整数。（第二个参数取值2-36，省略该参数或其值为 0，则数字将以 10 为基础来解析。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用SVG实现边框特效及绘制图形</title>
      <link href="/2020/06/16/%E4%BD%BF%E7%94%A8SVG%E5%AE%9E%E7%8E%B0%E8%BE%B9%E6%A1%86%E7%89%B9%E6%95%88%E5%8F%8A%E7%BB%98%E5%88%B6%E5%9B%BE%E5%BD%A2/"/>
      <url>/2020/06/16/%E4%BD%BF%E7%94%A8SVG%E5%AE%9E%E7%8E%B0%E8%BE%B9%E6%A1%86%E7%89%B9%E6%95%88%E5%8F%8A%E7%BB%98%E5%88%B6%E5%9B%BE%E5%BD%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h2><ul><li><p>SVG 指可伸缩矢量图形 (Scalable Vector Graphics)</p></li><li><p>SVG 用来定义用于网络的基于矢量的图形</p></li><li><p>SVG 使用 XML 格式定义图形</p></li><li><p>SVG 图像在放大或改变尺寸的情况下其图形质量不会有所损失</p></li><li><p>SVG 是万维网联盟的标准</p></li><li><p>SVG 与诸如 DOM 和 XSL 之类的 W3C 标准是一个整体</p><h2 id="SVG绘制矩形和圆角矩形"><a href="#SVG绘制矩形和圆角矩形" class="headerlink" title="SVG绘制矩形和圆角矩形"></a>SVG绘制矩形和圆角矩形</h2></li><li><p>rect:绘制矩形标签;</p></li><li><p>x:矩形的左侧位置,定义矩形到<svg>左侧的距离是Xpx;</p></li><li><p>y:矩形的顶端位置,定义矩形到<svg>顶部的距离是Ypx;</p></li><li><p>rx/ry:是圆角半径;</p></li><li><p>style:</p></li><li><p>fill:填充颜色;</p></li><li><p>fill-opacity:填充颜色透明度;</p></li><li><p>stroke:描边颜色;</p></li><li><p>stroke-Width:描边宽度;</p></li><li><p>stroke-opacity:描边透明度;</p><h2 id="SVG绘制椭圆–"><a href="#SVG绘制椭圆–" class="headerlink" title="SVG绘制椭圆–"></a>SVG绘制椭圆–</h2></li><li><p>ellipse:绘制椭圆标签;</p></li><li><p>cx:定义椭圆中心的X坐标;</p></li><li><p>cy:定义椭圆中心的Y坐标;</p></li><li><p>rx:定义椭圆的水平半径;</p></li><li><p>ry:定义椭圆的垂直半径;</p><h2 id="SVG绘制直线–"><a href="#SVG绘制直线–" class="headerlink" title="SVG绘制直线–"></a>SVG绘制直线–</h2></li><li><p>line:绘制直线标签;</p></li><li><p>x1:直线起始点X坐标;</p></li><li><p>y1:直线起始点Y坐标;</p></li><li><p>x2:直线终止点X坐标;</p></li><li><p>y2:直线终止点Y坐标;</p><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><style>  .svg-main {    width: 200px;  }  svg {    width: 200px;    height: 50px;    margin-bottom: 20px;    background: #444;    cursor: default;  }  rect#shape {    fill: transparent;    stroke: white;    stroke-width: 6px;    stroke-dasharray: 0 500;    stroke-dashoffset: 0;    transition: 0.5s ease;    /* animation:dong 2s ease-in-out infinite alternate;  */  }  svg:hover #shape {    stroke-dasharray: 500 0;    stroke-width: 6px;    stroke: rgb(32, 213, 226);  }  @keyframes dong {    100% {      stroke-dasharray: 500 0;      stroke-width: 6px;      /* stroke-dashoffset:-250;  */      stroke: white;    }  }  rect#one {    fill: transparent;    stroke: yellowgreen;    stroke-width: 6px;    stroke-dasharray: 0 500;    stroke-dashoffset: 250;    animation: dong1 2s ease-in-out infinite alternate;  }  @keyframes dong1 {    100% {      stroke-dasharray: 500 0;      stroke-width: 6px;      /* stroke-dashoffset:0;  */      stroke: greenyellow;    }  }  rect#two {    fill: transparent;    stroke: rgb(233, 43, 43);    stroke-width: 6px;    stroke-dasharray: 200 300;    stroke-dashoffset: 250;    animation: dong2 2s ease-in-out infinite alternate;  }  @keyframes dong2 {    100% {      stroke-dasharray: 200 0;      stroke-width: 6px;      /* stroke-dashoffset:0;  */      stroke: rgb(233, 43, 43);    }  }  rect#three {    fill: transparent;    stroke: rgb(233, 220, 43);    stroke-width: 6px;    stroke-dasharray: 50 450;    stroke-dashoffset: 50;    animation: dong3 2s ease-in-out infinite alternate;  }  rect#threes {    fill: transparent;    stroke: rgb(233, 103, 43);    stroke-width: 6px;    stroke-dasharray: 50 450;    stroke-dashoffset: -200;    animation: dong3 2s ease-in-out infinite alternate;  }  @keyframes dong3 {    100% {      stroke-dasharray: 500 0;      stroke-width: 6px;      /* stroke-dashoffset:-250;  */      stroke: rgb(233, 220, 43);    }  }  rect#four {    fill: transparent;    stroke: skyblue;    stroke-width: 6px;    stroke-dasharray: 50 450;    stroke-dashoffset: 150;    transition: 0.5s ease;    /* animation:dong4 2s ease infinite alternate;  */  }  svg:hover #four {    stroke-dasharray: 250 250;  }  rect#fours {    fill: transparent;    stroke: blue;    stroke-width: 6px;    stroke-dasharray: 50 450;    stroke-dashoffset: 200;    transition: 0.5s ease;    /* animation:dong4s 2s ease infinite alternate;  */  }  svg:hover #fours {    stroke-dasharray: 250 50;  }  @keyframes dong4 {    100% {      stroke-dasharray: 250 250;    }  }  @keyframes dong4s {    100% {      stroke-dasharray: 250 50;    }  }  text {    fill: white;    font-size: 30px;    transition: 0.5s linear;  }  svg:hover text {    fill: rgb(30, 129, 223);  }  svg:hover .four {    fill: rgb(231, 105, 21);  }  #five {    fill: transparent;    stroke: rgb(255, 0, 179);    stroke-width: 6px;    stroke-dasharray: 50 400;    stroke-dashoffset: -75;    stroke-opacity: 0;    animation: dong5 1s linear infinite alternate;  }  @keyframes dong5 {    100% {      stroke-opacity: 1;      stroke: rgb(192, 44, 180);      stroke-dasharray: 50 20;    }  }  #six {    fill: transparent;    stroke: rgb(0, 255, 21);    stroke-width: 6px;    stroke-dasharray: 50 400;    stroke-dashoffset: 50;    animation: dong6 1s linear infinite alternate;  }  @keyframes dong6 {    100% {      stroke: rgb(231, 250, 59);      stroke-dasharray: 20 1;    }  }  rect#svg-border {    fill: transparent;    stroke: white;    stroke-width: 6px;    stroke-dasharray: 0, 200, 0, 50, 0, 200, 0, 50;    stroke-dashoffset: 0;    transition: all .3s ease;  }  svg:hover #svg-border {    stroke-dasharray: 200, 0, 50, 0, 200, 0, 50, 0;    stroke-width: 6px;    stroke: #58bc58;  }</style><main class="">  <svg>    <rect id="shape" height="50" width="200"></rect>    <text x="70" y="35"><a href="###">百度</a></text>  </svg>  <svg>    <rect id="one" height="50" width="200"></rect>  </svg>  <svg>    <rect id="two" height="50" width="200"></rect>  </svg>  <svg>    <rect id="three" height="50" width="200"></rect>    <rect id="threes" height="50" width="200"></rect>  </svg>  <svg>    <rect id="fours" height="50" width="200"></rect>    <rect id="four" height="50" width="200"></rect>    <text class="four" x="70" y="35"><a href="###">淘宝</a></text>  </svg>  <svg>    <rect id="five" height="50" width="200"></rect>  </svg>  <svg>    <rect id="six" height="50" width="200"></rect>  </svg>  <svg>    <rect id="svg-border" height="50" width="200"></rect>    <text x="55" y="35"><a href="###">四边框</a></text>  </svg>  <svg>    <circle cx="100" cy="25" r="20" stroke="orange" stroke-width="6" fill="#ff5" />  </svg>  <svg>    <rect x="25" y="10" width="150" height="30" style="fill:#ccc; stroke:orange; stroke-width:5px;" />  </svg>  <svg>    <rect x="25" y="10" rx="15" ry="15" width="150" height="30"      style="fill:#ccc; stroke:orange; stroke-width:5px; stroke-opacity:.5; fill-opacity:.9;" />  </svg>  <svg >     <line x1="5" y1="5" x2="190" y2="40" style="stroke:rgba(255, 0, 0, .5); stroke-width:5px;" />   </svg>  <svg>     <ellipse cx="100" cy="25" rx="50" ry="15" stroke="orange" stroke-width="5" fill="#000" fill-opacity=".5" />   </svg></main></li></ul><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">body,    html</span> <span class="token punctuation">&#123;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>      <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>      <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>      <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> #696969<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">main</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> #444<span class="token punctuation">;</span>      <span class="token property">cursor</span><span class="token punctuation">:</span> default<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#shape</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 0 500<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s ease<span class="token punctuation">;</span>      <span class="token comment">/* animation:dong 2s ease-in-out infinite alternate;    */</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg:hover #shape</span> <span class="token punctuation">&#123;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 500 0<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>32<span class="token punctuation">,</span> 213<span class="token punctuation">,</span> 226<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 500 0<span class="token punctuation">;</span>        <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>        <span class="token comment">/* stroke-dashoffset:-250;    */</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#one</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> yellowgreen<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 0 500<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 250<span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> dong1 2s ease-in-out infinite alternate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong1</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 500 0<span class="token punctuation">;</span>        <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>        <span class="token comment">/* stroke-dashoffset:0;    */</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> greenyellow<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#two</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 43<span class="token punctuation">,</span> 43<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 200 300<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 250<span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> dong2 2s ease-in-out infinite alternate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong2</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 200 0<span class="token punctuation">;</span>        <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>        <span class="token comment">/* stroke-dashoffset:0;    */</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 43<span class="token punctuation">,</span> 43<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#three</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 220<span class="token punctuation">,</span> 43<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 450<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 50<span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> dong3 2s ease-in-out infinite alternate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#threes</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 103<span class="token punctuation">,</span> 43<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 450<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> -200<span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> dong3 2s ease-in-out infinite alternate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong3</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 500 0<span class="token punctuation">;</span>        <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>        <span class="token comment">/* stroke-dashoffset:-250;    */</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 220<span class="token punctuation">,</span> 43<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#four</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 450<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 150<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s ease<span class="token punctuation">;</span>      <span class="token comment">/* animation:dong4 2s ease infinite alternate;    */</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg:hover #four</span> <span class="token punctuation">&#123;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 250 250<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#fours</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 450<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 200<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s ease<span class="token punctuation">;</span>      <span class="token comment">/* animation:dong4s 2s ease infinite alternate;    */</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg:hover #fours</span> <span class="token punctuation">&#123;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 250 50<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong4</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 250 250<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong4s</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 250 50<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">text</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> 0.5s linear<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg:hover text</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>30<span class="token punctuation">,</span> 129<span class="token punctuation">,</span> 223<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg:hover .four</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>231<span class="token punctuation">,</span> 105<span class="token punctuation">,</span> 21<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#five</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 179<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 400<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> -75<span class="token punctuation">;</span>      <span class="token property">stroke-opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> dong5 1s linear infinite alternate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong5</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke-opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>192<span class="token punctuation">,</span> 44<span class="token punctuation">,</span> 180<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 20<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#six</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 21<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 50 400<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 50<span class="token punctuation">;</span>      <span class="token property">animation</span><span class="token punctuation">:</span> dong6 1s linear infinite alternate<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> dong6</span> <span class="token punctuation">&#123;</span>      <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">stroke</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>231<span class="token punctuation">,</span> 250<span class="token punctuation">,</span> 59<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 20 1<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">rect#svg-border</span> <span class="token punctuation">&#123;</span>      <span class="token property">fill</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 0<span class="token punctuation">,</span> 200<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 50<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 200<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 50<span class="token punctuation">;</span>      <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> all .3s ease<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">svg:hover #svg-border</span> <span class="token punctuation">&#123;</span>      <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 200<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 50<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 200<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 50<span class="token punctuation">,</span> 0<span class="token punctuation">;</span>      <span class="token property">stroke-width</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>      <span class="token property">stroke</span><span class="token punctuation">:</span> #58bc58<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>shape<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>70<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>###<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>one<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>two<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>three<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>threes<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fours<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>four<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>four<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>70<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>###<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>淘宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>five<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>six<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>svg-border<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>###<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>四边框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>orange<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#ff5<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>150<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">fill</span><span class="token punctuation">:</span>#ccc<span class="token punctuation">;</span> <span class="token property">stroke</span><span class="token punctuation">:</span>orange<span class="token punctuation">;</span> <span class="token property">stroke-width</span><span class="token punctuation">:</span>5px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">rx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span> <span class="token attr-name">ry</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>150<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>        <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">fill</span><span class="token punctuation">:</span>#ccc<span class="token punctuation">;</span> <span class="token property">stroke</span><span class="token punctuation">:</span>orange<span class="token punctuation">;</span> <span class="token property">stroke-width</span><span class="token punctuation">:</span>5px<span class="token punctuation">;</span> <span class="token property">stroke-opacity</span><span class="token punctuation">:</span>.5<span class="token punctuation">;</span> <span class="token property">fill-opacity</span><span class="token punctuation">:</span>.9<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>line</span> <span class="token attr-name">x1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">y1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">x2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>190<span class="token punctuation">"</span></span> <span class="token attr-name">y2</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">stroke</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">stroke-width</span><span class="token punctuation">:</span>5px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ellipse</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span> <span class="token attr-name">rx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">ry</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>orange<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#000<span class="token punctuation">"</span></span> <span class="token attr-name">fill-opacity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.5<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SVG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SVG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue简介</title>
      <link href="/2020/05/19/Vue%E7%AE%80%E4%BB%8B/"/>
      <url>/2020/05/19/Vue%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="Vue是什么？"><a href="#Vue是什么？" class="headerlink" title="Vue是什么？"></a>Vue是什么？</h2><ul><li><p>Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。</p><ul><li><p>渐进式：声明式渲染 -&gt; 组件系统 -&gt; 客户端路由 -&gt; 大规模状态管理 -&gt; 构建工具</p></li><li><details>  <summary>声明式渲染 与 响应式触发</summary>    使用模板语法 声明式地将数据渲染进DOM，叫声明式渲染。即DOM状态只是数据状态的一个映射。<p>  如果属性的状态值发生了变化，无须做任何操作，与dom绑定的属性会自动发生改变，叫属性的响应式触发。</p></details></li><li><p>组件系统：将一个大型的界面切分成一个一个更小的可控单元，具有可复用性。</p></li><li><p>客户端路由：针对单页应用而言，需要有路由让一个URL对应到一个应用的状态。</p></li><li><p>状态管理：大型项目设计涉及多个组件之间的数据共享</p></li><li><p>构建工具：Vue官方提供了一个构建工具vue-cli，可以快速安装webPack、loader等等包</p></li></ul></li><li><p>Vue是前端三大框架之一<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/Vue%E6%B8%90%E8%BF%9B%E5%BC%8F%E6%A1%86%E6%9E%B6.jpeg" alt="渐进式框架"><br>渐进式框架</p><h2 id="Vue的发展历程"><a href="#Vue的发展历程" class="headerlink" title="Vue的发展历程"></a>Vue的发展历程</h2></li><li><p>实验阶段（2013 年中到 2014 年 2 月）</p></li><li><p>0.x 阶段 (2014 年 2 月到 2015 年 10 月)</p></li><li><p>1.x 阶段 (2015 年 10 月到 2016 年 9 月) 发行版名称 [Evangelion]</p></li><li><p>2.x 阶段 (2016 年 9 月至今) 发行版名称 [Ghost in the Shell]</p><h2 id="MVVM模式"><a href="#MVVM模式" class="headerlink" title="MVVM模式"></a>MVVM模式</h2></li><li><p>MVVM主要把每个页面分成了M（Model）、V（View）、VM（ViewModel）。VM是其中核心，M和V间的调度者。</p></li><li><p>M: 保存的是每个页面中单独的数据保存在data里。</p></li><li><p>V: 每个页面的html结构。</p></li><li><p>VM，一个调度者，分割了M和V，M和V通过中间的VM关联。V想要保存数据到M，都要有VM做中间处理；V想要渲染页面，需要调用VM，VM从M中取数据。</p></li><li><p>前端中使用MVVM思想，主要让开发更方便，MVVM提供了数据的双向绑定（由VM提供）。<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/1589862758(1).jpg" alt="MVVM模式"></p></li></ul><p>双向数据绑定</p><ul><li>Vue双向数据绑定是通过数据劫持结合发布订阅模式的方式来实现的，也就是说数据和视图同步，数据发生变化，视图跟着变化，视图变化，数据也随之发生改变；</li><li>核心：关于VUE双向数据绑定，其核心是 Object.defineProperty()方法；</li><li>把一个普通的 JavaScript 对象传入 Vue 实例作为 data 选项，Vue 将遍历此对象所有的 property，并使用 Object.defineProperty 把这些 property 全部转为 getter/setter。</li><li>实现数据双向数据绑定<ul><li>1、实现一个数据监听器Observer，能够对数据对象的所有属性进行监听，如有变动可拿到最新值并通知订阅者</li><li>2、实现一个指令解析器Compile，对每个元素节点的指令进行扫描和解析，根据指令模板替换数据，以及绑定相应的更新函数</li><li>3、实现一个Watcher，作为连接Observer和Compile的桥梁，能够订阅并收到每个属性变动的通知，执行指令绑定的相应回调函数，从而更新视图<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span> obj<span class="token punctuation">,</span> <span class="token string">"greet"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token string">"调用 get 方法"</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">newVal</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"调用 set 方法，传入的值是："</span> <span class="token operator">+</span> newVal <span class="token punctuation">)</span><span class="token punctuation">;</span>    obj<span class="token punctuation">.</span>say <span class="token operator">=</span> newVal<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>obj<span class="token punctuation">.</span>greet<span class="token punctuation">;</span> <span class="token comment">// 调用 get 方法</span>obj<span class="token punctuation">.</span>greet <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token punctuation">;</span> <span class="token comment">// 调用 set 方法，传入的值是：hello</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// &#123;say: "hello"&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/Object.defineProperty.png" alt="数据双向绑定"></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/Object.defineProperty1.jpg" alt="数据双向绑定"></p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/Object.defineProperty2.jpg" alt="数据双向绑定"><br>数据双向绑定</p><h2 id="Vue生命周期"><a href="#Vue生命周期" class="headerlink" title="Vue生命周期"></a>Vue生命周期</h2><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/lifecycle.png" alt="Vue生命周期"><br>Vue生命周期</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React Native for Windows 0.61 起步</title>
      <link href="/2020/05/14/01-React-Native-Windows%E4%B9%8B%E8%B5%B7%E6%AD%A5/"/>
      <url>/2020/05/14/01-React-Native-Windows%E4%B9%8B%E8%B5%B7%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h1><ul><li><p>Windows 10</p><h1 id="开发依赖"><a href="#开发依赖" class="headerlink" title="开发依赖"></a>开发依赖</h1></li><li><p>安装 Visual Studio 2019</p></li><li><p>安装 Visual Studio 2019 的这些选项</p><ul><li>工作负载 -&gt; 通用 Windows 平台开发 -&gt; 勾选可选项里的 “C++ (v141)通用 Windows 平台工具”</li><li>工作负载 -&gt; 使用 C++ 的桌面开发</li><li>单个组件 -&gt; 编译器、生成工具和运行时 -&gt; MSVC v141 – VS 2017 C++ x64/x86 生成工具(v14.16)</li><li>单个组件 -&gt; 编译器、生成工具和运行时 -&gt; MSVC v141 – VS 2017 C++ ARM64 生成工具(v14.16)</li><li>单个组件 -&gt; 开发活动 -&gt; Node.js 开发工具</li><li>预计安装所需空间大小：21.64GB<h1 id="安装-React-Native-的开发依赖"><a href="#安装-React-Native-的开发依赖" class="headerlink" title="安装 React Native 的开发依赖"></a>安装 React Native 的开发依赖</h1></li></ul></li><li><p>安装标准的 React Native 开发依赖，中文文档</p></li><li><p>安装 node.js，确保node的版本是12.9.1或是更高，12.9.1是构建 React Native for Windows 推荐的版本</p></li><li><p>安装 Chrome，用于调式JS,可选</p></li><li><p>安装 Yarn，可选安装，如果你想为 react-native-windows 添砖加瓦则续安装</p><h1 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h1></li><li><p>如果在运行应用程序后，打包程序未更新或应用程序未显示 React Native 内容-请关闭打包程序命令提示符窗口，并确保该应用程序已打开，然后运行 yarn start 并再次从 Visual Studio 运行该应用程序。</p></li><li><p>如果您在UWP应用程序窗口中看到带有错误消息：的红色错误框，请 ERROR: Instance failed to start. A connection with the server cannot be established 确保您正在使用打包 yarn start 程序运行，然后再次运行该应用程序。</p><h1 id="安装-React-Native-for-Windows"><a href="#安装-React-Native-for-Windows" class="headerlink" title="安装 React Native for Windows"></a>安装 React Native for Windows</h1></li><li><p>在需要创建项目的目录下面执行 <code>react-native init</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">npx react<span class="token operator">-</span>native init <span class="token operator">&lt;</span>project name<span class="token operator">></span> <span class="token operator">--</span>version <span class="token operator">^</span><span class="token number">0.61</span><span class="token number">.5</span><span class="token comment">// npx 还能避免全局安装的模块,安装模块时会下载到一个临时目录，使用以后再删除</span><span class="token comment">// –version ^0.61.5 指定版本号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="安装-Windows-扩展"><a href="#安装-Windows-扩展" class="headerlink" title="安装 Windows 扩展"></a>安装 Windows 扩展</h1></li><li><p>安装 React Native for Windows 软件包</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">cd <span class="token operator">&lt;</span>project name<span class="token operator">></span> npx react<span class="token operator">-</span>native<span class="token operator">-</span>windows<span class="token operator">-</span>init <span class="token operator">--</span>overwrite<span class="token comment">// 切换到创建项目的目录下面然后安装</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="运行-React-Native-Windows-应用"><a href="#运行-React-Native-Windows-应用" class="headerlink" title="运行 React Native Windows 应用"></a>运行 React Native Windows 应用</h1></li><li><p>运行前确保浏览器已经打开</p></li><li><p>在 VS Code 中运行</p><ul><li>安装 VS Code 插件： React Native Tools</li><li>在应用程根目录创建文件 .vscode/launch.json，并粘贴如下内容<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>    <span class="token string">"version"</span><span class="token operator">:</span> <span class="token string">"0.2.0"</span><span class="token punctuation">,</span>    <span class="token string">"configurations"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token string">"name"</span><span class="token operator">:</span> <span class="token string">"Debug Windows"</span><span class="token punctuation">,</span>            <span class="token string">"cwd"</span><span class="token operator">:</span> <span class="token string">"$&#123;workspaceFolder&#125;"</span><span class="token punctuation">,</span>            <span class="token string">"type"</span><span class="token operator">:</span> <span class="token string">"reactnative"</span><span class="token punctuation">,</span>            <span class="token string">"request"</span><span class="token operator">:</span> <span class="token string">"launch"</span><span class="token punctuation">,</span>            <span class="token string">"platform"</span><span class="token operator">:</span> <span class="token string">"windows"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js">npx react<span class="token operator">-</span>native run<span class="token operator">-</span>windows<span class="token comment">// 第一次启动会有点慢，安装后会淡出一个命令提示符窗口，请按回车以继续</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>按 “r” 键可以重载应用</p></li></ul><h1 id="在-Visual-Studio-中运行"><a href="#在-Visual-Studio-中运行" class="headerlink" title="在 Visual Studio 中运行"></a>在 Visual Studio 中运行</h1><ul><li>在 Visual Studio 中打开解决方案文件（如：”\windowsAppDemo\windows\windowsAppDemo.sln”）</li><li>如果 Visual Studio 显示无法加载，可以关闭 Visual Studio 然后重新打开</li><li>在项目目录项目下打开命令行提示符运行yarn start</li><li>在 Visual Studio 中的菜单下面选 Debug -&gt; x64 -&gt; 本地计算机（点击绿色三角按钮启动）<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/welcome-react-native-for-windows.png" alt="应用运行成功截图"><!-- 应用运行成功截图 --></li></ul>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React Native </tag>
            
            <tag> React-Native-Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用正则表达式</title>
      <link href="/2020/05/14/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2020/05/14/%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="匹配数字或版本号"><a href="#匹配数字或版本号" class="headerlink" title="匹配数字或版本号"></a>匹配数字或版本号</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// a.b（eg: 1.0, 1.100, 甚至 1.1000）</span><span class="token comment">// a.b.c (eg: 1.1.1, 1.12.1, 甚至 1.121.1)</span><span class="token comment">// a（a可能>5位）</span><span class="token comment">// 不限长度版本</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\d+$|^\d+\.\d+$|^\d+(\.\d+)&#123;1,2&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span><span class="token comment">// 限制长度（每一位版本号应该是一位数）</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\d$|^\d\.\d$|^\d(\.\d)&#123;1,2&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="正数的正则表达式"><a href="#正数的正则表达式" class="headerlink" title="正数的正则表达式"></a>正数的正则表达式</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 正数的正则表达式(包括0，小数保留两位)：</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^((0&#123;1&#125;\.\d&#123;1,2&#125;)|([1-9]\d*\.&#123;1&#125;\d&#123;1,2&#125;)|([1-9]+\d*)|0)$</span><span class="token regex-delimiter">/</span></span><span class="token comment">// 正数的正则表达式(不包括0，小数保留两位)：</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^((0&#123;1&#125;\.\d&#123;1,2&#125;)|([1-9]\d*\.&#123;1&#125;\d&#123;1,2&#125;)|([1-9]+\d*))$</span><span class="token regex-delimiter">/</span></span><span class="token comment">// 正整数的正则表达式(包括0)：</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[+]&#123;0,1&#125;(\d+)$</span><span class="token regex-delimiter">/</span></span><span class="token comment">// 正整数的正则表达式(不包括0)：</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9]\d*$</span><span class="token regex-delimiter">/</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="折扣正则表达式"><a href="#折扣正则表达式" class="headerlink" title="折扣正则表达式"></a>折扣正则表达式</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 折扣（0-1）的小数的正则表达式(包括1)：</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(0\.\d+|1)$</span><span class="token regex-delimiter">/</span></span><span class="token comment">// 折扣（0-1）的小数的正则表达式(不包括1)：</span><span class="token keyword">var</span> Reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(0\.\d+)$</span><span class="token regex-delimiter">/</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 正则 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>抽象组件实现节流/防抖</title>
      <link href="/2020/05/04/%E6%8A%BD%E8%B1%A1%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81and%E9%98%B2%E6%8A%96/"/>
      <url>/2020/05/04/%E6%8A%BD%E8%B1%A1%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E8%8A%82%E6%B5%81and%E9%98%B2%E6%8A%96/</url>
      
        <content type="html"><![CDATA[<h1 id="节流-防抖"><a href="#节流-防抖" class="headerlink" title="节流/防抖"></a>节流/防抖</h1><ul><li>节流：<ul><li>一个函数执行一次后，只有大于设定的执行周期后才会被执行第二次(点击事件)</li><li>有个需要频繁触发的函数，出于优化性能角度，在规定时间内，只让函数触发的第一次生效后面不生效</li></ul></li><li>防抖：<ul><li>一个需要频繁触发的函数，在规定时间内，只让最后一次生效，前面不生效</li></ul></li></ul><h2 id="Vue实现函数防抖组件"><a href="#Vue实现函数防抖组件" class="headerlink" title="Vue实现函数防抖组件"></a>Vue实现函数防抖组件</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 组件</span><span class="token keyword">const</span> <span class="token function-variable function">throttle</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> wait <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">,</span> isDebounce<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> timer  <span class="token keyword">let</span> lastCall <span class="token operator">=</span> <span class="token number">0</span>  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>isDebounce<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>      timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> params<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> lastCall <span class="token operator">&lt;</span> wait<span class="token punctuation">)</span> <span class="token keyword">return</span>      lastCall <span class="token operator">=</span> now      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> params<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">"Throttle"</span><span class="token punctuation">,</span>  abstract<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    time<span class="token operator">:</span> Number<span class="token punctuation">,</span>    events<span class="token operator">:</span> String<span class="token punctuation">,</span>    isDebounce<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>eventKeys <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>originMap <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>throttledMap <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">.</span>default<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>eventKeys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> target <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on<span class="token punctuation">[</span>key<span class="token punctuation">]</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>originMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>throttledMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>throttledMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>originMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> target        <span class="token keyword">this</span><span class="token punctuation">.</span>throttledMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">throttle</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>time<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>isDebounce<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>        vnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>on<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>throttledMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> vnode  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 通过第三个参数 isDebounce来控制切换防抖节流</span><span class="token comment">// 在 main.js 引入</span><span class="token keyword">import</span> Throttle <span class="token keyword">from</span> <span class="token string">"./Throttle"</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"Throttle"</span><span class="token punctuation">,</span> Throttle<span class="token punctuation">)</span><span class="token comment">// 使用</span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>Throttle <span class="token operator">:</span>timer<span class="token operator">=</span><span class="token string">"1000"</span> events<span class="token operator">=</span><span class="token string">"click"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>botton @click<span class="token operator">=</span><span class="token string">"onClick($event, 1)"</span><span class="token operator">></span>click <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>val<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>botton<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>Throttle<span class="token operator">></span>  <span class="token operator">&lt;</span>Throttle <span class="token operator">:</span>timer<span class="token operator">=</span><span class="token string">"1000"</span> events<span class="token operator">=</span><span class="token string">"click"</span> <span class="token operator">:</span>isDebounce<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>botton @click<span class="token operator">=</span><span class="token string">"onAdd"</span><span class="token operator">></span>click <span class="token operator">+</span> <span class="token number">3</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>val<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>botton<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>Throttle<span class="token operator">></span>  <span class="token operator">&lt;</span>Throttle <span class="token operator">:</span>timer<span class="token operator">=</span><span class="token string">"3300"</span> events<span class="token operator">=</span><span class="token string">"mouseleave"</span> <span class="token operator">:</span>isDebounce<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>botton @mouseleave<span class="token punctuation">.</span>prevent<span class="token operator">=</span><span class="token string">"onAdd"</span><span class="token operator">></span>click <span class="token operator">+</span> <span class="token number">3</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>val<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>botton<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>Throttle<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  el<span class="token operator">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      val<span class="token operator">:</span> <span class="token number">0</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token parameter">$ev<span class="token punctuation">,</span>val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token function">onAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">+=</span> <span class="token number">3</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实现一个防抖函数"><a href="#实现一个防抖函数" class="headerlink" title="实现一个防抖函数"></a>实现一个防抖函数</h2>  <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 在第一次触发事件时，不立即执行，而是在给定的时间值后，如果没有再次触发就执行，如果触发了，就取消当前的计时，然后重新计时</span><span class="token comment">/** *  * @param &#123;Function&#125; fn 需要防抖的函数 * @param &#123;Number&#125; delay 毫秒，防抖时间值 */</span><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">300</span></span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> delay<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实现一个节流函数"><a href="#实现一个节流函数" class="headerlink" title="实现一个节流函数"></a>实现一个节流函数</h2>  <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 类似控制阀门定期开放的函数，即让函数执行一次后，在间隔的时间里暂时失效不能再次执行，等过了间隔时间又重新激活（相当于冷却时间）</span><span class="token comment">/** *  * @param &#123;Function&#125; fn 需要节流的函数 * @param &#123;Number&#125; delay 毫秒，节流间隔时间值 */</span><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">300</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> valid <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>valid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 休息时间，不执行函数</span>      <span class="token keyword">return</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 工作时间，执行函数，并且在间隔期间内把状态设为无效</span>    valid <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      valid <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="防抖函数的图形化表述"><a href="#防抖函数的图形化表述" class="headerlink" title="防抖函数的图形化表述"></a>防抖函数的图形化表述</h2><ul><li><p>防抖函数</p><style>    .con {        box-sizing: border-box !important;        width: 600px;        height: 200px;        background: #eeeeee;        padding: 20px;    }    .rate-con {        width: 500px;        height: 46px;        position: relative;        margin: 20px;        border: 1px solid #000;    }    .rate {        box-sizing: border-box !important;        border: none !important;        padding: 0 !important;        margin: 0 !important;        width: 500px !important;        height: 45px !important;        position: absolute;        left: 50%;        top: 50%;        transform: translate(-50%, -50%);        font-size: 16px !important;        color: red;        z-index: 99;        background: none !important;        padding-left: 10px !important;    }    .rate-bg {      box-sizing: border-box !important;        position: absolute;        width: 0px;        height: 42px;        left: 1px;        top: 1px;        background: #58bc58;    }    .btn-list {        width: 500px;        text-align: center;        padding: 20px;    }    .btn-list button {        padding: 10px 30px;        border: none;        cursor: pointer;        font-size: 14px;    }    .install {        background: #58bc58;    }    .reset {        background: #ccc;    }</style><div class="con">    <div class="rate-con" id="">        <input type="text" value="0%" class="rate" id="rate">        <div class="rate-bg" id="rateBg"></div>    </div>    <div class="btn-list">        <button class="install" id="install">安装</button>        <button class="reset" id="reset">重置</button>    </div></div><script>    let rateTimer = null    let installBtn = document.getElementById('install')    let resetBtn = document.getElementById('reset')    let rateBg = document.getElementById('rateBg')    let rateInput = document.getElementById('rate')    let defaultWidth = 0    installBtn.onclick = () => {        if (defaultWidth > 494) {            alert("已经安装完成啦，请重置或刷新")        } else {            defaultWidth = 0            rateing()        }    }    resetBtn.onclick = () => {        defaultWidth = 0        rateBg.style.width = 0 + "px"        rateInput.value = "0%"        clearInterval(rateTimer)    }    function rateing() {        if (rateTimer) {            clearInterval(rateTimer)        }        rateTimer = setInterval(() => {            console.log();            if (defaultWidth > 494) {                clearInterval(rateTimer)                alert("安装完成啦")            }            let w = defaultWidth + 1            rateBg.style.width = w + 'px'            defaultWidth = w            rateInput.value = ((defaultWidth / 494) * 100).toFixed(0) + "%"        }, 10)    }</script></li><li><p>防抖函数类似此安装，只要进度没到100%，重新点击安装按钮他就会从头开始安装，直到安装进度能达到100%的时候才会触发事件，否则就不会触发</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 节流/防抖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git分支管理策略</title>
      <link href="/2020/03/02/Git%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86%E7%AD%96%E7%95%A5/"/>
      <url>/2020/03/02/Git%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86%E7%AD%96%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="Git分支管理策略"><a href="#Git分支管理策略" class="headerlink" title="Git分支管理策略"></a>Git分支管理策略</h1><h2 id="一-主分支Master"><a href="#一-主分支Master" class="headerlink" title="一. 主分支Master"></a>一. 主分支Master</h2><ul><li><p>首先，代码库应该有一个、且仅有一个主分支。所有提供给用户使用的正式版本，都在这个主分支上发布。</p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/master.png" alt="master分支"></p></li><li><p>Git主分支的名字，默认叫做Master。它是自动建立的，版本库初始化以后，默认就是在主分支在进行开发。</p></li></ul><h2 id="二、开发分支Develop"><a href="#二、开发分支Develop" class="headerlink" title="二、开发分支Develop"></a>二、开发分支Develop</h2><ul><li><p>主分支只用来分布重大版本，日常开发应该在另一条分支上完成。我们把开发用的分支，叫做Develop。</p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/Develop.png" alt="Develop分支"></p></li><li><p>这个分支可以用来生成代码的最新隔夜版本（nightly）。如果想正式对外发布，就在Master分支上，对Develop分支进行”合并”（merge）。</p></li><li><p>Git创建Develop分支的命令：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout <span class="token operator">-</span>b develop master<span class="token comment">//后面是跟一个master说明，创建的develop分支是基于当前的master， 如果当前就在master分支，则可以不写。 如果当前分支HEAD指向的是别的分支，又想基于master分支创建，就必须写master</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>将Develop分支发布到Master分支的命令：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 切换到Master分支</span>git checkout master<span class="token comment">// 对Develop分支进行合并</span>git merge <span class="token operator">--</span>no<span class="token operator">-</span>ff develop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>git merge –no-ff develop 中的 –no-ff 参数是什么意思。默认情况下，Git执行”快进式合并”（fast-farward merge），会直接将Master分支指向Develop分支。</p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/merge1.png" alt="快速marge"></p></li><li><p>使用–no-ff参数后，会执行正常合并(如下图)，在Master分支上生成一个新节点。(更希望使用这种做法，保证版本演进清晰)</p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/merge2.png" alt="正常marge"></p><h2 id="三、临时性分支"><a href="#三、临时性分支" class="headerlink" title="三、临时性分支"></a>三、临时性分支</h2></li><li><p>前面讲到版本库的两条主要分支：Master和Develop。前者用于正式发布，后者用于日常开发。其实，常设分支只需要这两条就够了，不需要其他了。</p></li><li><p>但是，除了常设分支以外，还有一些临时性分支，用于应对一些特定目的的版本开发。临时性分支主要有三种：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 功能（feature）分支</span><span class="token comment">// 预发布（release）分支</span><span class="token comment">// 修补bug（fixbug）分支</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>这三种分支都属于临时性需要，使用完以后，应该删除，使得代码库的常设分支始终只有Master和Develop。</p></li></ul><h2 id="四、-功能分支"><a href="#四、-功能分支" class="headerlink" title="四、 功能分支"></a>四、 功能分支</h2><ul><li><p>功能分支，它是为了开发某种特定功能，从Develop分支上面分出来的。开发完成后，要再并入Develop。</p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/feature-develop.png" alt="功能分支"></p></li><li><p>功能分支的名字，可以采用feature-*的形式命名。</p></li><li><p>创建一个功能分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout <span class="token operator">-</span>b feature<span class="token operator">-</span>x develop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>开发完成后，将功能分支合并到develop分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout developgit merge <span class="token operator">--</span>no<span class="token operator">-</span>ff feature<span class="token operator">-</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>删除feature分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git branch <span class="token operator">-</span>d feature<span class="token operator">-</span>x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="五、预发布分支"><a href="#五、预发布分支" class="headerlink" title="五、预发布分支"></a>五、预发布分支</h2></li><li><p>预发布分支，它是指发布正式版本之前（即合并到Master分支之前），我们可能需要有一个预发布的版本进行测试。</p></li><li><p>预发布分支是从Develop分支上面分出来的，预发布结束以后，必须合并进Develop和Master分支。它的命名，可以采用release-*的形式。</p></li><li><p>创建一个预发布分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout <span class="token operator">-</span>b release<span class="token operator">-</span><span class="token number">1.2</span> develop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>确认没有问题后，合并到master分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout mastergit merge <span class="token operator">--</span>no<span class="token operator">-</span>ff release<span class="token operator">-</span><span class="token number">1.2</span><span class="token comment">// 对合并生成的新节点，做一个标签</span>git tag <span class="token operator">-</span>a <span class="token number">1.2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>再合并到develop分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout developgit merge <span class="token operator">--</span>no<span class="token operator">-</span>ff release<span class="token operator">-</span><span class="token number">1.2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>最后，删除预发布分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git branch <span class="token operator">-</span>d release<span class="token operator">-</span><span class="token number">1.2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="六、修补bug分支"><a href="#六、修补bug分支" class="headerlink" title="六、修补bug分支"></a>六、修补bug分支</h2></li><li><p>最后一种是修补bug分支。软件正式发布以后，难免会出现bug。这时就需要创建一个分支，进行bug修补。</p></li><li><p>修补bug分支是从Master分支上面分出来的。修补结束以后，再合并进Master和Develop分支。它的命名，可以采用fixbug-*的形式。</p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/fixbug.png" alt="修补bug分支"></p></li><li><p>创建一个修补bug分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout <span class="token operator">-</span>b fixbug<span class="token operator">-</span><span class="token number">0.1</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修补结束后，合并到master分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout mastergit merge <span class="token operator">--</span>no<span class="token operator">-</span>ff fixbug<span class="token operator">-</span><span class="token number">0.1</span>git tag <span class="token operator">-</span>a <span class="token number">0.1</span><span class="token number">.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>再合并到develop分支：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git checkout developgit merge <span class="token operator">--</span>no<span class="token operator">-</span>ff fixbug<span class="token operator">-</span><span class="token number">0.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>最后，删除”修补bug分支”：</p>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git branch <span class="token operator">-</span>d fixbug<span class="token operator">-</span><span class="token number">0.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些自己的项目规范</title>
      <link href="/2020/02/13/%E4%B8%80%E4%BA%9B%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%A7%84%E8%8C%83/"/>
      <url>/2020/02/13/%E4%B8%80%E4%BA%9B%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h2 id="项目目录规范"><a href="#项目目录规范" class="headerlink" title="项目目录规范"></a>项目目录规范</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">└─Code├─www<span class="token punctuation">.</span>github<span class="token punctuation">.</span>com│ ├─project1│ ├─project2│ └─project3└─www<span class="token punctuation">.</span>xxx1<span class="token punctuation">.</span>com├─project1├─project2└─project3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="项目文件名及项目内命名规范"><a href="#项目文件名及项目内命名规范" class="headerlink" title="项目文件名及项目内命名规范"></a>项目文件名及项目内命名规范</h2><ul><li>组件名，小驼峰：<code>testComponents</code></li><li>函数名，小驼峰：<code>testFunction</code></li><li>类名，横线：<code>test-class</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 项目规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux使用笔记</title>
      <link href="/2020/01/13/Linux%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/01/13/Linux%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-软件装在哪里？"><a href="#Linux-软件装在哪里？" class="headerlink" title="Linux 软件装在哪里？"></a>Linux 软件装在哪里？</h1><h2 id="1-opt目录"><a href="#1-opt目录" class="headerlink" title="1. opt目录"></a>1. opt目录</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/opt</span><span class="token template-punctuation string">`</span></span> 是用来安装附加软件包，是用户级程序目录，相当于 <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">D:/soft</span><span class="token template-punctuation string">`</span></span>，<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">opt</span><span class="token template-punctuation string">`</span></span>有可选的意思，安装到<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/opt</span><span class="token template-punctuation string">`</span></span>目录下的程序，所有的数据、库文件都会放置在同一个目录下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-usr目录"><a href="#2-usr目录" class="headerlink" title="2. /usr目录"></a>2. /usr目录</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/usr</span><span class="token template-punctuation string">`</span></span><span class="token operator">:</span> 相当于 <span class="token constant">C</span><span class="token operator">:</span><span class="token operator">/</span>Windows<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/usr/lib</span><span class="token template-punctuation string">`</span></span><span class="token operator">:</span> 相当于 <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">C:/Windows/System32</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/usr/local</span><span class="token template-punctuation string">`</span></span><span class="token operator">:</span> 相当于 <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">C:/Progrem Files</span><span class="token template-punctuation string">`</span></span>  是用户级程序目录，用户自己编译的软件默认会安装到此目录（存放手动安装的软件，即不是通过<span class="token string">'yum'</span>或<span class="token string">'apt-get'</span>安装的软件）它和<span class="token operator">/</span>usr有相似的目录结构，让软件包管理器来管理<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/usr</span><span class="token template-punctuation string">`</span></span>，而把自定义脚本放到<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/usr/local</span><span class="token template-punctuation string">`</span></span>目录下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="源码放哪里"><a href="#源码放哪里" class="headerlink" title="源码放哪里"></a>源码放哪里</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/usr/src</span><span class="token template-punctuation string">`</span></span> 系统级的源码目录<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/usr/local/src</span><span class="token template-punctuation string">`</span></span> 用户级的源码目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="Linux软件包管理（安装、删除）"><a href="#Linux软件包管理（安装、删除）" class="headerlink" title="Linux软件包管理（安装、删除）"></a>Linux软件包管理（安装、删除）</h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token number">0.</span> 下载软件包：wget 软件包地址<span class="token number">1.</span> 手动安装（tar<span class="token punctuation">.</span>gz源、tar<span class="token punctuation">.</span>bz2源）  ① 下载相应的软件包，如soft<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz<span class="token operator">/</span>soft<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>bz2  ② cd soft<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz<span class="token operator">/</span>soft<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>bz2所在的目录  ③ tar <span class="token operator">-</span>xzvf soft<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz     <span class="token comment">//一般会生成一个soft目录</span>  ④ cd soft   ⑤<span class="token punctuation">.</span><span class="token operator">/</span>configure      <span class="token comment">// 为编译做准备</span>  ⑥ make            <span class="token comment">// 编译软件 （时间很久）</span>  ⑦ make install    <span class="token comment">// 安装软件</span>  ⑧ make clean      <span class="token comment">// 删除安装产生的临时文件  </span><span class="token number">2.</span> rpm包安装  ① 下载相应的软件包，如soft<span class="token punctuation">.</span>version<span class="token punctuation">.</span>rpm  ② cd soft<span class="token punctuation">.</span>version<span class="token punctuation">.</span>rpm所在的目录  ③ rpm <span class="token operator">-</span>ivh soft<span class="token punctuation">.</span>version<span class="token punctuation">.</span>rpm   <span class="token comment">// -i 安装软件 -t 测试安装，不是真的安装 -p 显示安装进度 -f 忽略任何错误 -U 升级安装 -v 检测套件是否正确安装</span>  ④ 卸载 rpm <span class="token operator">-</span>e 软件名<span class="token number">3.</span> dep包安装  ① 下载相应的软件包，如soft<span class="token punctuation">.</span>version<span class="token punctuation">.</span>dep  ② cd soft<span class="token punctuation">.</span>version<span class="token punctuation">.</span>dep所在目录  ③ dpkg <span class="token operator">-</span>i soft<span class="token punctuation">.</span>version<span class="token punctuation">.</span>dep  ④ 卸载 dpkg <span class="token operator">-</span>e 软件名  ⑤ 查看已安装的软件包 dpkg –l <span class="token string">'*软件包名*'</span><span class="token number">4.</span> apt方式安装（安装deb包）  ① apt<span class="token operator">-</span>cache search 软件包  ② apt<span class="token operator">-</span><span class="token keyword">get</span> install 软件包  ③ 删除（保留配置文件） apt<span class="token operator">-</span><span class="token keyword">get</span> remove 软件名  ④ 删除（不保留配置文件） apt<span class="token operator">-</span>get <span class="token operator">--</span>purge remove 软件名  ⑤ dpkg <span class="token operator">--</span>force<span class="token operator">-</span>all <span class="token operator">--</span>purge packagename ——有些软件很难卸载，而且还阻止了别的软件的应用，就可以用这个，不过有点冒险。    apt<span class="token operator">-</span><span class="token keyword">get</span> autoremove——因为apt会把已装或已卸的软件都备份在硬盘上，所以如果需要空间的话，可以让这个命令来删除你已经删掉的软件。    apt<span class="token operator">-</span><span class="token keyword">get</span> autoclean——定期运行这个命令来清除那些已经卸载的软件包的<span class="token punctuation">.</span>deb文件。通过这种方式，可以释放大量的磁盘空间。如果需求十分迫切，可以使用apt<span class="token operator">-</span><span class="token keyword">get</span> clean以释放更多空间。这个命令会将已安装软件包裹的<span class="token punctuation">.</span>deb文件一并删除。    apt<span class="token operator">-</span><span class="token keyword">get</span> clean——这个命令会把安装的软件的备份也删除，不过这样不会影响软件的使用的。    apt<span class="token operator">-</span><span class="token keyword">get</span> upgrade——更新所有已安装的软件包    apt<span class="token operator">-</span><span class="token keyword">get</span> dist<span class="token operator">-</span>upgrade——将系统升级到新版本    apt<span class="token operator">-</span>cache search string——在软件包列表中搜索字符串    apt<span class="token operator">-</span>cache showpkg pkgs——显示软件包信息。    apt<span class="token operator">-</span>cache stats——查看库里有多少软件    apt<span class="token operator">-</span>cache dumpavail——打印可用软件包列表。    apt<span class="token operator">-</span>cache show pkgs——显示软件包记录，类似于dpkg –print<span class="token operator">-</span>avail。    apt<span class="token operator">-</span>cache pkgnames——打印软件包列表中所有软件包的名称<span class="token number">5.</span> yum方式安装  ① yum <span class="token operator">-</span>y install 软件包  ② 卸载 yum remove 软件名  ③ 已安装列表 yum list all  ④ 查看软件包信息 yum info 软件名  ⑥ 升级所有的软件包 yum update 软件名   ⑦ 清除所有包缓存  yum clean all <span class="token comment">// 切换yum源</span><span class="token comment">// 首先备份/etc/yum.repos.d/CentOS-Base.repo</span><span class="token comment">// 重命名</span>mv <span class="token operator">/</span>etc<span class="token operator">/</span>yum<span class="token punctuation">.</span>repos<span class="token punctuation">.</span>d<span class="token operator">/</span>CentOS<span class="token operator">-</span>Base<span class="token punctuation">.</span>repo <span class="token operator">/</span>etc<span class="token operator">/</span>yum<span class="token punctuation">.</span>repos<span class="token punctuation">.</span>d<span class="token operator">/</span>CentOS<span class="token operator">-</span>Base<span class="token punctuation">.</span>repo<span class="token punctuation">.</span>backup<span class="token comment">// 下载对应版本 repo 文件, 放入 /etc/yum.repos.d/ (操作前请做好相应备份)</span><span class="token comment">// 163源</span>CentOS5 ：http<span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">mirrors.163.com</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>help<span class="token operator">/</span>CentOS5<span class="token operator">-</span>Base<span class="token operator">-</span><span class="token number">163.</span>repoCentOS6 ：http<span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">mirrors.163.com</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>help<span class="token operator">/</span>CentOS6<span class="token operator">-</span>Base<span class="token operator">-</span><span class="token number">163.</span>repoCentOS7 ：http<span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">mirrors.163.com</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>help<span class="token operator">/</span>CentOS7<span class="token operator">-</span>Base<span class="token operator">-</span><span class="token number">163.</span>repo<span class="token comment">// 阿里云源</span>CentOS5 ：http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>repo<span class="token operator">/</span>Centos<span class="token operator">-</span><span class="token number">5.</span>repoCentOS6 ：http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>repo<span class="token operator">/</span>Centos<span class="token operator">-</span><span class="token number">6.</span>repoCentOS7 ：http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>repo<span class="token operator">/</span>Centos<span class="token operator">-</span><span class="token number">7.</span>repo<span class="token comment">// 下载</span>wget http<span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">mirrors.163.com</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span>help<span class="token operator">/</span>CentOS6<span class="token operator">-</span>Base<span class="token operator">-</span><span class="token number">163.</span>repo<span class="token comment">//重命名</span>mv CentOS6<span class="token operator">-</span>Base<span class="token operator">-</span><span class="token number">163.</span>repo CentOS<span class="token operator">-</span>Base<span class="token punctuation">.</span>repo<span class="token comment">// 运行以下命令生成缓存</span>yum clean allyum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="自己在Linux-上的一些操作"><a href="#自己在Linux-上的一些操作" class="headerlink" title="自己在Linux 上的一些操作"></a>自己在Linux 上的一些操作</h1><h2 id="安装-node"><a href="#安装-node" class="headerlink" title="安装 node"></a>安装 node</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">node <span class="token operator">-</span>v     <span class="token comment">// 查看是否已安装</span>yum install nodejs    <span class="token comment">// 安装nodejs 询问时 输入 y</span>rpm <span class="token operator">-</span>qa <span class="token operator">|</span> grep node <span class="token comment">// 查看是否已安装</span>rpm <span class="token operator">-</span>ql node <span class="token comment">// 查看安装路径</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">yum install nginx   <span class="token comment">// 安装nginx</span>systemctl start nginx<span class="token punctuation">.</span>service   <span class="token comment">// 启动nginx</span>systemctl enable nginx<span class="token punctuation">.</span>service    <span class="token comment">// 开机启动</span>systemctl stop nginx<span class="token punctuation">.</span>service    <span class="token comment">// 停止nginx服务</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><ul><li>配置两个ssl证书<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># For more information on configuration, see:</span><span class="token comment">#   * Official English Documentation: http://nginx.org/en/docs/</span><span class="token comment">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span>user nginx<span class="token punctuation">;</span>worker_processes auto<span class="token punctuation">;</span>error_log /var/log/nginx/error.log<span class="token punctuation">;</span>pid /run/nginx.pid<span class="token punctuation">;</span>Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.include /usr/share/nginx/modules/*.conf<span class="token punctuation">;</span>events <span class="token punctuation">&#123;</span>worker_connections <span class="token number">1024</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>http <span class="token punctuation">&#123;</span>log_format main <span class="token string">'$remote_addr - $remote_user [$time_local] "$request" '</span><span class="token string">'$status $body_bytes_sent "$http_referer" '</span><span class="token string">'"$http_user_agent" "$http_x_forwarded_for"'</span><span class="token punctuation">;</span>access_log  /var/log/nginx/access.log  main<span class="token punctuation">;</span>sendfile            on<span class="token punctuation">;</span>tcp_nopush          on<span class="token punctuation">;</span>tcp_nodelay         on<span class="token punctuation">;</span>keepalive_timeout   <span class="token number">65</span><span class="token punctuation">;</span>types_hash_max_size <span class="token number">2048</span><span class="token punctuation">;</span>include             /etc/nginx/mime.types<span class="token punctuation">;</span>default_type        application/octet-stream<span class="token punctuation">;</span><span class="token comment"># Load modular configuration files from the /etc/nginx/conf.d directory.</span><span class="token comment"># See http://nginx.org/en/docs/ngx_core_module.html#include</span><span class="token comment"># for more information.</span>include /etc/nginx/conf.d/*.conf<span class="token punctuation">;</span>server <span class="token punctuation">&#123;</span>    listen       <span class="token number">80</span> default_server<span class="token punctuation">;</span>    listen       <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:80 default_server<span class="token punctuation">;</span>    server_name  www.damao2250.com<span class="token punctuation">;</span>    root         /var/www/damao<span class="token punctuation">;</span>    <span class="token comment">#告诉浏览器有效期内只准用 https 访问</span>    add_header Strict-Transport-Security max-age<span class="token operator">=</span><span class="token number">15768000</span><span class="token punctuation">;</span>    <span class="token comment">#永久重定向到 https 站点</span>    <span class="token builtin class-name">return</span> <span class="token number">301</span> https://<span class="token variable">$server_name</span><span class="token variable">$request_uri</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>Settings <span class="token keyword">for</span> a TLS enabled server.server <span class="token punctuation">&#123;</span>listen <span class="token number">443</span> ssl http2 default_server<span class="token punctuation">;</span>listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:443 ssl http2 default_server<span class="token punctuation">;</span>server_name www.damao2250.com<span class="token punctuation">;</span>root /var/www/damao<span class="token punctuation">;</span>   ssl_certificate <span class="token string">"/opt/ssl/www.damao2250.com/www.damao2250.com.pem"</span><span class="token punctuation">;</span>   ssl_certificate_key <span class="token string">"/opt/ssl/www.damao2250.com/www.damao2250.com.key"</span><span class="token punctuation">;</span>   ssl_session_cache shared:SSL:1m<span class="token punctuation">;</span>   ssl_session_timeout  10m<span class="token punctuation">;</span>   ssl_ciphers HIGH:<span class="token operator">!</span>aNULL:<span class="token operator">!</span>MD5<span class="token punctuation">;</span>   ssl_prefer_server_ciphers on<span class="token punctuation">;</span>   <span class="token comment"># Load configuration files for the default server block.</span>   include /etc/nginx/default.d/*.conf<span class="token punctuation">;</span>   location / <span class="token punctuation">&#123;</span>   <span class="token punctuation">&#125;</span>   error_page <span class="token number">404</span> /404.html<span class="token punctuation">;</span>       location <span class="token operator">=</span> /40x.html <span class="token punctuation">&#123;</span>   <span class="token punctuation">&#125;</span>   error_page <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span> /50x.html<span class="token punctuation">;</span>       location <span class="token operator">=</span> /50x.html <span class="token punctuation">&#123;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>server <span class="token punctuation">&#123;</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    server_name  ycy.damao2250.com<span class="token punctuation">;</span>    <span class="token comment">#告诉浏览器有效期内只准用 https 访问</span>    add_header Strict-Transport-Security max-age<span class="token operator">=</span><span class="token number">15768000</span><span class="token punctuation">;</span>    <span class="token comment">#永久重定向到 https 站点</span>    <span class="token builtin class-name">return</span> <span class="token number">301</span> https://<span class="token variable">$server_name</span><span class="token variable">$request_uri</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>Settings <span class="token keyword">for</span> a TLS enabled server.server <span class="token punctuation">&#123;</span>listen <span class="token number">443</span> ssl http2<span class="token punctuation">;</span>listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:443 ssl http2<span class="token punctuation">;</span>server_name ycy.damao2250.com<span class="token punctuation">;</span>root /var/www/ycy<span class="token punctuation">;</span>   ssl_certificate <span class="token string">"/opt/ssl/ycy.damao2250.com/ycy.damao2250.com.pem"</span><span class="token punctuation">;</span>   ssl_certificate_key <span class="token string">"/opt/ssl/ycy.damao2250.com/ycy.damao2250.com.key"</span><span class="token punctuation">;</span>   ssl_session_cache shared:SSL:1m<span class="token punctuation">;</span>   ssl_session_timeout  10m<span class="token punctuation">;</span>   ssl_ciphers HIGH:<span class="token operator">!</span>aNULL:<span class="token operator">!</span>MD5<span class="token punctuation">;</span>   ssl_prefer_server_ciphers on<span class="token punctuation">;</span>   <span class="token comment"># Load configuration files for the default server block.</span>   include /etc/nginx/default.d/*.conf<span class="token punctuation">;</span>   location / <span class="token punctuation">&#123;</span>   <span class="token punctuation">&#125;</span>   error_page <span class="token number">404</span> /404.html<span class="token punctuation">;</span>       location <span class="token operator">=</span> /40x.html <span class="token punctuation">&#123;</span>   <span class="token punctuation">&#125;</span>   error_page <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span> /50x.html<span class="token punctuation">;</span>       location <span class="token operator">=</span> /50x.html <span class="token punctuation">&#123;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="部署Gitlab"><a href="#部署Gitlab" class="headerlink" title="部署Gitlab"></a>部署Gitlab</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 安装依赖软件</span>yum <span class="token operator">-</span>y install policycoreutils  policycoreutils<span class="token operator">-</span>python openssh<span class="token operator">-</span>server openssh<span class="token operator">-</span>clients postfix<span class="token comment">// but already installed and latest version  &amp;&amp;　Nothing to do</span><span class="token comment">// 开启postfix， postfix支持gitlab发信功能，设置postfix开机自启</span>systemctl enable postfix <span class="token operator">&amp;&amp;</span> systemctl start postfix<span class="token comment">// 如若 postfix 无法启动</span><span class="token comment">// 修改 /etc/postfix/main.cf</span>inet_interfaces <span class="token operator">=</span> allinet_protocols <span class="token operator">=</span> ipv4systemctl start postfixsystemctl enable postfix<span class="token comment">// 如无法ssh来远程连接主机的 开启 ssh </span>systemctl enable sshdsystemctl start sshd<span class="token comment">// 安装防火墙</span>yum install firewalld systemd <span class="token operator">-</span>y<span class="token comment">// 开启防火墙</span>service firewalld start<span class="token comment">// 添加http服务到firewalld,pemmanent表示永久生效，若不加--permanent系统下次启动后就会失效。</span>firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>permanent <span class="token operator">--</span>add<span class="token operator">-</span>service<span class="token operator">=</span>http<span class="token comment">// 重启防火墙</span>systemctl reload firewalld<span class="token comment">// 下载gitlab</span>wget https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>tuna<span class="token punctuation">.</span>tsinghua<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>gitlab<span class="token operator">-</span>ce<span class="token operator">/</span>yum<span class="token operator">/</span>el7<span class="token operator">/</span>gitlab<span class="token operator">-</span>ce<span class="token operator">-</span><span class="token number">12.5</span><span class="token number">.0</span><span class="token operator">-</span>ce<span class="token punctuation">.</span><span class="token number">0.</span>el7<span class="token punctuation">.</span>x86_64<span class="token punctuation">.</span>rpm<span class="token comment">// 安装 ce代表社区版 ee代表企业版</span>rpm <span class="token operator">-</span>i gitlab<span class="token operator">-</span>ce<span class="token operator">-</span><span class="token number">12.5</span><span class="token number">.0</span><span class="token operator">-</span>ce<span class="token punctuation">.</span><span class="token number">0.</span>el7<span class="token punctuation">.</span>x86_64<span class="token punctuation">.</span>rpm<span class="token comment">// 修改配置文件 gitlab.rb  使用外部nginx 不使用内部nginx</span>vim <span class="token operator">/</span>etc<span class="token operator">/</span>gitlab<span class="token operator">/</span>gitlab<span class="token punctuation">.</span>rbexternal_url <span class="token string">'http://120.79.166.206:8888'</span><span class="token comment">// 重置并启动gitlab</span>gitlab<span class="token operator">-</span>ctl stopgitlab<span class="token operator">-</span>ctl reconfiguregitlab<span class="token operator">-</span>ctl restart<span class="token comment">// 如果执行 gitlab-ctl reconfigure 卡死在 ruby_block[authorize Grafana with GitLab] action run   就强制结束  ctrl+c 然后</span>systemctl restart gitlab<span class="token operator">-</span>runsvdir<span class="token comment">// 再</span>gitlab<span class="token operator">-</span>ctl stopgitlab<span class="token operator">-</span>ctl reconfiguregitlab<span class="token operator">-</span>ctl restart<span class="token comment">// 访问报502。原因是nginx用户无法访问gitlab用户的socket文件。 重启gitlab需要重新授权</span>chmod <span class="token operator">-</span><span class="token constant">R</span> o<span class="token operator">+</span>x <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>opt<span class="token operator">/</span>gitlab<span class="token operator">/</span>gitlab<span class="token operator">-</span>rails<span class="token comment">// 访问502也可能是  内存太小 超时了</span><span class="token comment">// 初始账户: root 密码:5iveL!fe</span><span class="token comment">// 完全卸载GitLab</span><span class="token comment">// 一. 停止gitlab</span><span class="token comment">//     sudo gitlab-ctl stop</span><span class="token comment">// 二、卸载gitlab（这块注意了，看看是gitlab-ce版本还是gitlab-ee版本，别写错误了）</span><span class="token comment">//     sudo rpm -e gitlab-ce</span><span class="token comment">// 三、查看gitlab进程</span><span class="token comment">//     ps -ef|grep gitlab</span><span class="token comment">// 　    杀掉第一个守护进程(runsvdir -P /opt/gitlab/service log)</span><span class="token comment">// 　    kill -9 4473</span><span class="token comment">// 　    再次查看gitlab进程是否存在</span><span class="token comment">// 四、删除gitlab文件</span><span class="token comment">//         find / -name *gitlab*|xargs rm -rf      删除所有包含gitlab的文件及目录</span><span class="token comment">//         find / -name gitlab |xargs rm -rf </span><span class="token comment">//         删除gitlab-ctl uninstall时自动在root下备份的配置文件（ls /root/gitlab* 看看有没有，有也删除）</span><span class="token comment">// 通过以上几步就可以彻底卸载gitlab</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下的Nginx及OpenResty的基础使用</title>
      <link href="/2019/12/31/Windows%E4%B8%8B%E7%9A%84Nginx%E5%8F%8AOpenResty%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/12/31/Windows%E4%B8%8B%E7%9A%84Nginx%E5%8F%8AOpenResty%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx基础命令"><a href="#Nginx基础命令" class="headerlink" title="Nginx基础命令"></a>Nginx基础命令</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 启动</span>start nginxnginx<span class="token punctuation">.</span>exe<span class="token comment">// 停止</span>nginx <span class="token operator">-</span>s stop   <span class="token comment">// 快速停止，不保存信息</span>nginx <span class="token operator">-</span>s quit   <span class="token comment">// 完整有序停止并保存信息</span><span class="token comment">// 重新载入</span>nginx <span class="token operator">-</span>s reload<span class="token comment">// 重新打开日志文件</span>nginx <span class="token operator">-</span>s reopen<span class="token comment">// 查看 Nginx 版本</span>nginx <span class="token operator">-</span>v  <span class="token comment">// 简单</span>nginx <span class="token operator">-</span><span class="token constant">V</span>  <span class="token comment">// 详细</span><span class="token comment">// 查看 Nginx 是否正常启动</span>tasklist<span class="token operator">/</span>fi <span class="token string">"imagename eq nginx.exe"</span><span class="token comment">// 杀对应pid进程</span>taskklii <span class="token operator">/</span>pid <span class="token punctuation">&#123;</span>pid<span class="token punctuation">&#125;</span><span class="token comment">// 强制杀对应pid进程</span>taskklii <span class="token operator">/</span>pid <span class="token punctuation">&#123;</span>pid<span class="token punctuation">&#125;</span> <span class="token operator">/</span>f<span class="token comment">// 杀nginx全部进程</span>taskkill <span class="token operator">/</span>im nginx<span class="token punctuation">.</span>exe <span class="token operator">/</span>f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Nginx配置详解"><a href="#Nginx配置详解" class="headerlink" title="Nginx配置详解"></a>Nginx配置详解</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ########### 每个指令必须有分号结束。#################</span><span class="token comment">// #user administrator administrators;  #配置用户或者组，默认为nobody nobody。</span><span class="token comment">// #worker_processes 2;  #允许生成的进程数，默认为1</span><span class="token comment">// #pid /nginx/pid/nginx.pid;   #指定nginx进程运行文件存放地址</span><span class="token comment">// error_log log/error.log debug;  #制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg</span><span class="token comment">// events &#123;</span><span class="token comment">//     accept_mutex on;   #设置网路连接序列化，防止惊群现象发生，默认为on</span><span class="token comment">//     multi_accept on;  #设置一个进程是否同时接受多个网络连接，默认为off</span><span class="token comment">//     #use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span><span class="token comment">//     worker_connections  1024;    #最大连接数，默认为512</span><span class="token comment">// &#125;</span><span class="token comment">// http &#123;</span><span class="token comment">//     include       mime.types;   #文件扩展名与文件类型映射表</span><span class="token comment">//     default_type  application/octet-stream; #默认文件类型，默认为text/plain</span><span class="token comment">//     #access_log off; #取消服务日志    </span><span class="token comment">//     log_format myFormat '$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'; #自定义格式</span><span class="token comment">//     access_log log/access.log myFormat;  #combined为日志格式的默认值</span><span class="token comment">//     sendfile on;   #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。</span><span class="token comment">//     sendfile_max_chunk 100k;  #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。</span><span class="token comment">//     keepalive_timeout 65;  #连接超时时间，默认为75s，可以在http，server，location块。</span><span class="token comment">//     upstream mysvr &#123;   </span><span class="token comment">//       server 127.0.0.1:7878;</span><span class="token comment">//       server 192.168.10.121:3333 backup;  #热备</span><span class="token comment">//     &#125;</span><span class="token comment">//     error_page 404 https://www.baidu.com; #错误页</span><span class="token comment">//     server &#123;</span><span class="token comment">//         keepalive_requests 120; #单连接请求上限次数。</span><span class="token comment">//         listen       4545;   #监听端口</span><span class="token comment">//         server_name  127.0.0.1;   #监听地址       </span><span class="token comment">//         location  ~*^.+$ &#123;       #请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。</span><span class="token comment">//            #root path;  #根目录</span><span class="token comment">//            #index vv.txt;  #设置默认页</span><span class="token comment">//            proxy_pass  http://mysvr;  #请求转向mysvr 定义的服务器列表</span><span class="token comment">//            deny 127.0.0.1;  #拒绝的ip</span><span class="token comment">//            allow 172.18.5.54; #允许的ip           </span><span class="token comment">//         &#125; </span><span class="token comment">//     &#125;</span><span class="token comment">// &#125;</span><span class="token comment">// # 1.$remote_addr 与 $http_x_forwarded_for 用以记录客户端的ip地址；</span><span class="token comment">// # 2.$remote_user ：用来记录客户端用户名称；</span><span class="token comment">// # 3.$time_local ： 用来记录访问时间与时区；</span><span class="token comment">// # 4.$request ： 用来记录请求的url与http协议；</span><span class="token comment">// # 5.$status ： 用来记录请求状态；成功是200；</span><span class="token comment">// # 6.$body_bytes_s ent ：记录发送给客户端文件主体内容大小；</span><span class="token comment">// # 7.$http_referer ：用来记录从那个页面链接访问过来的；</span><span class="token comment">// # 8.$http_user_agent ：记录客户端浏览器的相关信息；</span><span class="token comment">// # 1、全局块（events块之前）：配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。</span><span class="token comment">// # 2、events块：配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。</span><span class="token comment">// # 3、http块：可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件，连接超时时间，单连接请求数等。</span><span class="token comment">// # 4、server块：配置虚拟主机的相关参数，一个http中可以有多个server。</span><span class="token comment">// # 5、location块：配置请求的路由，以及各种页面的处理情况。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> OpenResty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决elment-ui折叠和收缩导航栏延时动画效果</title>
      <link href="/2019/12/12/%E8%A7%A3%E5%86%B3elment-ui%E6%8A%98%E5%8F%A0%E5%92%8C%E6%94%B6%E7%BC%A9%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%BB%B6%E6%97%B6%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/"/>
      <url>/2019/12/12/%E8%A7%A3%E5%86%B3elment-ui%E6%8A%98%E5%8F%A0%E5%92%8C%E6%94%B6%E7%BC%A9%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%BB%B6%E6%97%B6%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="解决elment-ui折叠和收缩导航栏延时动画效果"><a href="#解决elment-ui折叠和收缩导航栏延时动画效果" class="headerlink" title="解决elment-ui折叠和收缩导航栏延时动画效果"></a>解决elment-ui折叠和收缩导航栏延时动画效果</h2><ul><li><p>解决方法：</p><ul><li>最外层包一层div</li><li>通过div类名设置样式穿透<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.layout-aside-menu /deep/ .collapse-transition</span> <span class="token punctuation">&#123;</span>  <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> 0s height<span class="token punctuation">,</span> 0s padding-top<span class="token punctuation">,</span> 0s padding-bottom<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> 0s height<span class="token punctuation">,</span> 0s padding-top<span class="token punctuation">,</span> 0s padding-bottom<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.layout-aside-menu /deep/ .horizontal-collapse-transition</span> <span class="token punctuation">&#123;</span>  <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> 0s width<span class="token punctuation">,</span> 0s padding-left<span class="token punctuation">,</span> 0s padding-right<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> 0s width<span class="token punctuation">,</span> 0s padding-left<span class="token punctuation">,</span> 0s padding-right<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.layout-aside-menu /deep/ .horizontal-collapse-transition .el-submenu__title .el-submenu__icon-arrow</span> <span class="token punctuation">&#123;</span>  <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> 0s<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> 0s<span class="token punctuation">;</span>  <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>补充点：</p><ul><li>stylus的样式穿透 使用 <code>&gt;&gt;&gt;</code><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*   外层 >>> 第三方组件 &#123;    样式  &#125; */</span><span class="token selector">.wrapper >>> .swiper-pagination-bullet-active</span><span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>sass和less的样式穿透 使用 <code>/deep/</code><pre class="line-numbers language-css" data-language="css"><code class="language-css">  <span class="token comment">/*     外层 /deep/ 第三方组件 &#123;      样式    &#125;  */</span><span class="token selector">.wrapper /deep/ .swiper-pagination-bullet-active</span><span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Element-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-indigo使用遇到的问题</title>
      <link href="/2019/12/11/hexo-theme-indigo%E4%BD%BF%E7%94%A8%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2019/12/11/hexo-theme-indigo%E4%BD%BF%E7%94%A8%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-主题地址"><a href="#Hexo-主题地址" class="headerlink" title="Hexo 主题地址"></a>Hexo 主题地址</h1><ul><li><a href="https://github.com/yscoder/hexo-theme-indigo">https://github.com/yscoder/hexo-theme-indigo</a><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2></li><li>主页的导航栏关闭的×按钮，以及搜索按钮，分享按钮，每次点击出现动画前都会新打开一个about:blank#blocked页面。查看html发现相应的 a标签中都有 target=’_blank’</li><li>可能是在编译的时候默认把a标签的target属性自动补上了，要是a标签本身就有target这个属性就不会往上加了</li></ul><h3 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h3><ul><li>菜单关闭按钮<ul><li>打开themes\indigo\layout_partial\menu.ejs</li><li>找到 id=”menu-off” 的a标签</li><li>在a标签上新增 target=””</li></ul></li><li>搜索图标菜单关闭按钮<ul><li>打开themes\indigo\layout_partial\header.ejs</li><li>找到 id=”search” 的a标签</li><li>在a标签上新增 target=””</li></ul></li><li>右侧分享按钮<ul><li>打开 themes\indigo\layout_partial\header.ejs</li><li>找到 id=”menuShare” 的a标签</li><li>在a标签上新增 target=””</li></ul></li><li>点击赞赏按钮、关闭赞赏框<ul><li>打开 themes\indigo\layout_partial\post.ejs</li><li>找到 id=”rewardBtn” 的a标签</li><li>在a标签上新增 target=””</li><li>打开 themes\indigo\layout_partial\post\reward.ejs</li><li>找到 id=”rewardOff” 的a标签</li><li>在a标签上新增 target=””<h2 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h2></li></ul></li><li>上传GitHub是网络连接超时<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fatal: unable to access <span class="token string">'https://github.com/Damao2250/damao2250.github.io/'</span><span class="token builtin class-name">:</span> OpenSSL SSL_read: Connection was reset, errno <span class="token number">10054</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>这是因为配置文件配置<code>deploy</code>仓库地址为https的原因</li></ul><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><ul><li>配置<code>_config.yml</code>下的<code>deploy</code>的<code>repo</code>为<code>git@xxx.git</code><br>```bash<br>deploy:<br>type: ‘git’<br>repo: ‘<a href="mailto:&#x67;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#x68;&#117;&#98;&#46;&#x63;&#111;&#109;">&#x67;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#x68;&#117;&#98;&#46;&#x63;&#111;&#109;</a>:Damao2250/damao2250.github.io.git’<br>branch: ‘master’<br>···</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSDoc注释规范</title>
      <link href="/2019/12/02/JSDoc%E6%B3%A8%E9%87%8A%E8%A7%84%E8%8C%83/"/>
      <url>/2019/12/02/JSDoc%E6%B3%A8%E9%87%8A%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/** * @abstract  (同义：@virtual) * 该成员必须由继承者实现（或重写） * This member must be implemented (or overridden) by the inheritor. *  * @access * 指定此成员的访问级别（私有，程序包私有，公共或受保护）。 * Specify the access level of this member (private, package-private, public, or protected). *  * @alias * 将成员视为具有不同的名称。 * Treat a member as if it had a different name. *  * @async * 表示一个函数是异步的。 * Indicate that a function is asynchronous. *  * @augments * 指示符号从父符号继承并添加到父符号。 * Indicate that a symbol inherits from, and adds to, a parent symbol. *  * @author * 标识项目的作者。 * Identify the author of an item. *  * @borrows * 该对象使用来自另一个对象的东西 * This object uses something from another object. *  * @callback * 记录回调函数。 * Document a callback function. *  * @class (同义：@constructor) * 该功能旨在通过"new"关键字来调用。 * This function is intended to be called with the "new" keyword. *  * @classdesc * 使用以下文本描述整个类 * Use the following text to describe the entire class. *  * @constant (同义：@const) * 将对象记录为常量 * Document an object as a constant. *  * @constructs * 该函数成员将是上一类的构造函数 * This function member will be the constructor for the previous class. *  * @copyright * 记录一些版权信息 * Document some copyright information. *  * @default * 记录默认值 * Document the default value. *  * @deprecated * 记录这不再是首选方法 * Document that this is no longer the preferred way. *  * @description (同义：@desc) * 描述一个符号 * Describe a symbol. *  * @enum * 记录相关属性的集合 * Document a collection of related properties. *  * @event * 记录事件 * Document an event. *  * @example * 提供有关如何使用已记录项目的示例 * Provide an example of how to use a documented item. *  * @exports * 标识由JavaScript模块导出的成员 * Identify the member that is exported by a JavaScript module. *  * @external(同义：@host) * 标识外部类，名称空间或模块 * Identifies an external class, namespace, or module. *  * @file(同义：@fileoverview,@overview) * 描述一个文件 * Describe a file. *  * @fires(同义：@emits) * 描述此方法可能触发的事件 * Describe the events this method may fire. *  * @function(同义：@function,@method) * 描述一个函数或方法 * Describe a function or method. *  * @generator * 表示函数是生成器函数 * Indicate that a function is a generator function. *  * @global * 记录全局对象 * Document a global object. *  * @hideconstructor * 指示不应显示构造函数 * Indicate that the constructor should not be displayed. *  * @ignore * 省略文档中的符号 * Omit a symbol from the documentation. *  * @implements * 该符号实现一个​​接口 * This symbol implements an interface. *  * @inheritdoc * 指示符号应继承其父级的文档 * Indicate that a symbol should inherit its parent's documentation. *  * @inner * 记录内部对象 * Document an inner object. *  * @instance * 记录实例成员 * Document an instance member. *  * @interface * 此符号是其他人可以实现的接口 * This symbol is an interface that others can implement. *  * @kind * 这是什么符号  * What kind of symbol is this? *  * @lends * 在对象文字上记录属性，就好像它们属于具有给定名称的符号一样 * Document properties on an object literal as if they belonged to a symbol with a given name. *  * @license * 标识适用于此代码的许可证 * Identify the license that applies to this code. *  * @listens * 列出符号侦听的事件 * List the events that a symbol listens for. *  * @member * 记录成员 * Document a member. *  * @memberof * 该符号属于父符号  * This symbol belongs to a parent symbol. *  * @mixes * 该对象混合了另一个对象的所有成员 * This object mixes in all the members from another object. *  * @mixin * 记录一个混合对象 * Document a mixin object. *  * @module * 编写一个JavaScript模块 * Document a JavaScript module. *  * @name * 记录对象的名称 * Document the name of an object. *  * @namespace * 记录名称空间对象 * Document a namespace object. *  * @override * 指示符号覆盖其父代 * Indicate that a symbol overrides its parent. *  * @package * 此符号是软件包专用的 * This symbol is meant to be package-private. *  * @param(同义：@arg,@argument) * 将参数记录到函数中 * Document the parameter to a function. *  * @private * 此符号是专用的 * This symbol is meant to be private. *  * @property(同义：@prop) * 记录对象的属性 * Document a property of an object. *  * @protected * 此符号用于保护 * This symbol is meant to be protected. *  * @public * 此符号是公开的 * This symbol is meant to be public. *  * @readonly * 该符号是只读的 * This symbol is meant to be read-only. *  * @requires * 该文件需要一个JavaScript模块 * This file requires a JavaScript module. *  * @returns * 记录函数的返回值 * Document the return value of a function. *  * @see * 有关更多信息，请参考其他一些文档 * Refer to some other documentation for more information. *  * @since * 何时添加此功能 * When was this feature added? *  * @static * 记录静态成员 * Document a static member. *  * @summary * 完整说明的简短版本 * A shorter version of the full description. *  * @this * "this"关键字在这里指的是什么 * What does the 'this' keyword refer to here? *  * @throws(同义：@exception) * 描述可能引发的错误 * Describe what errors could be thrown. *  * @todo * 记录要完成的任务 * Document tasks to be completed. *  * @tutorial(教程) * 插入指向随附的教程文件的链接 * Insert a link to an included tutorial file. *  * @type * 记录对象的类型 * Document the type of an object. *  * @typedef * 记录自定义类型 * Document a custom type. *  * @variation * 区分具有相同名称的不同对象 * Distinguish different objects with the same name. *  * @version * 记录项目的版本号 * Documents the version number of an item. *  * @yields(同义：@yield) * 记录生成器函数产生的值 * Document the value yielded by a generator function. *  */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 项目规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用git同时提交到两个远程库</title>
      <link href="/2019/11/27/%E4%BD%BF%E7%94%A8git%E5%90%8C%E6%97%B6%E6%8F%90%E4%BA%A4%E5%88%B0%E4%B8%A4%E4%B8%AA%E8%BF%9C%E7%A8%8B%E5%BA%93/"/>
      <url>/2019/11/27/%E4%BD%BF%E7%94%A8git%E5%90%8C%E6%97%B6%E6%8F%90%E4%BA%A4%E5%88%B0%E4%B8%A4%E4%B8%AA%E8%BF%9C%E7%A8%8B%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="使用git同时提交到多个远程库"><a href="#使用git同时提交到多个远程库" class="headerlink" title="使用git同时提交到多个远程库"></a>使用git同时提交到多个远程库</h1><h2 id="法1"><a href="#法1" class="headerlink" title="法1"></a>法1</h2><p>1、添加第一个仓库：<br>  <pre class="line-numbers language-js" data-language="js"><code class="language-js">git remote add origin https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>gitlab<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token constant">XXX</span><span class="token operator">/</span>xxx<span class="token punctuation">.</span>git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>2、添加第二个仓库：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">git remote set<span class="token operator">-</span>url <span class="token operator">--</span>add origin https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token constant">XXX</span><span class="token operator">/</span>xxx<span class="token punctuation">.</span>git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>如果还有其他仓库，就以此方式继续添加<br>3、提交<pre class="line-numbers language-js" data-language="js"><code class="language-js">git push origin <span class="token operator">--</span>all<span class="token comment">// or</span>git push<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>==================================================================<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// tips：</span><span class="token comment">// 打开.git/config，可以看到这样的配置：</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[remote "origin"]  url = https://gitlab.com/XXX/xxx.git  fetch = +refs/heads/*:refs/remotes/origin/*  url = https://github.com/XXX/xxx.git</span><span class="token template-punctuation string">`</span></span><span class="token comment">// 刚才的命令其实就是添加了这些配置,也可以不用命令行，可以直接编辑该文件，添加对应的url即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="法2"><a href="#法2" class="headerlink" title="法2"></a>法2</h2></li><li>直接添加另一个远程仓库地址<pre class="line-numbers language-js" data-language="js"><code class="language-js">git remote add <span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token punctuation">[</span>远程库地址<span class="token punctuation">]</span>git push <span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token comment">// [name] 取个远程库名并连接远程地址  然后push上去      git默认的[name]为origin</span><span class="token comment">// 如：</span><span class="token comment">// git remote add test https://github.com/XXX/xxx.git</span><span class="token comment">// git push test</span><span class="token comment">// 但是想同步两个远程仓库必须同时push &amp;&amp; pull</span><span class="token comment">// git push origin</span><span class="token comment">// git push test</span><span class="token comment">// git pull origin</span><span class="token comment">// git pull test</span><span class="token comment">// 查看.gigt中的config文件</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[remote "origin"]    url = https://gitlab.com/XXX/xxx.git    fetch = +refs/heads/*:refs/remotes/origin/*[branch "master"]    remote = origin    merge = refs/heads/master[remote "test"]    url = https://github.com/XXX/xxx.git  fetch = +refs/heads/*:refs/remotes/test/*</span><span class="token template-punctuation string">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 版本控制工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue的一些优化</title>
      <link href="/2019/11/26/vue%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BC%98%E5%8C%96/"/>
      <url>/2019/11/26/vue%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="1-路由懒加载"><a href="#1-路由懒加载" class="headerlink" title="1. 路由懒加载"></a>1. 路由懒加载</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>path<span class="token operator">:</span> <span class="token string">'/about'</span><span class="token punctuation">,</span>name<span class="token operator">:</span> <span class="token string">'about'</span><span class="token punctuation">,</span><span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/about/about'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-不生成-map-文件"><a href="#2-不生成-map-文件" class="headerlink" title="2. 不生成.map 文件"></a>2. 不生成.map 文件</h2><ul><li>webpack默认会生成map文件，map文件是用来调试代码的。此外，这里还要注意sourcemap的配置分 开发（dev）和线上（build）两个地方配置，开发我们就不管了，就用默认的，线上我们是不需要这个代码的。<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 配置 vue.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  productionSourceMap<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="3-Element组件按需加载"><a href="#3-Element组件按需加载" class="headerlink" title="3. Element组件按需加载"></a>3. Element组件按需加载</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 安装 babel-plugin-component：</span>npm install babel<span class="token operator">-</span>plugin<span class="token operator">-</span>component <span class="token operator">-</span><span class="token constant">D</span><span class="token comment">// 修改babel.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  presets<span class="token operator">:</span> <span class="token punctuation">[</span>  <span class="token punctuation">[</span>    <span class="token string">'@vue/app'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      useBuiltIns<span class="token operator">:</span> <span class="token string">"entry"</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">[</span>      <span class="token string">"component"</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token string">"libraryName"</span><span class="token operator">:</span> <span class="token string">"element-ui"</span><span class="token punctuation">,</span>        <span class="token string">"styleLibraryName"</span><span class="token operator">:</span> <span class="token string">"theme-chalk"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-echart优化"><a href="#4-echart优化" class="headerlink" title="4. echart优化"></a>4. echart优化</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 安装 babel-plugin-equire</span>npm install babel<span class="token operator">-</span>plugin<span class="token operator">-</span>equire <span class="token operator">-</span><span class="token constant">D</span><span class="token comment">// 修改babel.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">'equire'</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// others</span><span class="token punctuation">&#125;</span><span class="token comment">// 新建echarts.js</span><span class="token keyword">const</span> echarts <span class="token operator">=</span> <span class="token function">equire</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token string">'title'</span><span class="token punctuation">,</span>  <span class="token string">'legend'</span><span class="token punctuation">,</span>  <span class="token string">'grid'</span><span class="token punctuation">,</span>  <span class="token string">'line'</span><span class="token punctuation">,</span>  <span class="token string">'bar'</span><span class="token punctuation">,</span>  <span class="token string">'pie'</span><span class="token punctuation">,</span>  <span class="token comment">// others</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> echarts<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>或者<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 新建echarts.js</span><span class="token keyword">import</span> echarts <span class="token keyword">from</span> <span class="token string">'echarts/lib/echarts'</span><span class="token keyword">import</span> <span class="token string">'echarts/lib/chart/line'</span><span class="token keyword">import</span> <span class="token string">'echarts/lib/chart/lines'</span><span class="token keyword">import</span> <span class="token string">'echarts/lib/chart/radar'</span><span class="token keyword">import</span> <span class="token string">'echarts/lib/component/legend'</span><span class="token keyword">import</span> <span class="token string">'echarts/lib/component/tooltip'</span><span class="token keyword">import</span> <span class="token string">'echarts/lib/component/grid'</span><span class="token keyword">export</span> <span class="token keyword">default</span> echarts<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 然后再到需要引用echarts的页面进行引入</span><span class="token keyword">import</span> echarts <span class="token keyword">from</span> <span class="token string">'../echarts'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h2 id="5-图片的压缩合并"><a href="#5-图片的压缩合并" class="headerlink" title="5. 图片的压缩合并"></a>5. 图片的压缩合并</h2><ul><li><a href="https://tinypng.com/">无损压缩图片：https://tinypng.com/</a></li></ul><h2 id="6-添加分析工具"><a href="#6-添加分析工具" class="headerlink" title="6. 添加分析工具"></a>6. 添加分析工具</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 安装</span>npm i webpack<span class="token operator">-</span>bundle<span class="token operator">-</span>analyzer<span class="token comment">// 在 vue.config.js 中添加</span>module<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">&#123;</span>  <span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* 添加分析工具 */</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">'production'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>npm_config_report<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      config      <span class="token punctuation">.</span><span class="token function">plugin</span><span class="token punctuation">(</span><span class="token string">'webpack-bundle-analyzer'</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack-bundle-analyzer'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>BundleAnalyzerPlugin<span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">'prefetch'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// 启动</span>npm run build –report<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PicGo+Github搭建图床</title>
      <link href="/2019/11/13/PicGo+Github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/2019/11/13/PicGo+Github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<ol><li>图床是什么</li></ol><ul><li>图床,是专门储存图片的空间,同时允许你为图片创建链接的网上空间</li></ul><ol start="2"><li>图床可以干什么</li></ol><ul><li>使用Markdown写作用到图片时，不可避免的就要用到图床，可以方便快捷的使用图片链接，在自己博客中插入的图片链接就可以随时随地在线预览了，并且不会因为任何意外原因无法查看</li></ul><ol start="3"><li>搭建一个简易的图床 （PicGo + Github）</li></ol><ul><li><p>下载PicGo：<a href="https://github.com/Molunerfinn/PicGo">https://github.com/Molunerfinn/PicGo</a><br>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E4%B8%8B%E8%BD%BD1.jpg" alt="下载PicGo1"></p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E4%B8%8B%E8%BD%BD2.jpg" alt="下载PicGo2"></p></li></ul><ol start="4"><li>创建一个公开仓库，</li></ol><ul><li>创建一个公开仓库，点击右上角的个人头像出现下拉菜单，然后点倒数第二项 设置（英文版为 Setting），然后点左侧菜单的最后一个 Developer setting，然后再点左侧菜单的最后一个 Personal access tokens，然后在右侧有一个 Generate new token 的按钮，点击它，然后选择 repo，然后直接拉到最下面点击绿色的按钮 Generate token。之后会生成一个 token 码 ，需要注意的是这个 token 只显示一次！所以可以先把他复制保存的其他地方。其余三项不用填，直接确定然后设为默认图床即可</li><li>注意新版的仓库名不用带<code>.git</code>，即：<code>Damao2250/FileTransfer</code><br>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E8%AE%BE%E7%BD%AE.jpg" alt="图床设置"></li></ul><ol start="5"><li>使用</li></ol><ul><li><p>把保存的图片拖到上传区的虚线框里或者直接点击上传即可。提示上传成功之后即可在相册的那栏里看到上传的照片，然后点对应图片下面的文本框似的按钮就可以直接复制外链地址然后粘贴到想要显示图片的地方就可以了<br>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E8%AE%BE%E7%BD%AE1.jpg" alt="图床使用1"></p><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E8%AE%BE%E7%BD%AE3.jpg" alt="图床使用2"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PicGo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vuex官方例子解读</title>
      <link href="/2019/11/13/Vuex%E5%AE%98%E6%96%B9%E4%BE%8B%E5%AD%90%E8%A7%A3%E8%AF%BB/"/>
      <url>/2019/11/13/Vuex%E5%AE%98%E6%96%B9%E4%BE%8B%E5%AD%90%E8%A7%A3%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">npm i vuex<span class="token comment">// or</span>yarn add vuex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Vuex-是什么"><a href="#Vuex-是什么" class="headerlink" title="Vuex 是什么"></a>Vuex 是什么</h2><ul><li>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。<br>它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。<h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2></li><li>State<ul><li>单一状态树，用一个对象就包含了全部的应用层级状态</li></ul></li><li>Getter<ul><li>相当于 State 的计算属性</li></ul></li><li>Mutation<ul><li>提交 mutation是更改 store 中状态的唯一方法, 相当于事件</li></ul></li><li>Action<ul><li>类似于 mutation, 但 Action 提交的是 mutation，而不是直接变更状态，而且可以包含任意异步操作</li></ul></li><li>Module<ul><li>将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter</li></ul></li><li>官方购物车项目结构<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">├── index.html├── main.js├── api│   └── <span class="token punctuation">..</span>. <span class="token comment"># 抽取出API请求</span>├── components│   ├── App.vue│   └── <span class="token punctuation">..</span>.└── store    ├── index.js          <span class="token comment"># 我们组装模块并导出 store 的地方</span>    ├── actions.js        <span class="token comment"># 根级别的 action</span>    ├── mutations.js      <span class="token comment"># 根级别的 mutation</span>    └── modules        ├── cart.js       <span class="token comment"># 购物车模块</span>        └── products.js   <span class="token comment"># 产品模块</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2></li><li>在 mutation-types.js 中定义类型常量，默认全部大写 —&gt; 把常量放在单独的文件中可以让你的代码合作者或者迭代者对整个 app 包含的 mutation 一目了然</li><li>Vuex- Action的 { commit }<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// Vuex 中 使用 Action 处理异步请求时，常规写法如下</span><span class="token function-variable function">getMenuAction</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>    context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'SET_MENU_LIST'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'承保2'</span><span class="token punctuation">,</span><span class="token string">'核保2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 我们也可以使用如下简化写法，如下</span>actions<span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">getMenuAction</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>commit<span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>        <span class="token function">commit</span><span class="token punctuation">(</span>‘<span class="token constant">SET_MENU_LIST</span>’<span class="token punctuation">,</span><span class="token punctuation">[</span>‘承保<span class="token number">2</span>’<span class="token punctuation">,</span>’核保<span class="token number">2</span>’<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// &#123; commit &#125; 是变量解构赋值</span>context <span class="token operator">=</span> <span class="token punctuation">&#123;</span>     dispatch<span class="token operator">:</span> local<span class="token punctuation">.</span>dispatch<span class="token punctuation">,</span>    commit<span class="token operator">:</span> local<span class="token punctuation">.</span>commit<span class="token punctuation">,</span>    getters<span class="token operator">:</span> local<span class="token punctuation">.</span>getters<span class="token punctuation">,</span>    state<span class="token operator">:</span> local<span class="token punctuation">.</span>state<span class="token punctuation">,</span>    rootGetters<span class="token operator">:</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">,</span>    rootState<span class="token operator">:</span> store<span class="token punctuation">.</span>state<span class="token punctuation">&#125;</span><span class="token comment">// 常规写法 context.commit = context.local.commit</span><span class="token comment">// 使用变量解构赋值后 &#123; commit &#125; 相当于 commit= context.commit</span><span class="token comment">// state 同理</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vuex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Taro实现微信小程序登录流程</title>
      <link href="/2019/11/13/%E4%BD%BF%E7%94%A8Taro%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B/"/>
      <url>/2019/11/13/%E4%BD%BF%E7%94%A8Taro%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><pre><code>![小程序登录流程](https://raw.githubusercontent.com/Damao2250/FileTransfer/master/Taro%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B.png)</code></pre><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><pre><code>1. 调用Taro.login()获取登录凭证code；2. 调用Taro.request()将code传到服务器；3. 服务器端调用微信登录校验接口（appid+appsecret+code），获得session_key+openid；4. 服务器端生成AUTH_TICKET（相当于userId），使用AUTH_TICKET为key，session_key+openid为value的形式存在服 务器，并将AUTH_TICKET传送给客户端；5. 客户端本地存储AUTH_TICKET，登录成功！6. 下次登录时可以用AUTH_TICKET传输到服务器端验证登录态是否过期，未过期则登录成功。</code></pre><h2 id="获取用户信息"><a href="#获取用户信息" class="headerlink" title="获取用户信息"></a>获取用户信息</h2><ul><li>获取用户信息一定要用户主动点击按钮授权<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>Button openType<span class="token operator">=</span><span class="token string">"getUserInfo"</span> onGetUserInfo<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>onGetUserInfo<span class="token punctuation">&#125;</span> type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>微信授权登录，获取用户信息<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span><span class="token function">onGetUserInfo</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>detail<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>errMsg <span class="token operator">===</span> “getUserInfo<span class="token operator">:</span>ok”<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    Taro<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        title<span class="token operator">:</span> ‘授权成功，正在登录…’<span class="token punctuation">,</span>        icon<span class="token operator">:</span> ‘none’<span class="token punctuation">,</span>        mask<span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        Taro<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            title<span class="token operator">:</span> ‘未授权<span class="token punctuation">,</span>请授权登录！’<span class="token punctuation">,</span>            icon<span class="token operator">:</span> ‘none’<span class="token punctuation">,</span>            mask<span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul><li><p>Taro 支持使用 <code>async functions</code> 来让开发者获得不错的异步编程体验，开启 <code>async functions</code> 支持需要安装包 <code>@tarojs/async-await</code></p><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">$ yarn add @tarojs&#x2F;async-await# 或者使用 npm$ npm install –save @tarojs&#x2F;async-await<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>随后在项目入口文件 <code>app.js</code> 中直接 <code>import</code> ，就可以开始使用 <code>async functions</code> 功能了</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// src/app.js</span><span class="token keyword">import</span> ‘@tarojs<span class="token operator">/</span>async<span class="token operator">-</span><span class="token keyword">await</span>’<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>值得注意的事，使用 @tarojs/async-await 一定要记得按照 开发前注意: <a href="https://taro-docs.jd.com/taro/docs/before-dev-remind.html">https://taro-docs.jd.com/taro/docs/before-dev-remind.html</a> 中提示的内容进行操作，否则会出现报错</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Taro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Taro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React+GGEditor搭建可视化图编辑器项目</title>
      <link href="/2019/11/11/React+GGEditor%E6%90%AD%E5%BB%BA%E5%8F%AF%E8%A7%86%E5%8C%96%E5%9B%BE%E7%BC%96%E8%BE%91%E5%99%A8%E9%A1%B9%E7%9B%AE/"/>
      <url>/2019/11/11/React+GGEditor%E6%90%AD%E5%BB%BA%E5%8F%AF%E8%A7%86%E5%8C%96%E5%9B%BE%E7%BC%96%E8%BE%91%E5%99%A8%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul><li>GG-editor 插件基于 React 框架，可以创建编辑思维导图、流程图、拓扑图等图形</li><li>项目依赖： <code>react-router-dom, gg-editor, antd</code><h2 id="安装所需依赖"><a href="#安装所需依赖" class="headerlink" title="安装所需依赖"></a>安装所需依赖</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 初始化项目</span>create<span class="token operator">-</span>react<span class="token operator">-</span>app ggeditore<span class="token comment">// 安装依赖</span>npm i react<span class="token operator">-</span>router<span class="token operator">-</span>domnpm i gg<span class="token operator">-</span>editornpm i antd<span class="token comment">// or</span>yarn add react<span class="token operator">-</span>router<span class="token operator">-</span>domyarn add gg<span class="token operator">-</span>editoryarn add antd<span class="token comment">// 安装 gg-editor</span><span class="token comment">// 不要安装 bate 的版本</span>npm i gg<span class="token operator">-</span>editor@<span class="token number">2.0</span><span class="token number">.4</span><span class="token comment">// or</span>yarn add gg<span class="token operator">-</span>editor@<span class="token number">2.0</span><span class="token number">.4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// Flow</span><span class="token keyword">import</span> GGEditor<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Flow <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'gg-editor'</span><span class="token punctuation">;</span><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  nodes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>    type<span class="token operator">:</span> <span class="token string">'node'</span><span class="token punctuation">,</span>    size<span class="token operator">:</span> <span class="token string">'70*70'</span><span class="token punctuation">,</span>    shape<span class="token operator">:</span> <span class="token string">'flow-circle'</span><span class="token punctuation">,</span>    color<span class="token operator">:</span> <span class="token string">'#FA8C16'</span><span class="token punctuation">,</span>    label<span class="token operator">:</span> <span class="token string">'起止节点'</span><span class="token punctuation">,</span>    x<span class="token operator">:</span> <span class="token number">55</span><span class="token punctuation">,</span>    y<span class="token operator">:</span> <span class="token number">55</span><span class="token punctuation">,</span>    id<span class="token operator">:</span> <span class="token string">'ea1184e8'</span><span class="token punctuation">,</span>    index<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    type<span class="token operator">:</span> <span class="token string">'node'</span><span class="token punctuation">,</span>    size<span class="token operator">:</span> <span class="token string">'70*70'</span><span class="token punctuation">,</span>    shape<span class="token operator">:</span> <span class="token string">'flow-circle'</span><span class="token punctuation">,</span>    color<span class="token operator">:</span> <span class="token string">'#FA8C16'</span><span class="token punctuation">,</span>    label<span class="token operator">:</span> <span class="token string">'结束节点'</span><span class="token punctuation">,</span>    x<span class="token operator">:</span> <span class="token number">55</span><span class="token punctuation">,</span>    y<span class="token operator">:</span> <span class="token number">255</span><span class="token punctuation">,</span>    id<span class="token operator">:</span> <span class="token string">'481fbb1a'</span><span class="token punctuation">,</span>    index<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  edges<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>    source<span class="token operator">:</span> <span class="token string">'ea1184e8'</span><span class="token punctuation">,</span>    sourceAnchor<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>    target<span class="token operator">:</span> <span class="token string">'481fbb1a'</span><span class="token punctuation">,</span>    targetAnchor<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    id<span class="token operator">:</span> <span class="token string">'7989ac70'</span><span class="token punctuation">,</span>    index<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>GGEditor<span class="token operator">></span>  <span class="token operator">&lt;</span>Flow style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> width<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token number">500</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>data<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>GGEditor<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// Mind</span><span class="token keyword">import</span> GGEditor<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Mind <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'gg-editor'</span><span class="token punctuation">;</span><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  roots<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>    label<span class="token operator">:</span> <span class="token string">'中心主题'</span><span class="token punctuation">,</span>    children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>      label<span class="token operator">:</span> <span class="token string">'分支主题 1'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      label<span class="token operator">:</span> <span class="token string">'分支主题 2'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      label<span class="token operator">:</span> <span class="token string">'分支主题 3'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>GGEditor<span class="token operator">></span>  <span class="token operator">&lt;</span>Mind style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> width<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token number">500</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>data<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>GGEditor<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="高阶用法（可编辑）"><a href="#高阶用法（可编辑）" class="headerlink" title="高阶用法（可编辑）"></a>高阶用法（可编辑）</h2></li><li>详细请看Github代码: <a href="https://github.com/damao2250">https://github.com/damao2250</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> GGEditor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React-Router的使用</title>
      <link href="/2019/11/11/React-Router%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/11/11/React-Router%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="使用-react-router-还是-react-router-dom-？"><a href="#使用-react-router-还是-react-router-dom-？" class="headerlink" title="使用 react-router 还是 react-router-dom ？"></a>使用 react-router 还是 react-router-dom ？</h1><h2 id="React-router"><a href="#React-router" class="headerlink" title="React-router"></a>React-router</h2><ul><li>React Router 包含3个库, react-router、react-router-dom、和 react-router-native。react-router 提供最基本的路由功能，实际使用，我们不会直接安装 react-router,而是根据应用运行的环境选择安装 react-router-dom(在浏览器中使用)或 react-router-native(在 react-native中使用)。react-router-dom 和 react-router-native 都依赖 react-router,所以在安装时， react-router 也会自动安装。</li><li>两者的关系<ul><li>react-router：提供 router 的核心api。如 Router、Route、Switch 等，没有提供有关dom操作进行路由跳转的api</li><li>react-router-dom：提供 BrowserRouter、Route、Link等api，可以通过dom操作控制路由</li><li>react-router-dom：基于 react-router，加入了在浏览器运行环境下的一些功能，例如：Link 组件，会渲染一个 a 标签，Link 组件源码a标签行; BrowserRouter和HashRouter 组件，前者使用 pushState 和 popState 事件构建路由，后者使用 window.location.hash 和 hashchange 事件构建路由。</li><li>react-router-dom 里包含了 react-router 的依赖，因此只需要安装后者即可<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">npm i react<span class="token operator">-</span>router<span class="token operator">-</span>dom<span class="token comment">// or</span>yarn add react<span class="token operator">-</span>router<span class="token operator">-</span>dom<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li>简易使用示例</li></ul><ol><li>新建一个 router/index.js 文件<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//  router/index.js</span><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token comment">// 引入一些模块</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> BrowserRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span> Route<span class="token punctuation">,</span> Redirect <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token comment">//引入需要用到的页面组件 </span><span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">'./../views/home/home'</span><span class="token keyword">import</span> About <span class="token keyword">from</span> <span class="token string">'./../views/about/about'</span><span class="token keyword">function</span> <span class="token function">router</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment">// Route 路由</span>    <span class="token comment">// Redirect 重定向</span>    <span class="token operator">&lt;</span>Router<span class="token operator">></span>      <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/home"</span> component<span class="token operator">=</span><span class="token punctuation">&#123;</span>Home<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/"</span> render<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">&lt;</span>Redirect to<span class="token operator">=</span><span class="token string">"/home"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">&#125;</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Route<span class="token operator">></span>      <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/about"</span> component<span class="token operator">=</span><span class="token punctuation">&#123;</span>About<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>Route<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>home组件<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//home.js</span><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Component <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Link <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Home</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Link 路由跳转</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>ul<span class="token operator">></span>          <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/home"</span><span class="token operator">></span>Home<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>          <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/about"</span><span class="token operator">></span>About<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>h1<span class="token operator">></span>home<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>about组件<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//about.js</span><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Component <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Link <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">About</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Link 路由跳转</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>ul<span class="token operator">></span>          <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/home"</span><span class="token operator">></span>Home<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>          <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/about"</span><span class="token operator">></span>About<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>h1<span class="token operator">></span>about<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>app.js中引入router<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Component <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">'./router'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span>  <span class="token punctuation">&#123;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>Router <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>嵌套路由<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// about.js</span><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Component <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Link <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">About</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token comment">// &#123;this.props.children&#125;  ==> 显示嵌套路由</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>ul<span class="token operator">></span>          <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/home"</span><span class="token operator">></span>Home<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>          <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/about"</span><span class="token operator">></span>About<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>h1<span class="token operator">></span>about<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>        <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">&#125;</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//  router/index.js</span><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> BrowserRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span> Route<span class="token punctuation">,</span> Redirect <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">'./../views/home/home'</span><span class="token keyword">import</span> About <span class="token keyword">from</span> <span class="token string">'./../views/about/about'</span><span class="token keyword">import</span> somePage <span class="token keyword">from</span> <span class="token string">'./../views/somePage/somePage'</span><span class="token keyword">function</span> <span class="token function">router</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>Router<span class="token operator">></span>      <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/home"</span> component<span class="token operator">=</span><span class="token punctuation">&#123;</span>Home<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/"</span> render<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">&lt;</span>Redirect to<span class="token operator">=</span><span class="token string">"/home"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">&#125;</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Route<span class="token operator">></span>      <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/about"</span> render<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">(</span>          <span class="token operator">&lt;</span>About<span class="token operator">></span>            <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/about/somePage"</span> component<span class="token operator">=</span><span class="token punctuation">&#123;</span>somePage<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>About<span class="token operator">></span>        <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Route<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ul><li>参考<a href="https://segmentfault.com/a/1190000016421036">https://segmentfault.com/a/1190000016421036</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github搭建博客</title>
      <link href="/2019/11/08/Hexo+Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/11/08/Hexo+Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="github-hexo-创建个人博客"><a href="#github-hexo-创建个人博客" class="headerlink" title="github + hexo 创建个人博客"></a>github + hexo 创建个人博客</h1><ol><li><p>创建 <github Name>.github.io 仓库</p></li><li><p>全局安装hexo</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">npm install <span class="token operator">-</span>g hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>初始化项目</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 构建 hexo 项目</span>hexo init<span class="token comment">// 启动服务</span>hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>连接到 GitHub</p></li></ol><ul><li>修改根目录下 _congif.yml<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps"># Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy:type: gitrepo: &lt;你的仓库地址&gt; #　如：https:&#x2F;&#x2F;github.com&#x2F;Damao2250&#x2F;damao2250.github.iobranch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ol start="5"><li>自动部署到 GitHub<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 安装部署工具</span>npm install hexo<span class="token operator">-</span>deployer<span class="token operator">-</span>git <span class="token operator">--</span>save<span class="token comment">// 自动部署</span>hexo cleanhexo deploy<span class="token comment">// 打开 &lt;github Name>.github.io  查看效果</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>部署简化</li></ol><ul><li>修改 package.json<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// package.json</span>“build”<span class="token operator">:</span> “hexo clean <span class="token operator">&amp;</span> hexo deploy”<span class="token comment">// 部署命令</span>npm run build<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ol start="7"><li>发布新文章<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// [layout] 为布局，可选项为 `post`、`page`、`draft`，这将决定文章所在文件路径。</span><span class="token comment">// &lt;title> 为文章标题</span><span class="token comment">// 如 hexo new post 这是一个文章标题</span>hexo <span class="token keyword">new</span> <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>更换主题</li></ol><ul><li>下载主题 -&gt; 更换主题<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 下载到themes文件夹下</span>git clone https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>KevinOfNeu<span class="token operator">/</span>hexo<span class="token operator">-</span>theme<span class="token operator">-</span>xoxo xoxo<span class="token comment">// 修改 _config.yml 配置</span>theme<span class="token operator">:</span> xoxo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/04/hello-world/"/>
      <url>/2019/11/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
