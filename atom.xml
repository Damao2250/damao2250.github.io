<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Damao</title>
  
  <subtitle>乐躬耕于陇亩兮，吾爱吾庐。聊寄傲于琴书兮，以待天时。</subtitle>
  <link href="http://damao2250.com/atom.xml" rel="self"/>
  
  <link href="http://damao2250.com/"/>
  <updated>2024-10-14T08:05:24.058Z</updated>
  <id>http://damao2250.com/</id>
  
  <author>
    <name>Damao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>窄门大道</title>
    <link href="http://damao2250.com/2024/10/14/%E7%AA%84%E9%97%A8%E5%A4%A7%E9%81%93/"/>
    <id>http://damao2250.com/2024/10/14/%E7%AA%84%E9%97%A8%E5%A4%A7%E9%81%93/</id>
    <published>2024-10-14T06:44:27.000Z</published>
    <updated>2024-10-14T08:05:24.058Z</updated>
    
    <content type="html"><![CDATA[<h3 id="我们需要的是一份水涨船高的事业"><a href="#我们需要的是一份水涨船高的事业" class="headerlink" title="我们需要的是一份水涨船高的事业"></a>我们需要的是一份水涨船高的事业</h3><p>工作❌  事业✅</p><p>我们需要的并不是一份工作</p><p>而是一份水涨船高的事业</p><p>我们没有选择</p><p>因为随着年龄的增长</p><p>人生的风险是指数增加的</p><p>而不是线性增加的</p><p>走了一个越来越陡峭的线</p><p>增加的速度会非常快</p><p>越到后面你会发现麻绳越来越细</p><p>可能还断了 越断越多 越断越快</p><p>这就是指数增长的风险</p><p>但工资是怎么样的呢</p><p>工资是线性增长的</p><p>这还是在特别理想的情况下</p><p>通常是常数，也就是不变</p><p>可能三年也可能五年都不变</p><p>不但不变，搞不好在当下这个环境还降了</p><p>这种事情你听过吗</p><p>以前是从来没有听过这种事情的</p><p>至少在我们的成长经历中是没有经历过的</p><p>这种线性的增加速度怎么赶得上指数增加速度</p><p>我们没有选择</p><p>我们需要的是一份水涨船高的事业</p><p>我们要去哪里</p><p>我们当然要去更高远处</p><p>但是首先知道在哪里</p><p>然后怎么去</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;我们需要的是一份水涨船高的事业&quot;&gt;&lt;a href=&quot;#我们需要的是一份水涨船高的事业&quot; class=&quot;headerlink&quot; title=&quot;我们需要的是一份水涨船高的事业&quot;&gt;&lt;/a&gt;我们需要的是一份水涨船高的事业&lt;/h3&gt;&lt;p&gt;工作❌  事业✅&lt;/p&gt;
&lt;p&gt;我们</summary>
      
    
    
    
    <category term="窄门大道" scheme="http://damao2250.com/categories/%E7%AA%84%E9%97%A8%E5%A4%A7%E9%81%93/"/>
    
    
    <category term="窄门大道" scheme="http://damao2250.com/tags/%E7%AA%84%E9%97%A8%E5%A4%A7%E9%81%93/"/>
    
  </entry>
  
  <entry>
    <title>简易瀑布流布局</title>
    <link href="http://damao2250.com/2024/09/30/%E7%AE%80%E6%98%93%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/"/>
    <id>http://damao2250.com/2024/09/30/%E7%AE%80%E6%98%93%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/</id>
    <published>2024-09-30T01:07:00.000Z</published>
    <updated>2024-09-30T01:12:47.054Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">.container</span> <span class="token punctuation">&#123;</span>    <span class="token property">column-count</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span> <span class="token comment">/* 定义列数 */</span>    <span class="token property">column-gap</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span> <span class="token comment">/* 定义列与列之间的间隙 */</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.item</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2f2<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span> <span class="token comment">/* 定义每项的底部间隙 */</span>    <span class="token property">break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span> <span class="token comment">/* 防止内容被分割到不同的列 */</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 13<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 14<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Item 15<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><style>  .container-test {    column-count: 4; /* 定义列数 */    column-gap: 16px; /* 定义列与列之间的间隙 */  }  .item-test {    background-color: #f2f2f2;    padding: 8px;    margin-bottom: 16px; /* 定义每项的底部间隙 */    break-inside: avoid; /* 防止内容被分割到不同的列 */  }</style><div class="container-test">  <div class="item-test">Item 1</div>  <div class="item-test">Item 2 Item 2 Item 2 Item 2 Item 2 Item 2 Item 2 </div>  <div class="item-test">Item 3</div>  <div class="item-test">Item 4 Item 4 Item 4 Item 4 Item 4 Item 4 Item 4 Item 4 Item 4 Item 4 Item 4 </div>  <div class="item-test">Item 5</div>  <div class="item-test">Item 6</div>  <div class="item-test">Item 7</div>  <div class="item-test">Item 8</div>  <div class="item-test">Item 9 Item 9 Item 9 Item 9</div>  <div class="item-test">Item 10</div>  <div class="item-test">Item 11</div>  <div class="item-test">Item 12</div>  <div class="item-test">Item 13</div>  <div class="item-test">Item 14</div>  <div class="item-test">Item 15</div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-html&quot; data-language=&quot;html&quot;&gt;&lt;code class=</summary>
      
    
    
    
    <category term="HTML" scheme="http://damao2250.com/categories/HTML/"/>
    
    
    <category term="CSS" scheme="http://damao2250.com/tags/CSS/"/>
    
    <category term="HTML" scheme="http://damao2250.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>治大国</title>
    <link href="http://damao2250.com/2024/09/30/%E6%B2%BB%E5%A4%A7%E5%9B%BD/"/>
    <id>http://damao2250.com/2024/09/30/%E6%B2%BB%E5%A4%A7%E5%9B%BD/</id>
    <published>2024-09-30T00:35:02.000Z</published>
    <updated>2024-09-30T00:37:27.742Z</updated>
    
    <content type="html"><![CDATA[<p>治大国，若烹小鲜。</p><p>以道莅天下，其鬼不神；非其鬼不神，其神不伤人；非其神不伤人，圣人亦不伤人。</p><p>夫两不相伤，故德交归焉。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;治大国，若烹小鲜。&lt;/p&gt;
&lt;p&gt;以道莅天下，其鬼不神；非其鬼不神，其神不伤人；非其神不伤人，圣人亦不伤人。&lt;/p&gt;
&lt;p&gt;夫两不相伤，故德交归焉。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="阅读记录" scheme="http://damao2250.com/categories/%E9%98%85%E8%AF%BB%E8%AE%B0%E5%BD%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Mr.Go</title>
    <link href="http://damao2250.com/2024/09/22/Mr-Go/"/>
    <id>http://damao2250.com/2024/09/22/Mr-Go/</id>
    <published>2024-09-22T02:37:29.000Z</published>
    <updated>2024-09-22T03:30:44.162Z</updated>
    
    <content type="html"><![CDATA[<h2 id="包"><a href="#包" class="headerlink" title="包"></a>包</h2><ul><li>每个 <code>Go</code> 程序都由包构成</li><li>程序都从 <code>main</code> 包开始运行</li><li>下面的程序通过导入路径 <code>&quot;fmt&quot;</code> 和 <code>&quot;math/rand&quot;</code> 来使用这两个包</li><li>按照约定，包名与导入路径的最后一个元素一致，例如，<code>&quot;math/rand&quot;</code> 包中的源码均以 <code>package rand</code> 语句开始。就像 <code>mian</code> 包以 <code>package main</code> 开始<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"math/rand"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"我最喜欢的数字是 "</span><span class="token punctuation">,</span> rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h2><ul><li>此代码用圆括号将导入的包分成一组，这是“分组”形式的导入语句。</li><li>当然你也可以编写多个导入语句，例如：<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">import</span> <span class="token string">"math"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>不过使用分组导入语句要更好。</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"math"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"现在你有了 %g 个问题."</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span><span class="token function">Sqrt</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="导出名"><a href="#导出名" class="headerlink" title="导出名"></a>导出名</h2><ul><li>在 <code>Go</code> 中，如果一个名字以大写字母开头，那么它就是已导出的。例如，<code>Pizza</code> 就是个已导出名，<code>Pi</code> 也同样，它导出自 math 包。</li><li><code>pizza</code> 和 <code>pi</code> 并未以大写字母开头，所以它们是未导出的。</li><li>在导入一个包时，你只能引用其中已导出的名字。 任何「未导出」的名字在该包外均无法访问。</li><li>执行代码，观察错误信息。<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token punctuation">.</span><span class="token operator">/</span>prog<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">:</span> undefined<span class="token punctuation">:</span> math<span class="token punctuation">.</span>pi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>要修复错误，请将 <code>math.pi</code> 改名为 <code>math.Pi</code>，然后再试着执行一次。</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"math"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>pi<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li>函数可接受零个或多个参数。</li><li>在本例中，<code>add</code> 接受两个 <code>int</code> 类型的参数。</li><li>注意类型在变量名的后面。<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="函数形参类型简写"><a href="#函数形参类型简写" class="headerlink" title="函数形参类型简写"></a>函数形参类型简写</h2><ul><li>当连续两个或多个函数的已命名形参类型相同时，除最后一个类型以外，其它都可以省略。</li><li>在上例中，<code>x int, y int</code>，可以被简写为 <code>x, y int</code><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="多返回值"><a href="#多返回值" class="headerlink" title="多返回值"></a>多返回值</h2><ul><li>函数可以返回任意数量的返回值。</li><li>swap 函数返回了两个字符串。<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">swap</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> y<span class="token punctuation">,</span> x<span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>a<span class="token punctuation">,</span> b <span class="token operator">:=</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">,</span> <span class="token string">"world"</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="带名字的返回值"><a href="#带名字的返回值" class="headerlink" title="带名字的返回值"></a>带名字的返回值</h2><ul><li><code>Go</code> 的返回值可被命名，它们会被视作定义在函数顶部的变量。</li><li>返回值的命名应当能反应其含义，它可以作为文档使用。</li><li>没有参数的 <code>return</code> 语句会直接返回已命名的返回值，也就是「裸」返回值。</li><li>裸返回语句应当仅用在下面这样的短函数中。在长的函数中它们会影响代码的可读性。</li><li>命名返回值确定返回值为 <code>int</code> 类型<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">split</span><span class="token punctuation">(</span>sum <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>x <span class="token operator">=</span> sum <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">/</span> <span class="token number">9</span>y <span class="token operator">=</span> sum <span class="token operator">-</span> x<span class="token keyword">return</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li><code>var</code> 语句用于声明一系列变量。和函数的参数列表一样，类型在最后。</li><li>如例中所示，<code>var</code> 语句可以出现在包或函数的层级。<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">var</span> c<span class="token punctuation">,</span> python<span class="token punctuation">,</span> java <span class="token builtin">bool</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> i <span class="token builtin">int</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> c<span class="token punctuation">,</span> python<span class="token punctuation">,</span> java<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="变量的初始化"><a href="#变量的初始化" class="headerlink" title="变量的初始化"></a>变量的初始化</h2><ul><li>变量声明可以包含初始值，每个变量对应一个。</li><li>如果提供了初始值，则类型可以省略；变量会从初始值中推断出类型。</li></ul><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">var</span> i<span class="token punctuation">,</span> j <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> c<span class="token punctuation">,</span> python<span class="token punctuation">,</span> java <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"no!"</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> c<span class="token punctuation">,</span> python<span class="token punctuation">,</span> java<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="短变量声明"><a href="#短变量声明" class="headerlink" title="短变量声明"></a>短变量声明</h2><ul><li>在函数中，短赋值语句 <code>:=</code> 可在隐式确定类型的 <code>var</code> 声明中使用。</li><li>函数外的每个语句都 必须 以关键字开始（<code>var</code>、<code>func</code> 等），因此 <code>:=</code> 结构不能在函数外使用。<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> i<span class="token punctuation">,</span> j <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>k <span class="token operator">:=</span> <span class="token number">3</span>c<span class="token punctuation">,</span> python<span class="token punctuation">,</span> java <span class="token operator">:=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"no!"</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">,</span> c<span class="token punctuation">,</span> python<span class="token punctuation">,</span> java<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h2><ul><li>Go 的基本类型有<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token builtin">bool</span><span class="token builtin">string</span><span class="token builtin">int</span>  <span class="token builtin">int8</span>  <span class="token builtin">int16</span>  <span class="token builtin">int32</span>  <span class="token builtin">int64</span><span class="token builtin">uint</span> <span class="token builtin">uint8</span> <span class="token builtin">uint16</span> <span class="token builtin">uint32</span> <span class="token builtin">uint64</span> <span class="token builtin">uintptr</span><span class="token builtin">byte</span> <span class="token comment">// uint8 的别名</span><span class="token builtin">rune</span> <span class="token comment">// int32 的别名</span>     <span class="token comment">// 表示一个 Unicode 码位</span><span class="token builtin">float32</span> <span class="token builtin">float64</span><span class="token builtin">complex64</span> <span class="token builtin">complex128</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>本例展示了几种类型的变量。 和导入语句一样，变量声明也可以「分组」成一个代码块。</li><li><code>int</code>、<code>uint</code> 和 <code>uintptr</code> 类型在 32-位系统上通常为 32-位宽，在 64-位系统上则为 64-位宽。当你需要一个整数值时应使用 <code>int</code> 类型， 除非你有特殊的理由使用固定大小或无符号的整数类型。<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"math/cmplx"</span><span class="token punctuation">)</span><span class="token keyword">var</span> <span class="token punctuation">(</span>ToBe   <span class="token builtin">bool</span>       <span class="token operator">=</span> <span class="token boolean">false</span>MaxInt <span class="token builtin">uint64</span>     <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">64</span> <span class="token operator">-</span> <span class="token number">1</span>z      <span class="token builtin">complex128</span> <span class="token operator">=</span> cmplx<span class="token punctuation">.</span><span class="token function">Sqrt</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span> <span class="token operator">+</span> <span class="token number">12i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"类型：%T 值：%v\n"</span><span class="token punctuation">,</span> ToBe<span class="token punctuation">,</span> ToBe<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"类型：%T 值：%v\n"</span><span class="token punctuation">,</span> MaxInt<span class="token punctuation">,</span> MaxInt<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"类型：%T 值：%v\n"</span><span class="token punctuation">,</span> z<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="零值"><a href="#零值" class="headerlink" title="零值"></a>零值</h2><ul><li>没有明确初始化的变量声明会被赋予对应类型的 零值。</li><li>零值是：<ul><li>数值类型为 0，</li><li>布尔类型为 false，</li><li>字符串为 “”（空字符串）。<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> i <span class="token builtin">int</span><span class="token keyword">var</span> f <span class="token builtin">float64</span><span class="token keyword">var</span> b <span class="token builtin">bool</span><span class="token keyword">var</span> s <span class="token builtin">string</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"%v %v %v %q\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> f<span class="token punctuation">,</span> b<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><ul><li>表达式 <code>T(v)</code> 将值 <code>v</code> 转换为类型 <code>T</code>。</li><li>一些数值类型的转换：<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> i <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">42</span><span class="token keyword">var</span> f <span class="token builtin">float64</span> <span class="token operator">=</span> <span class="token function">float64</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">var</span> u <span class="token builtin">uint</span> <span class="token operator">=</span> <span class="token function">uint</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>或者，更加简短的形式：<pre class="line-numbers language-go" data-language="go"><code class="language-go">i <span class="token operator">:=</span> <span class="token number">42</span>f <span class="token operator">:=</span> <span class="token function">float64</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>u <span class="token operator">:=</span> <span class="token function">uint</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>与 <code>C</code> 不同的是，<code>Go</code> 在不同类型的项之间赋值时需要显式转换。试着移除例子中的 float64 或 uint 的类型转换，看看会发生什么。<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"math"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> x<span class="token punctuation">,</span> y <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token keyword">var</span> f <span class="token builtin">float64</span> <span class="token operator">=</span> math<span class="token punctuation">.</span><span class="token function">Sqrt</span><span class="token punctuation">(</span><span class="token function">float64</span><span class="token punctuation">(</span>x<span class="token operator">*</span>x <span class="token operator">+</span> y<span class="token operator">*</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">var</span> z <span class="token builtin">uint</span> <span class="token operator">=</span> <span class="token function">uint</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="类型推断"><a href="#类型推断" class="headerlink" title="类型推断"></a>类型推断</h2><ul><li>在声明一个变量而不指定其类型时（即使用不带类型的 <code>:=</code> 语法 <code>var =</code> 表达式语法），变量的类型会通过右值推断出来。</li><li>当声明的右值确定了类型时，新变量的类型与其相同：<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">var</span> i <span class="token builtin">int</span>j <span class="token operator">:=</span> i <span class="token comment">// j 也是一个 int</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>不过当右边包含未指明类型的数值常量时，新变量的类型就可能是 <code>int</code>、<code>float64</code> 或 <code>complex128</code> 了，这取决于常量的精度：<pre class="line-numbers language-go" data-language="go"><code class="language-go">i <span class="token operator">:=</span> <span class="token number">42</span>           <span class="token comment">// int</span>f <span class="token operator">:=</span> <span class="token number">3.142</span>        <span class="token comment">// float64</span>g <span class="token operator">:=</span> <span class="token number">0.867</span> <span class="token operator">+</span> <span class="token number">0.5i</span> <span class="token comment">// complex128</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>试着修改示例代码中 v 的初始值，并观察它是如何影响类型的。<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>v <span class="token operator">:=</span> <span class="token number">42</span> <span class="token comment">// 修改这里看看！</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"v is of type %T\n"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><ul><li>常量的声明与变量类似，只不过使用 <code>const</code> 关键字。</li><li>常量可以是字符、字符串、布尔值或数值。</li><li>常量不能用 <code>:=</code> 语法声明。<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">const</span> Pi <span class="token operator">=</span> <span class="token number">3.14</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> World <span class="token operator">=</span> <span class="token string">"世界"</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">,</span> World<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Happy"</span><span class="token punctuation">,</span> Pi<span class="token punctuation">,</span> <span class="token string">"Day"</span><span class="token punctuation">)</span><span class="token keyword">const</span> Truth <span class="token operator">=</span> <span class="token boolean">true</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Go rules?"</span><span class="token punctuation">,</span> Truth<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="数值常量"><a href="#数值常量" class="headerlink" title="数值常量"></a>数值常量</h2><ul><li>数值常量是高精度的值。</li><li>一个未指定类型的常量由上下文来决定其类型。</li><li>再试着一下输出 <code>needInt(Big)</code> 吧。</li><li>（<code>int</code> 类型可以存储最大 <code>64</code> 位的整数，根据平台不同有时会更小。）<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">const</span> <span class="token punctuation">(</span><span class="token comment">// 将 1 左移 100 位来创建一个非常大的数字</span><span class="token comment">// 即这个数的二进制是 1 后面跟着 100 个 0</span>Big <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">100</span><span class="token comment">// 再往右移 99 位，即 Small = 1 &lt;&lt; 1，或者说 Small = 2</span>Small <span class="token operator">=</span> Big <span class="token operator">>></span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">needInt</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> x<span class="token operator">*</span><span class="token number">10</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">needFloat</span><span class="token punctuation">(</span>x <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token builtin">float64</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> x <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">needInt</span><span class="token punctuation">(</span>Small<span class="token punctuation">)</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">needFloat</span><span class="token punctuation">(</span>Small<span class="token punctuation">)</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">needFloat</span><span class="token punctuation">(</span>Big<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;包&quot;&gt;&lt;a href=&quot;#包&quot; class=&quot;headerlink&quot; title=&quot;包&quot;&gt;&lt;/a&gt;包&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;每个 &lt;code&gt;Go&lt;/code&gt; 程序都由包构成&lt;/li&gt;
&lt;li&gt;程序都从 &lt;code&gt;main&lt;/code&gt; 包开始运行&lt;/li</summary>
      
    
    
    
    <category term="GO" scheme="http://damao2250.com/categories/GO/"/>
    
    
    <category term="GO" scheme="http://damao2250.com/tags/GO/"/>
    
  </entry>
  
  <entry>
    <title>一个新的css属性：field-sizing</title>
    <link href="http://damao2250.com/2024/09/20/%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84css%E5%B1%9E%E6%80%A7%EF%BC%9Afield-sizing/"/>
    <id>http://damao2250.com/2024/09/20/%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84css%E5%B1%9E%E6%80%A7%EF%BC%9Afield-sizing/</id>
    <published>2024-09-20T12:21:07.000Z</published>
    <updated>2024-09-20T13:00:00.473Z</updated>
    
    <content type="html"><![CDATA[<h2 id="field-sizing-控制表单尺寸自适应的CSS"><a href="#field-sizing-控制表单尺寸自适应的CSS" class="headerlink" title="field-sizing 控制表单尺寸自适应的CSS"></a>field-sizing 控制表单尺寸自适应的CSS</h2><ul><li>语法<ul><li>fixed，输入框、文本区域和下拉选择，无论内容如何，​​它们宽高都是固定</li><li>content，输入框、文本区域和下拉选择元素的宽高会根据内容的大小而变化</li></ul></li><li>需要 Chrome 123版本以上才能查看效果<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">field-sizing</span><span class="token punctuation">:</span> fixed | content<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">min-height</span><span class="token punctuation">:</span>300px<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span>2px solid #ccc<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">border</span><span class="token punctuation">:</span>1px solid #ccc<span class="token punctuation">;</span> <span class="token property">min-width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">max-width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span> <span class="token property">field-sizing</span><span class="token punctuation">:</span> content</span><span class="token punctuation">"</span></span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">field-sizing</span><span class="token punctuation">:</span> content<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">field-sizing</span><span class="token punctuation">:</span> content<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>测试数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>测试一条很长很长很长很长很长的数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>当前环境不可预览效果，可复制代码到html预览查看<div style="min-height:300px; width: 300px; border:2px solid #ccc;padding: 5px;"><input style="border:1px solid #ccc; min-width: 100px;max-width: 300px; field-sizing: content" /><textarea style="field-sizing: content; width: 200px;"></textarea><div>  <select style="field-sizing: content; display:block;">    <option value="3">测试</option>    <option value="2">测试数据</option>    <option value="1">测试一条很长很长很长很长很长的数据</option>  </select></div></div></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;field-sizing-控制表单尺寸自适应的CSS&quot;&gt;&lt;a href=&quot;#field-sizing-控制表单尺寸自适应的CSS&quot; class=&quot;headerlink&quot; title=&quot;field-sizing 控制表单尺寸自适应的CSS&quot;&gt;&lt;/a&gt;field-si</summary>
      
    
    
    
    <category term="CSS" scheme="http://damao2250.com/categories/CSS/"/>
    
    
    <category term="CSS" scheme="http://damao2250.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>故失道而后德</title>
    <link href="http://damao2250.com/2024/09/20/%E6%95%85%E5%A4%B1%E9%81%93%E8%80%8C%E5%90%8E%E5%BE%B7/"/>
    <id>http://damao2250.com/2024/09/20/%E6%95%85%E5%A4%B1%E9%81%93%E8%80%8C%E5%90%8E%E5%BE%B7/</id>
    <published>2024-09-20T09:34:36.000Z</published>
    <updated>2024-09-30T00:37:49.030Z</updated>
    
    <content type="html"><![CDATA[<p>故失道而后德，失德面后仁，失仁而后义，失义而后礼。</p><p>夫礼者，忠信之薄，而乱之首。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;故失道而后德，失德面后仁，失仁而后义，失义而后礼。&lt;/p&gt;
&lt;p&gt;夫礼者，忠信之薄，而乱之首。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="阅读记录" scheme="http://damao2250.com/categories/%E9%98%85%E8%AF%BB%E8%AE%B0%E5%BD%95/"/>
    
    
  </entry>
  
  <entry>
    <title>视图转换动画-startViewTransition</title>
    <link href="http://damao2250.com/2024/08/28/%E8%A7%86%E5%9B%BE%E8%BD%AC%E6%8D%A2%E5%8A%A8%E7%94%BB-startViewTransition/"/>
    <id>http://damao2250.com/2024/08/28/%E8%A7%86%E5%9B%BE%E8%BD%AC%E6%8D%A2%E5%8A%A8%E7%94%BB-startViewTransition/</id>
    <published>2024-08-28T01:02:36.000Z</published>
    <updated>2024-08-28T09:07:02.954Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><div style="widht: 1000px; height: 250px; background: #ccc; display: flex;">  <div style="flex:1; border-right:1px solid #000; position:relative;">    <div id="box1" style="position:absolute; left:0; top:0; width:50px; height:50px;background:#58bc58;">有效果的</div>  </div>  <div style="flex:1; position:relative;">    <div id="box2" style="position:absolute; left:0; top:0; width:50px; height:50px; background:#58b;">没有效果的</div>  </div></div><div>  <button id='changeBtn' style="margin-top:10px; user-select:none;">移动位置</button></div><script>  let changeBtn = document.getElementById('changeBtn')  let index1 = 0  let index2 = 0  changeBtn.onclick = async (ev)=>{    console.log(ev)    let box2 = document.getElementById('box2')    let box3 = document.getElementById('box1')    if( index2%2 === 0 ){      box2.style.left = '150px'      box2.style.top = '150px'    } else {      box2.style.left = '0px'      box2.style.top = '0px'    }    index2++    if( document.startViewTransition ){ // 支持        document.startViewTransition(() => { // 开始视图变换        let box1 = document.getElementById('box1')        if( index1%2 === 0 ){          box1.style.left = '150px'          box1.style.top = '150px'        } else {          box1.style.left = '0px'          box1.style.top = '0px'        }        index1++      });    } else { // 不支持      console.log('不支持startViewTransition')    }  }</script><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 调用document.startViewTransition，浏览器会捕捉当前页面的状态，类似于实时截图，或者“快照”</span><span class="token comment">// 执行实际的 dom 变化，再次记录变化后的页面状态（截图）</span><span class="token comment">// 触发两者的过渡动画，包括透明度、位移等变化，也可以自定义 CSS 动画</span><span class="token comment">// 默认情况下是整个页面的淡入淡出变化</span><span class="token comment">// ::view-transition-old表示「旧视图」的状态，也就是变化之前的截图</span><span class="token comment">// ::view-transition-new表示「新视图」的状态，也就是变化之后的截图</span><span class="token comment">// 如果需要指定具体元素的变化，可以给该元素指定 view-transition-name</span><span class="token comment">// 前后变化不一定要同一元素，浏览器是根据 view-transition-name 寻找的</span><span class="token comment">// 同一时间页面上不能出现两个相同 view-transition-name 的元素，不然视图变化会失效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">widht</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">flex</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span> <span class="token property">border-right</span><span class="token punctuation">:</span>1px solid #000<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box1<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>#58bc58<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>有效果的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">flex</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box2<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span>50px<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span>#58b<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>没有效果的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>changeBtn<span class="token punctuation">'</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span> <span class="token property">user-select</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>移动位置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> changeBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'changeBtn'</span><span class="token punctuation">)</span><span class="token keyword">let</span> index1 <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">let</span> index2 <span class="token operator">=</span> <span class="token number">0</span>changeBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span>  <span class="token keyword">let</span> box2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'box2'</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> box3 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'box1'</span><span class="token punctuation">)</span>  <span class="token keyword">if</span><span class="token punctuation">(</span> index2<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    box2<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token string">'150px'</span>    box2<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">'150px'</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    box2<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token string">'0px'</span>    box2<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">'0px'</span>  <span class="token punctuation">&#125;</span>  index2<span class="token operator">++</span>  <span class="token keyword">if</span><span class="token punctuation">(</span> document<span class="token punctuation">.</span>startViewTransition <span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">// 支持</span>      document<span class="token punctuation">.</span><span class="token function">startViewTransition</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token comment">// 开始视图变换</span>      <span class="token keyword">let</span> box1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'box1'</span><span class="token punctuation">)</span>      <span class="token keyword">if</span><span class="token punctuation">(</span> index1<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        box1<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token string">'150px'</span>        box1<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">'150px'</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        box1<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token string">'0px'</span>        box1<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">'0px'</span>      <span class="token punctuation">&#125;</span>      index1<span class="token operator">++</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 不支持</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'不支持startViewTransition'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h2&gt;&lt;div style=&quot;widht: 1000px; height: 250px; background: #ccc; display: flex</summary>
      
    
    
    
    <category term="HTML API" scheme="http://damao2250.com/categories/HTML-API/"/>
    
    
    <category term="startViewTransition" scheme="http://damao2250.com/tags/startViewTransition/"/>
    
  </entry>
  
  <entry>
    <title>go-module相关</title>
    <link href="http://damao2250.com/2024/08/14/go-module%E7%9B%B8%E5%85%B3/"/>
    <id>http://damao2250.com/2024/08/14/go-module%E7%9B%B8%E5%85%B3/</id>
    <published>2024-08-14T08:26:33.000Z</published>
    <updated>2024-08-14T08:45:59.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="go-mod-命令"><a href="#go-mod-命令" class="headerlink" title="go mod 命令"></a>go mod 命令</h2><ul><li><code>go mod init</code> 模块名初始化<code>go mod</code>，生成<code>go.mod</code>文件，后可接参数指定<code>module</code>名。</li><li><code>go mod download</code> 手动触发下载依赖包到本地cache(默认为<code>$GOPATH/pkg/mod</code>目录)</li><li><code>go mod graph</code> 打印项目的模块依赖结构</li><li><code>go mod tidy</code> 添加缺少的包，且删除无用的包</li><li><code>go mod verify</code> 校验模块是否被篡改过</li><li><code>go mod why</code> 查看为什么需要依赖</li><li><code>go mod vendor</code> 导出项目所有依赖到<code>vendor</code>下</li><li><code>go mod edit -fmt</code> 参数格式化</li><li><code>go mod edit -require=golang.org/x/text</code> 添加依赖</li><li><code>go mod edit -droprequire=golang.org/x/text</code> 删除依赖</li><li><code>go list -m -json all</code> 以json的方式打印依赖详情</li><li><code>go list -m -u all</code> 来检查可以升级的<code>package</code></li><li><code>go get -u need-upgrade-package</code> 升级后会将新的依赖版本更新到<code>go.mod</code>中</li><li><code>go get -u</code> 升级所有依赖到最新的版本</li><li><code>go get package@verison</code> 更新到指定版本</li></ul><h2 id="给项目添加依赖写进-go-mod"><a href="#给项目添加依赖写进-go-mod" class="headerlink" title="给项目添加依赖写进 go.mod"></a>给项目添加依赖写进 go.mod</h2><ul><li>在项目中有import，然后go build就会go module自动下载并添加</li><li>自己手工使用go get下载安装后，会自动加入go.mod</li></ul><h2 id="go-mod-文件"><a href="#go-mod-文件" class="headerlink" title="go.mod 文件"></a>go.mod 文件</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">module github<span class="token punctuation">.</span>com<span class="token operator">/</span>Ackites<span class="token operator">/</span>KillWxapkggo <span class="token number">1.23</span><span class="token function">require</span> <span class="token punctuation">(</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>ditashi<span class="token operator">/</span>jsbeautifier<span class="token operator">-</span>go v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20141206144643</span><span class="token operator">-</span><span class="token number">2520</span>a8026a9cgithub<span class="token punctuation">.</span>com<span class="token operator">/</span>dop251<span class="token operator">/</span>goja v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20240806095544</span><span class="token operator">-</span><span class="token number">3491</span>d4a58fbegithub<span class="token punctuation">.</span>com<span class="token operator">/</span>fsnotify<span class="token operator">/</span>fsnotify v1<span class="token punctuation">.</span><span class="token number">7.0</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>tdewolff<span class="token operator">/</span>parse<span class="token operator">/</span>v2 v2<span class="token punctuation">.</span><span class="token number">7.15</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>yosssi<span class="token operator">/</span>gohtml v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20201013000340</span><span class="token operator">-</span>ee4748c638f4golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>crypto v0<span class="token punctuation">.</span><span class="token number">26.0</span>golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>net v0<span class="token punctuation">.</span><span class="token number">28.0</span>golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>text v0<span class="token punctuation">.</span><span class="token number">17.0</span><span class="token punctuation">)</span><span class="token function">require</span> <span class="token punctuation">(</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>dlclark<span class="token operator">/</span>regexp2 v1<span class="token punctuation">.</span><span class="token number">11.4</span> <span class="token comment">// indirect</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>go<span class="token operator">-</span>sourcemap<span class="token operator">/</span>sourcemap v2<span class="token punctuation">.</span><span class="token number">1.3</span><span class="token operator">+</span>incompatible <span class="token comment">// indirect</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>google<span class="token operator">/</span>pprof v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20230207041349</span><span class="token operator">-</span><span class="token number">798e818</span>bf904 <span class="token comment">// indirect</span>golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>sys v0<span class="token punctuation">.</span><span class="token number">23.0</span> <span class="token comment">// indirect</span><span class="token punctuation">)</span><span class="token function">exclude</span><span class="token punctuation">(</span>  golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>text v0<span class="token punctuation">.</span><span class="token number">17.0</span><span class="token punctuation">)</span><span class="token function">replace</span><span class="token punctuation">(</span>  golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>text v0<span class="token punctuation">.</span><span class="token number">17.0</span> <span class="token operator">=></span> golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>text v0<span class="token punctuation">.</span><span class="token number">18.0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>第一项：当前项目的模块路径</li><li>第二项：项目使用的go版本</li><li>第三项：require项目所需的直接依赖包及其版本</li><li>exclude：用于从使用中排除一个特定的模块版本</li><li>replace：用于将一个包的版本替换为另一个包版本</li><li>其中require后的indirect说明这个依赖是非直接依赖</li></ul><h2 id="go-sum文件"><a href="#go-sum文件" class="headerlink" title="go.sum文件"></a>go.sum文件</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">github<span class="token punctuation">.</span>com<span class="token operator">/</span>ditashi<span class="token operator">/</span>jsbeautifier<span class="token operator">-</span>go v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20141206144643</span><span class="token operator">-</span><span class="token number">2520</span>a8026a9c h1<span class="token operator">:</span><span class="token operator">+</span>Zo5Ca9GH0RoeVZQKzFJcTLoAixx5s5Gq3pTIS<span class="token operator">+</span>n354<span class="token operator">=</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>ditashi<span class="token operator">/</span>jsbeautifier<span class="token operator">-</span>go v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20141206144643</span><span class="token operator">-</span><span class="token number">2520</span>a8026a9c<span class="token operator">/</span>go<span class="token punctuation">.</span>mod h1<span class="token operator">:</span>HJGU9ULdREjOcVGZVPB5s6zYmHi1RxzT71l2wQyLmnE<span class="token operator">=</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>dlclark<span class="token operator">/</span>regexp2 v1<span class="token punctuation">.</span><span class="token number">11.4</span> h1<span class="token operator">:</span>rPYF9<span class="token operator">/</span>LECdNymJufQKmri9gV604RvvABwgOA8un7yAo<span class="token operator">=</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>dlclark<span class="token operator">/</span>regexp2 v1<span class="token punctuation">.</span><span class="token number">11.4</span><span class="token operator">/</span>go<span class="token punctuation">.</span>mod h1<span class="token operator">:</span>DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8<span class="token operator">=</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>dop251<span class="token operator">/</span>goja v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20240806095544</span><span class="token operator">-</span><span class="token number">3491</span>d4a58fbe h1<span class="token operator">:</span>jwFJkgsdelB87ohlXaAGSd05Cb5ALDFa9iW9IGRHcRM<span class="token operator">=</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>dop251<span class="token operator">/</span>goja v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20240806095544</span><span class="token operator">-</span><span class="token number">3491</span>d4a58fbe<span class="token operator">/</span>go<span class="token punctuation">.</span>mod h1<span class="token operator">:</span><span class="token constant">DF</span><span class="token operator">+</span>w<span class="token operator">/</span>nLMIkvRpyhd<span class="token operator">/</span><span class="token number">0</span>K<span class="token operator">+</span>Okbh3fVZBtXLwRtS<span class="token operator">/</span>ccAa5w<span class="token operator">=</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>fsnotify<span class="token operator">/</span>fsnotify v1<span class="token punctuation">.</span><span class="token number">7.0</span> h1<span class="token operator">:</span><span class="token number">8</span>JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA<span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>每一行都是由模块路径，模块版本，哈希值组成</li><li>其中哈希值是用来保证当前缓存的模块不会被篡改</li><li>hash是以h1：开头的字符串，表示生成checksum的算法是第一版的hash算法</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;go-mod-命令&quot;&gt;&lt;a href=&quot;#go-mod-命令&quot; class=&quot;headerlink&quot; title=&quot;go mod 命令&quot;&gt;&lt;/a&gt;go mod 命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;go mod init&lt;/code&gt; 模块名初始化&lt;code</summary>
      
    
    
    
    <category term="GO" scheme="http://damao2250.com/categories/GO/"/>
    
    
    <category term="module" scheme="http://damao2250.com/tags/module/"/>
    
  </entry>
  
  <entry>
    <title>TS泛型定义实例</title>
    <link href="http://damao2250.com/2024/06/26/TS%E6%B3%9B%E5%9E%8B%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8B/"/>
    <id>http://damao2250.com/2024/06/26/TS%E6%B3%9B%E5%9E%8B%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8B/</id>
    <published>2024-06-26T08:58:59.000Z</published>
    <updated>2024-06-26T09:57:38.996Z</updated>
    
    <content type="html"><![CDATA[<h2 id="定义泛型函数"><a href="#定义泛型函数" class="headerlink" title="定义泛型函数"></a>定义泛型函数</h2><ul><li>为了确保传入的类型与返回的类型相同，使用<code>类型变量T</code>表示传入参数和返回值的类型<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> identity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> arg<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>泛型函数两种调用方式：<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 指定传入参数类型</span><span class="token comment">// 事实没必要使用尖括号（&lt;>）来明确地传入类型</span><span class="token keyword">let</span> output <span class="token operator">=</span> identity<span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">"myString"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 较常用，使用 类型推论，推断传入类型和返回类型</span><span class="token comment">// 编译器可以查看myString的值，然后把T设置为它的类型</span><span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token function">identity</span><span class="token punctuation">(</span><span class="token string">"myString"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="使用泛型变量"><a href="#使用泛型变量" class="headerlink" title="使用泛型变量"></a>使用泛型变量</h2><ul><li>明确表示传入的参数为T类型的数组，确保参数有<code>.length</code>这个属性<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> loggingIdentity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 也可以这样表示</span><span class="token keyword">function</span> loggingIdentity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Array<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="泛型类型"><a href="#泛型类型" class="headerlink" title="泛型类型"></a>泛型类型</h2><ul><li><p>泛型函数的类型，只需要将类型参数写在最前面，跟函数声明一样</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> identity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> myIdentity<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token parameter">arg<span class="token operator">:</span> <span class="token constant">T</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">T</span> <span class="token operator">=</span> identity<span class="token punctuation">;</span><span class="token comment">// 也可以使用不同的泛型参数名，只要在数量上和使用方式上能对应上就可以</span><span class="token keyword">let</span> myIdentity2<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token parameter">arg<span class="token operator">:</span> <span class="token constant">U</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">U</span> <span class="token operator">=</span> identity<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>可以使用带有调用签名的对象字面量来定义泛型函数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> identity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> myIdentity<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> identity<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>上面例子里的对象字面量可以拿出来做为一个接口</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">interface</span> <span class="token class-name">GenericIdentityFn</span> <span class="token punctuation">&#123;</span>  <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> identity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> myIdentity<span class="token operator">:</span> GenericIdentityFn <span class="token operator">=</span> identity<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>把泛型参数当作整个接口的一个参数，指定<code>GenericIdentityFn</code>的类型，这样接口里的其它成员也能知道这个参数的类型</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">interface</span> <span class="token class-name">GenericIdentityFn</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> identity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> myIdentity<span class="token operator">:</span> GenericIdentityFn<span class="token operator">&lt;</span>number<span class="token operator">></span> <span class="token operator">=</span> identity<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="泛型类"><a href="#泛型类" class="headerlink" title="泛型类"></a>泛型类</h2><ul><li><p>泛型类看上去与泛型接口差不多。 泛型类使用（ <code>&lt;&gt;</code>）括起泛型类型，跟在类名后面</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">GenericNumber</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    zeroValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>    <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token constant">T</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">T</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> myGenericNumber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GenericNumber</span><span class="token operator">&lt;</span>number<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>myGenericNumber<span class="token punctuation">.</span>zeroValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>myGenericNumber<span class="token punctuation">.</span><span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>GenericNumber</code>类的使用是十分直观的，并且你可能已经注意到了，没有什么去限制它只能使用number类型。 也可以使用字符串或其它更复杂的类型</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> stringNumeric <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GenericNumber</span><span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stringNumeric<span class="token punctuation">.</span>zeroValue <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>stringNumeric<span class="token punctuation">.</span><span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringNumeric<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stringNumeric<span class="token punctuation">.</span>zeroValue<span class="token punctuation">,</span> <span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="泛型约束"><a href="#泛型约束" class="headerlink" title="泛型约束"></a>泛型约束</h2><ul><li>定义一个接口来描述约束条件。 创建一个包含<code>.length</code>属性的接口，使用这个接口和extends关键字来实现约束<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">interface</span> <span class="token class-name">Lengthwise</span> <span class="token punctuation">&#123;</span>    length<span class="token operator">:</span> number<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> loggingIdentity<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">Lengthwise</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">loggingIdentity</span><span class="token punctuation">(</span><span class="token string">"good"</span><span class="token punctuation">)</span> <span class="token comment">// √</span><span class="token function">loggingIdentity</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span> <span class="token comment">// ×</span><span class="token function">loggingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>length<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment">// √</span><span class="token function">loggingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment">// ×</span><span class="token function">loggingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// √</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="在泛型约束中使用类型参数"><a href="#在泛型约束中使用类型参数" class="headerlink" title="在泛型约束中使用类型参数"></a>在泛型约束中使用类型参数</h2><ul><li>声明一个类型参数，且它被另一个类型参数所约束。 比如，现在我们想要用属性名从对象里获取这个属性。 并且我们想要确保这个属性存在于对象 obj上，因此我们需要在这两个类型之间使用约束<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token punctuation">&#123;</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> d<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">getProperty</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">getProperty</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token string">"m"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error: Argument of type 'm' isn't assignable to 'a' | 'b' | 'c' | 'd'.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;定义泛型函数&quot;&gt;&lt;a href=&quot;#定义泛型函数&quot; class=&quot;headerlink&quot; title=&quot;定义泛型函数&quot;&gt;&lt;/a&gt;定义泛型函数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;为了确保传入的类型与返回的类型相同，使用&lt;code&gt;类型变量T&lt;/code&gt;表示传入参数和返回值</summary>
      
    
    
    
    <category term="TypeScript" scheme="http://damao2250.com/categories/TypeScript/"/>
    
    
    <category term="TS" scheme="http://damao2250.com/tags/TS/"/>
    
    <category term="TypeScript" scheme="http://damao2250.com/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>浏览器渲染页面过程</title>
    <link href="http://damao2250.com/2024/06/25/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E9%A1%B5%E9%9D%A2%E8%BF%87%E7%A8%8B/"/>
    <id>http://damao2250.com/2024/06/25/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E9%A1%B5%E9%9D%A2%E8%BF%87%E7%A8%8B/</id>
    <published>2024-06-25T09:09:23.000Z</published>
    <updated>2024-06-25T09:16:45.560Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浏览器是如何渲染页面的？"><a href="#浏览器是如何渲染页面的？" class="headerlink" title="浏览器是如何渲染页面的？"></a>浏览器是如何渲染页面的？</h2><p>当浏览器的网络线程收到 HTML 文档后，会产生一个渲染任务，并将其传递给渲染主线程的消息队列。<br>在事件循环机制的作用下，渲染主线程取出消息队列中的渲染任务，开启渲染流程。</p><p>整个渲染流程分为多个阶段，分别是： HTML 解析、样式计算、布局、分层、绘制、分块、光栅化、画<br>每个阶段都有明确的输入输出，上一个阶段的输出会成为下一个阶段的输入。<br>这样，整个渲染流程就形成了一套组织严密的生产流水线。</p><h3 id="渲染的第一步是解析-HTML。"><a href="#渲染的第一步是解析-HTML。" class="headerlink" title="渲染的第一步是解析 HTML。"></a>渲染的第一步是解析 HTML。</h3><p>解析过程中遇到 CSS 解析 CSS，遇到 JS 执行 JS。为了提高解析效率，浏览器在开始解析前，会启动一个预解析的线程，率先下载 HTML 中的外部 CSS 文件和 外部的 JS 文件。<br>如果主线程解析到link位置，此时外部的 CSS 文件还没有下载解析好，主线程不会等待，继续解析后续的 HTML。这是因为下载和解析 CSS 的工作是在预解析线程中进行的。这就是 CSS 不会阻塞 HTML 解析的根本原因。<br>如果主线程解析到script位置，会停止解析 HTML，转而等待 JS 文件下载好，并将全局代码解析执行完成后，才能继续解析 HTML。这是因为 JS 代码的执行过程可能会修改当前的 DOM 树，所以 DOM 树的生成必须暂停。这就是 JS 会阻塞 HTML 解析的根本原因。<br>第一步完成后，会得到 DOM 树和 CSSOM 树，浏览器的默认样式、内部样式、外部样式、行内样式均会包含在 CSSOM 树中。</p><h3 id="渲染的下一步是样式计算。"><a href="#渲染的下一步是样式计算。" class="headerlink" title="渲染的下一步是样式计算。"></a>渲染的下一步是样式计算。</h3><p>主线程会遍历得到的 DOM 树，依次为树中的每个节点计算出它最终的样式，称之为 Computed Style。<br>在这一过程中，很多预设值会变成绝对值，比如red会变成rgb(255,0,0)；相对单位会变成绝对单位，比如em会变成px<br>这一步完成后，会得到一棵带有样式的 DOM 树。</p><h3 id="接下来是布局，布局完成后会得到布局树。"><a href="#接下来是布局，布局完成后会得到布局树。" class="headerlink" title="接下来是布局，布局完成后会得到布局树。"></a>接下来是布局，布局完成后会得到布局树。</h3><p>布局阶段会依次遍历 DOM 树的每一个节点，计算每个节点的几何信息。例如节点的宽高、相对包含块的位置。<br>大部分时候，DOM 树和布局树并非一一对应。<br>比如display:none的节点没有几何信息，因此不会生成到布局树；又比如使用了伪元素选择器，虽然 DOM 树中不存在这些伪元素节点，但它们拥有几何信息，所以会生成到布局树中。还有匿名行盒、匿名块盒等等都会导致 DOM 树和布局树无法一一对应。</p><h3 id="下一步是分层"><a href="#下一步是分层" class="headerlink" title="下一步是分层"></a>下一步是分层</h3><p>主线程会使用一套复杂的策略对整个布局树中进行分层。<br>分层的好处在于，将来某一个层改变后，仅会对该层进行后续处理，从而提升效率。<br>滚动条、堆叠上下文、transform、opacity 等样式都会或多或少的影响分层结果，也可以通过will-change属性更大程度的影响分层结果。</p><h3 id="再下一步是绘制"><a href="#再下一步是绘制" class="headerlink" title="再下一步是绘制"></a>再下一步是绘制</h3><p>主线程会为每个层单独产生绘制指令集，用于描述这一层的内容该如何画出来。<br>完成绘制后，主线程将每个图层的绘制信息提交给合成线程，剩余工作将由合成线程完成。<br>合成线程首先对每个图层进行分块，将其划分为更多的小区域。<br>它会从线程池中拿取多个线程来完成分块工作。<br>分块完成后，进入光栅化阶段。<br>合成线程会将块信息交给 GPU 进程，以极高的速度完成光栅化。<br>GPU 进程会开启多个线程来完成光栅化，并且优先处理靠近视口区域的块。<br>光栅化的结果，就是一块一块的位图</p><h3 id="最后一个阶段就是画了"><a href="#最后一个阶段就是画了" class="headerlink" title="最后一个阶段就是画了"></a>最后一个阶段就是画了</h3><p>合成线程拿到每个层、每个块的位图后，生成一个个「指引（quad）」信息。<br>指引会标识出每个位图应该画到屏幕的哪个位置，以及会考虑到旋转、缩放等变形。<br>变形发生在合成线程，与渲染主线程无关，这就是transform效率高的本质原因。<br>合成线程会把 quad 提交给 GPU 进程，由 GPU 进程产生系统调用，提交给 GPU 硬件，完成最终的屏幕成像。</p><p><a href="https://www.cnblogs.com/xw-01/p/18259655">摘自&lt;二价亚铁&gt;-你不知道的CSS之包含块-附加</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;浏览器是如何渲染页面的？&quot;&gt;&lt;a href=&quot;#浏览器是如何渲染页面的？&quot; class=&quot;headerlink&quot; title=&quot;浏览器是如何渲染页面的？&quot;&gt;&lt;/a&gt;浏览器是如何渲染页面的？&lt;/h2&gt;&lt;p&gt;当浏览器的网络线程收到 HTML 文档后，会产生一个渲染任务</summary>
      
    
    
    
    <category term="HTML" scheme="http://damao2250.com/categories/HTML/"/>
    
    
    <category term="浏览器渲染" scheme="http://damao2250.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93/"/>
    
  </entry>
  
  <entry>
    <title>Linux防火墙</title>
    <link href="http://damao2250.com/2024/05/29/Linux%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    <id>http://damao2250.com/2024/05/29/Linux%E9%98%B2%E7%81%AB%E5%A2%99/</id>
    <published>2024-05-29T07:29:07.000Z</published>
    <updated>2024-05-29T09:52:44.392Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看firewall服务状态"><a href="#查看firewall服务状态" class="headerlink" title="查看firewall服务状态"></a>查看firewall服务状态</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ systemctl status firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>出现 Active: active (running) 表示防火墙启动状态</li><li>出现 Active: inactive (dead)  表示防火墙关闭状态</li><li>出现 Unit firewalld.service could not be found. 表示没有找到防火墙，需要先安装<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Ubuntu</span><span class="token function">apt</span> <span class="token function">install</span> firewalld<span class="token comment"># CentOS</span>yum <span class="token function">install</span> firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="查看firewall的状态"><a href="#查看firewall的状态" class="headerlink" title="查看firewall的状态"></a>查看firewall的状态</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">firewall-cmd --state<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="开启、重启、关闭、firewalld-service服务"><a href="#开启、重启、关闭、firewalld-service服务" class="headerlink" title="开启、重启、关闭、firewalld.service服务"></a>开启、重启、关闭、firewalld.service服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 开启</span>$ <span class="token function">service</span> firewalld start<span class="token comment"># 重启</span>$ <span class="token function">service</span> firewalld restart<span class="token comment"># 关闭</span>$ <span class="token function">service</span> firewalld stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="查询端口是否开放"><a href="#查询端口是否开放" class="headerlink" title="查询端口是否开放"></a>查询端口是否开放</h2><ul><li>yes 表示开放 no表示不开放<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ firewall-cmd --query-port<span class="token operator">=</span><span class="token number">8080</span>/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="开放80端口"><a href="#开放80端口" class="headerlink" title="开放80端口"></a>开放80端口</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ firewall-cmd --permanent --add-port<span class="token operator">=</span><span class="token number">80</span>/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="移除端口"><a href="#移除端口" class="headerlink" title="移除端口"></a>移除端口</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ firewall-cmd --permanent --remove-port<span class="token operator">=</span><span class="token number">8080</span>/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="查看已开放的端口"><a href="#查看已开放的端口" class="headerlink" title="查看已开放的端口"></a>查看已开放的端口</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">netstat</span> -anp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a>设置开机自启</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="设置关闭开机自启动"><a href="#设置关闭开机自启动" class="headerlink" title="设置关闭开机自启动"></a>设置关闭开机自启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl disable firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="重启防火墙-修改配置后要重启防火墙"><a href="#重启防火墙-修改配置后要重启防火墙" class="headerlink" title="重启防火墙(修改配置后要重启防火墙)"></a>重启防火墙(修改配置后要重启防火墙)</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>firwall-cmd：是Linux提供的操作firewall的一个工具；</li><li>–permanent：表示设置为持久；</li><li>–add-port：标识添加的端口；</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;查看firewall服务状态&quot;&gt;&lt;a href=&quot;#查看firewall服务状态&quot; class=&quot;headerlink&quot; title=&quot;查看firewall服务状态&quot;&gt;&lt;/a&gt;查看firewall服务状态&lt;/h2&gt;&lt;pre class=&quot;line-numbers </summary>
      
    
    
    
    <category term="Linux" scheme="http://damao2250.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://damao2250.com/tags/Linux/"/>
    
    <category term="防火墙" scheme="http://damao2250.com/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>Windows常用命令</title>
    <link href="http://damao2250.com/2024/05/22/Windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://damao2250.com/2024/05/22/Windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2024-05-22T01:48:09.000Z</published>
    <updated>2024-05-22T01:59:57.012Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看路由表"><a href="#查看路由表" class="headerlink" title="查看路由表"></a>查看路由表</h2><ul><li>Windows下查看命令<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">route PRINT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>接口列表  <span class="token number">8</span><span class="token punctuation">..</span>.9e b6 d0 f6 5d 5f <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Microsoft Wi-Fi Direct Virtual Adapter  <span class="token number">6</span><span class="token punctuation">..</span>.ae b6 d0 f6 5d 5f <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Microsoft Wi-Fi Direct Virtual Adapter <span class="token comment">#2</span> <span class="token number">13</span><span class="token punctuation">..</span>.d8 9e f3 f2 08 2c <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>ASIX USB to Gigabit Ethernet Family Adapter <span class="token comment">#2</span> <span class="token number">23</span><span class="token punctuation">..</span>.9c b6 d0 f6 5d 5f <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Killer Wireless-n/a/ac <span class="token number">1535</span> Wireless Network Adapter <span class="token number">19</span><span class="token punctuation">..</span>.00 ff bf <span class="token number">92</span> 2a 5a <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Sangfor SSL VPN CS Support System VNIC  <span class="token number">1</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.Software Loopback Interface <span class="token number">1</span> <span class="token number">21</span><span class="token punctuation">..</span>.00 <span class="token number">15</span> 5d e8 e1 ee <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Hyper-V Virtual Ethernet Adapter <span class="token number">33</span><span class="token punctuation">..</span>.00 <span class="token number">15</span> 5d <span class="token number">43</span> a6 09 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Hyper-V Virtual Ethernet Adapter <span class="token comment">#2</span> <span class="token number">40</span><span class="token punctuation">..</span>.00 <span class="token number">15</span> 5d <span class="token number">75</span> <span class="token number">16</span> ff <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Hyper-V Virtual Ethernet Adapter <span class="token comment">#3</span> <span class="token number">45</span><span class="token punctuation">..</span>.00 <span class="token number">15</span> 5d f5 0d <span class="token number">55</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Hyper-V Virtual Ethernet Adapter <span class="token comment">#4</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>IPv4 路由表<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>活动路由:          网络目标        网络掩码                  网关              接口   跃点数          <span class="token number">0.0</span>.0.0          <span class="token number">0.0</span>.0.0          <span class="token number">172.18</span>.2.1     <span class="token number">172.18</span>.3.140     <span class="token number">35</span>        <span class="token number">127.0</span>.0.0        <span class="token number">255.0</span>.0.0            在链路上         <span class="token number">127.0</span>.0.1    <span class="token number">331</span>  <span class="token number">255.255</span>.255.255  <span class="token number">255.255</span>.255.255            在链路上      <span class="token number">172.30</span>.224.1   <span class="token number">5256</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>永久路由:          网络地址          网络掩码         网关地址   跃点数        <span class="token number">137.0</span>.0.0      <span class="token number">255.255</span>.0.0      <span class="token number">138.0</span>.0.250       <span class="token number">1</span>        <span class="token number">138.0</span>.0.0      <span class="token number">255.255</span>.0.0     <span class="token number">137.0</span>.23.176       <span class="token number">1</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>IPv6 路由表<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>活动路由: 接口跃点数网络目标                网关  <span class="token number">1</span>    <span class="token number">331</span> ::1/128                  在链路上 <span class="token number">13</span>    <span class="token number">291</span> fe80::/64                在链路上 <span class="token number">23</span>    <span class="token number">291</span> fe80::/64                在链路上<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>永久路由:  无<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>Linux系统中查看路由表：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ip</span> route show<span class="token comment"># or</span><span class="token function">netstat</span> -rn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;查看路由表&quot;&gt;&lt;a href=&quot;#查看路由表&quot; class=&quot;headerlink&quot; title=&quot;查看路由表&quot;&gt;&lt;/a&gt;查看路由表&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Windows下查看命令&lt;pre class=&quot;line-numbers language-bash&quot; </summary>
      
    
    
    
    <category term="Windows" scheme="http://damao2250.com/categories/Windows/"/>
    
    
    <category term="Windows" scheme="http://damao2250.com/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>GO取指针和取值</title>
    <link href="http://damao2250.com/2024/05/10/GO%E5%8F%96%E6%8C%87%E9%92%88%E5%92%8C%E5%8F%96%E5%80%BC/"/>
    <id>http://damao2250.com/2024/05/10/GO%E5%8F%96%E6%8C%87%E9%92%88%E5%92%8C%E5%8F%96%E5%80%BC/</id>
    <published>2024-05-10T08:25:24.000Z</published>
    <updated>2024-05-11T01:44:46.484Z</updated>
    
    <content type="html"><![CDATA[<ul><li>GO取值和取指针的操作<ul><li><code>*</code>是取值，即获取指针指向的值；<code>&amp;</code>取指针，即获取变量的地址<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span>func <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 取值 start</span><span class="token keyword">var</span> a int <span class="token operator">=</span> <span class="token number">666</span><span class="token keyword">var</span> b int <span class="token operator">=</span> a  <span class="token comment">// a是值传递，b取到的是a的值</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// 输出：666</span><span class="token comment">// 取值 end</span><span class="token comment">// a的类型 start</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"a的类型为：: %T\n"</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span> <span class="token comment">// a的类型为：: int</span><span class="token comment">// a的类型 end</span><span class="token comment">// 取指针 start</span><span class="token keyword">var</span> c <span class="token operator">*</span>int <span class="token operator">=</span> <span class="token operator">&amp;</span>a <span class="token comment">// c取到的是a的地址，c是一个指针，指向a的地址</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>  <span class="token comment">// 输出：0xc00000a0b8</span><span class="token comment">// 取指针 end</span><span class="token comment">// 指针类型 start</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"c的指针类型为：: %T\n"</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token comment">// c的指针类型为：: *int</span><span class="token comment">// 指针类型 end</span><span class="token comment">// 通过指针取值 start</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">*</span>c<span class="token punctuation">)</span> <span class="token comment">// 输出：666</span><span class="token comment">// 通过指针取值 end</span><span class="token comment">// 修改指针指向的值 start</span><span class="token operator">*</span>c <span class="token operator">=</span> <span class="token number">789</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">*</span>c<span class="token punctuation">)</span> <span class="token comment">// 输出：789</span><span class="token comment">// 修改指针指向的值 end</span><span class="token comment">// 指针作为参数传递并参与运算</span><span class="token function">sum1</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>func <span class="token function">sum1</span><span class="token punctuation">(</span><span class="token parameter">params <span class="token operator">*</span>int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">*</span>params<span class="token punctuation">)</span> <span class="token comment">// 输出：789</span><span class="token operator">*</span>params <span class="token operator">=</span> <span class="token operator">*</span>params <span class="token operator">+</span> <span class="token number">1</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">*</span>params<span class="token punctuation">)</span> <span class="token comment">// 输出：790</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;GO取值和取指针的操作&lt;ul&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt;是取值，即获取指针指向的值；&lt;code&gt;&amp;amp;&lt;/code&gt;取指针，即获取变量的地址&lt;pre class=&quot;line-numbers language-js&quot; data-language=&quot;</summary>
      
    
    
    
    <category term="GO" scheme="http://damao2250.com/categories/GO/"/>
    
    
    <category term="指针" scheme="http://damao2250.com/tags/%E6%8C%87%E9%92%88/"/>
    
    <category term="指针类型" scheme="http://damao2250.com/tags/%E6%8C%87%E9%92%88%E7%B1%BB%E5%9E%8B/"/>
    
    <category term="指针取值" scheme="http://damao2250.com/tags/%E6%8C%87%E9%92%88%E5%8F%96%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>JS中的groupBy</title>
    <link href="http://damao2250.com/2024/04/26/JS%E4%B8%AD%E7%9A%84groupBy/"/>
    <id>http://damao2250.com/2024/04/26/JS%E4%B8%AD%E7%9A%84groupBy/</id>
    <published>2024-04-26T03:41:01.000Z</published>
    <updated>2024-04-26T05:52:41.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="手动实现"><a href="#手动实现" class="headerlink" title="手动实现"></a>手动实现</h2><ul><li>使用 <code>reduce</code> 方法实现 <code>groupBy</code> 函数来实现将数组中的元素根据某个属性或条件分组</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">groupBy</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result<span class="token punctuation">,</span> element</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 使用 key 函数获取分组的键</span>    <span class="token keyword">const</span> groupKey <span class="token operator">=</span> <span class="token function">key</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 如果结果对象中没有这个键，就创建一个空数组</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">[</span>groupKey<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      result<span class="token punctuation">[</span>groupKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 将元素添加到对应的数组中</span>    result<span class="token punctuation">[</span>groupKey<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> people <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jane'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Joan'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 使用 groupBy 方法</span><span class="token keyword">const</span> peopleByAge <span class="token operator">=</span> <span class="token function">groupBy</span><span class="token punctuation">(</span>people<span class="token punctuation">,</span> <span class="token parameter">person</span> <span class="token operator">=></span> person<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>peopleByAge<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// `groupBy` 函数接收两个参数：一个数组和一个函数，这个函数用于从数组的每个元素中提取分组的键。</span><span class="token comment">// `reduce` 方法遍历数组，为每个不同的键创建一个新数组，并将具有相同键的元素添加到对应的数组中。</span><span class="token comment">// 输出</span><span class="token punctuation">&#123;</span>  <span class="token string">'20'</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jane'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token string">'30'</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Joan'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="原生支持-Object-groupBy"><a href="#原生支持-Object-groupBy" class="headerlink" title="原生支持 Object.groupBy"></a>原生支持 Object.groupBy</h2><ul><li><code>ECMAScript 2024（ES15）</code>提案已加入 <code>Object.groupBy</code> 方法</li><li>注意目前需要谷歌浏览器<code>117</code>以上的版本才能运行</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> people <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jane'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Joan'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 调用</span><span class="token keyword">const</span> peopleByAge <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span>people<span class="token punctuation">,</span> <span class="token parameter">person</span> <span class="token operator">=></span> person<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>peopleByAge<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 输出</span><span class="token punctuation">&#123;</span>  <span class="token string">'20'</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jane'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token string">'30'</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Joan'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;手动实现&quot;&gt;&lt;a href=&quot;#手动实现&quot; class=&quot;headerlink&quot; title=&quot;手动实现&quot;&gt;&lt;/a&gt;手动实现&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;reduce&lt;/code&gt; 方法实现 &lt;code&gt;groupBy&lt;/code&gt; 函数来实现将数</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://damao2250.com/categories/JavaScript/"/>
    
    
    <category term="groupBy" scheme="http://damao2250.com/tags/groupBy/"/>
    
  </entry>
  
  <entry>
    <title>Vue中的键盘事件</title>
    <link href="http://damao2250.com/2024/03/01/Vue%E4%B8%AD%E7%9A%84%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/"/>
    <id>http://damao2250.com/2024/03/01/Vue%E4%B8%AD%E7%9A%84%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/</id>
    <published>2024-03-01T07:50:11.000Z</published>
    <updated>2024-03-01T07:54:27.161Z</updated>
    
    <content type="html"><![CDATA[<h2 id="字母键"><a href="#字母键" class="headerlink" title="字母键"></a>字母键</h2><ul><li>只有按下q键时才会执行send方法<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>input v<span class="token operator">-</span>on<span class="token operator">:</span>keyup<span class="token punctuation">.</span><span class="token constant">Q</span><span class="token operator">=</span><span class="token string">"send"</span> type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="大写锁定键"><a href="#大写锁定键" class="headerlink" title="大写锁定键"></a>大写锁定键</h2><ul><li>只有按下capslock键时才会执行send方法<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>input v<span class="token operator">-</span>on<span class="token operator">:</span>keyup<span class="token punctuation">.</span>caps<span class="token operator">-</span>lock<span class="token operator">=</span><span class="token string">"send"</span> type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="回车键"><a href="#回车键" class="headerlink" title="回车键"></a>回车键</h2><ul><li>只有按下回车键时才会执行 send 方法<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>input v<span class="token operator">-</span>on<span class="token operator">:</span>keyup<span class="token punctuation">.</span>enter<span class="token operator">=</span><span class="token string">"send"</span> type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="Alt-字母组合键"><a href="#Alt-字母组合键" class="headerlink" title="Alt+字母组合键"></a>Alt+字母组合键</h2><ul><li>keyup事件时需要同时按下组合键才会执行send方法<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>input v<span class="token operator">-</span>on<span class="token operator">:</span>keyup<span class="token punctuation">.</span>Alt<span class="token punctuation">.</span>y<span class="token operator">=</span><span class="token string">"send"</span> type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="自定义按键"><a href="#自定义按键" class="headerlink" title="自定义按键"></a>自定义按键</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 13是回车键的键码，将他的别名定义为send</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>keyCodes<span class="token punctuation">.</span>send<span class="token operator">=</span><span class="token number">13</span><span class="token comment">// 只有按下回车键时才会执行send方法</span><span class="token operator">&lt;</span>input v<span class="token operator">-</span>on<span class="token operator">:</span>keydown<span class="token punctuation">.</span>send<span class="token operator">=</span><span class="token string">"send"</span> type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;字母键&quot;&gt;&lt;a href=&quot;#字母键&quot; class=&quot;headerlink&quot; title=&quot;字母键&quot;&gt;&lt;/a&gt;字母键&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;只有按下q键时才会执行send方法&lt;pre class=&quot;line-numbers language-js&quot; data-</summary>
      
    
    
    
    <category term="Vue" scheme="http://damao2250.com/categories/Vue/"/>
    
    
    <category term="键盘事件" scheme="http://damao2250.com/tags/%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>我的2023</title>
    <link href="http://damao2250.com/2023/12/28/%E6%88%91%E7%9A%842023/"/>
    <id>http://damao2250.com/2023/12/28/%E6%88%91%E7%9A%842023/</id>
    <published>2023-12-28T01:09:26.000Z</published>
    <updated>2024-01-02T11:12:54.983Z</updated>
    
    <content type="html"><![CDATA[<p>时间飞逝，转眼又是年末，是时候掏出我去年的年终总结啦 (╯°□°）╯︵ ┻━┻</p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/a14238c613d054a0c412ddd2339e666.jpg"></p><p>哈哈，玩笑归玩笑，但今年确实重感冒了几次，不确定是不是阳了，但是能确定的是戴口罩几年体抗力是有所下降了。</p><p>过去的一年其实有不少事情值得记录以待他日回味的，但当我准备动笔记录那些忙碌的故事时，却总感到思绪断片不知从何入手，恨不得每个时刻都能流水线般全都记下，但每个精彩的瞬间又都是一段段孤立的片段，在努力回忆这一年做过的事情，希望可以拼凑出一个完整的2023。</p><h2 id="膝盖疼"><a href="#膝盖疼" class="headerlink" title="膝盖疼"></a>膝盖疼</h2><p>先说一个持续时间最长的也是困扰我最久事情吧，那就是蹲下几分钟后右脚的膝盖会超级痛，站起来无法立马伸直走动，但是左脚啥问题都没有。从22年11月中旬左右，一直到23年10月份才有好转，起初发现这个现象的时候没多在意，以为是蹲久了膝盖会有点痛而已，好家伙这一痛之后，接下来的好几个月都有这种症状。</p><p>等我反应过来的时候已经到23年2月份了（也就是过完春节后），立马寻医问诊，去医院拍片医生说没看出来有什么异常，给开了一些缓解关节疼痛的药及外贴的药膏，按照医嘱用药后是有些缓解，没那么痛了。但是这并没有持续多久，大概半个多月后又回到原来的症状。一直到到五月底，又去看了一位中医，医生说需要调理一周看看情况，给开了一周的中药（捏着鼻子喝的那种）。真别说这个中药有点效果，喝了三天之后感觉已经好了很多了，蹲个几分钟起来就只有一点点痛的感觉了，不会至于说无法伸直。但是好景不长，服完一周的药后，大概第三个星期，又回到原来的症状，跟那个中医说了情况，他回应这个是慢性病再开药调理一周，回想前面的西药服用完也差不多是这个效果，心想先不理了。</p><p>联系到平时的工作，想着是不是因为久坐的原因，于是平时坐一段时间后就起身走动走动，拒绝二郎腿，换了一个靠背支撑比较硬的椅子，持续两个月之后疼痛感已经有所好转了。再到后面10月底左右基本蹲下去再起来不会有什么疼痛感，感觉比较正常了，一直到现在虽然还会有点点感觉不一样，但是基本可以忽略不计了。可最后也还是不知道是什么原因引起的，也不知道是中药还是西药起的作用才好的。</p><p>这一整个过程是真的煎熬，有种“问天天不应，叫地地不灵”的感觉，疼痛折磨就算了，找不出个病因，心理也很折磨。咋说，还是那句老话“身体是革命的本钱”，平时还是要好好锻炼，多注意休息。</p><h2 id="毕业设计"><a href="#毕业设计" class="headerlink" title="毕业设计"></a>毕业设计</h2><p>按照时间线，应该说到我的毕业设计了，从2月份开始准备开题报告，到4月中旬的论文初稿完成，再到4月25的答辩，一路紧张准备着，终于再在7月中旬顺利拿到了仲恺农业工程学院的毕业证书。这也算是体验了一次毕设的设计修改完成的流程，毕业设计的指导老师也算是比较上心的。据他所说，我是写的比较认真的一个，所以最后抽部分人去答辩里面有我一个名额。因为都是自己写的项目，答辩的时候基本没什么压力。再说到这个毕业证书，然后用处不是很大了，但也胜过没有。从此我也是仲恺的校友之一了，哈哈u(￣▽￣)”</p><h2 id="求婚-amp-领证"><a href="#求婚-amp-领证" class="headerlink" title="求婚&amp;领证"></a>求婚&amp;领证</h2><p>接下来就是比较重要的两件事情了——求婚和领证。求婚这个事情早在六月初的时候就开始规划了，设想过很多种方案，网上看了很多攻略，知道最重要的就是道具和氛围，于是马上购买了必备的求婚钻石戒指（哈哈，当然是莫桑石戒指）。因为当时我俩比较喜欢去灵山岛那边露营，灵山岛风景又很优美，设想过在那边直接让外卖送一大束花过来，然后自己掏出戒指开始求婚，现场很多免费的演员，只要自己大声喊出来，一定会有很多吃瓜群众过来凑热闹的，于是后面好几次去灵山岛我都在背包里放着我的“钻戒”带过去。但是去到那边我才发现这也太空旷了，“群众演员”也是三三两两比较稀疏，如果是外卖送过来的花必定显得太单薄，而且最最最重要的一点是我忘记了自己不是一头“社牛”，完全没有这个勇气，这个想法只能告一段落。</p><p>又过了段时间依然没有其他头绪，于是网上找了很多那些所谓的求婚现场布置团队，跟人家一聊，报价2k+还需要提供场地。一来没预算，二来没场地，租场地又要支出一笔钱，后来灵光一闪，灵山岛不就是一个免费的场地嘛？纠集了好久还是放弃了，一个费钱，一个指引她到场地需要确保万无一失，还需要一些熟人来捧场，不然会比较尬场。</p><p>纠结来纠结去，时间就到了九月份，正好9月21日是她生日，那不如就趁着这个机会生日加求婚一起进行。这样一举两得，自己网上买道具回来可比请人来要划算得多，两百多就搞定生日道具跟求婚用的道具。当你以为万事俱备只欠东风的时候，意外情况就出现了。她生日那天是星期四，但是按照惯例她星期二出差星期五才回来呀！既然是这样，那我就先摆好道具，定好蛋糕周五送过来，等周五她回来的时候就给她一个惊喜也可以，OK，那就这么愉快的决定了。但是，凡事都有个但是，你以为这就完了嘛？我公司三十周年庆活动刚好也选在了周五这一天，全公司人员都需要到接近增城那边举办半马活动！这真是双重打击。可是我的道具都已经买好了呀，而且错过了这个时间，都不知道排到什么时候了。</p><p>于是在她生日那天请了一天假，跟她说太累想休息一天，她也没太多注意，然后打了大半天的气球，绑出一个心形得形状，在客订摆放好生日用的道具，在卧室摆放好求婚用的道具，把所有的道具都摆好。设想到时她回来先在客厅看到给她生日布置的场景，然后在引导她到卧室看到求婚的场景，接着自己跟求婚。嗯，堪称非常完美，绝对万无一失了！她生日的当天晚上，当然还是得拍一下我精心布置的生日场景给她，祝福她生日快乐，当晚我也订了一束鲜艳的玫瑰花（记住这束花，后面要考），拍照给她看，她乐呵得发朋友圈夸我突然变得浪漫。当天晚上也忙着摆道具到凌晨，忙完倒头就睡了。</p><p>第二天早早起来把昨晚的那一束花放到卧室，开着空调不让它萎蔫，然后参加公司下午举办的半马活动，想着参加完就立马回来把所有的一切都准备好，等她回来，给她一个惊喜。但是现实先给我一个惊喜，当天下午她居然说这次要提早回来！啊？？？那我准备的不是白费了？看到她给我发这个消息的时候，我的半马才跑了一半，一看时间，我跑完结束的时候她差不多到南站，于是跟她说让她等我一起回去，她答应说可以，于是我赶紧来跑完，但是越往后面跑就越没体力了，肯本跑不动，只能慢慢跑，跑完之后发现她已经在七号线等我了，但我从我的位置到她在七号线等我的位置还要接近一个半小时的时间。她等了半个小时之后已经不耐烦了，说要先回去，我左磨右磨才劝得住她等我。她能等我我已经很不错了，我已经不在想着有啥惊喜了，回去到门口就直接告诉她我给她准备的一些惊喜。</p><p>此时我已经没抱有让她特别惊喜的想念了。然而柳暗花明又一村，我又看到希望了，她在等我的时候跟我说她妹妹今天也要去我们那里，而且已经准备到了，哈哈哈，我大喜，天助我也！赶紧跟她妹妹联系，说明我的计划，让她帮我提前帮我弄好灯光，到此一切准备就绪。回去的路上把那些想好的台词重复n次，心里依然觉得很紧张，哈哈哈… 回去后，按计划她先看到布置的生日场景，她很开心，接着我跟她说“你知道我昨晚拍照给你花放在哪里了嘛？我把它放在卧室里开了一天的空调等你回来，你可以进去帮我拿出来吗？”于是她就进卧室了，我赶紧把我的求婚戒指拿出来，她开门的那个一刻给惊喜到了，她回头的时候我已经准备好求婚的仪式，正式跟她求婚，到此完成了我的求婚仪式</p><p>求完婚后我们也确定了领证的日子，定在了23023年10月23日。领证就比较流水线了，提前跟民政局预约好时间，预约好婚检。当天就是约好化妆师、跟拍，化完妆后直接去民政局排队领证，跟拍全程在摄影拍照。当时也是叫了双方的亲戚过来吃晚饭，晚饭的过程我们还搞了一些活动，一人一张彩票加一张刮刮乐，后面还有抽奖部分人能拿到面额更大的刮刮乐（该说不说，刮刮乐我买了一本多一点，全都刮完了，没有回本），大家都很开心，我也终于走到了我人生一个比较大的转折点</p><p>来两张配图：<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/0a86b0c28ecf90c065c4b63ac7ae01e.jpg"></p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/839e159021fccbbead32e5032eb5c17.jpg"></p><h2 id="收楼"><a href="#收楼" class="headerlink" title="收楼"></a>收楼</h2><p>最后一个要说的就是我们赶在2023年12月29日收楼啦，收楼过程算是比较顺利，没啥大问题。终于可以开始打造属于我们温暖的小窝啦！</p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/1704193905798.jpg"></p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/715b43d33f3fb4c1c3d384085e88d18.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;时间飞逝，转眼又是年末，是时候掏出我去年的年终总结啦 (╯°□°）╯︵ ┻━┻&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Damao2250/FileTransfer/master/a14238c613d054a0</summary>
      
    
    
    
    <category term="总结" scheme="http://damao2250.com/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="2023" scheme="http://damao2250.com/tags/2023/"/>
    
  </entry>
  
  <entry>
    <title>常用网址记录</title>
    <link href="http://damao2250.com/2023/12/19/%E5%B8%B8%E7%94%A8%E7%BD%91%E5%9D%80%E8%AE%B0%E5%BD%95/"/>
    <id>http://damao2250.com/2023/12/19/%E5%B8%B8%E7%94%A8%E7%BD%91%E5%9D%80%E8%AE%B0%E5%BD%95/</id>
    <published>2023-12-19T10:55:35.000Z</published>
    <updated>2024-03-06T03:52:58.297Z</updated>
    
    <content type="html"><![CDATA[<h2 id="医药"><a href="#医药" class="headerlink" title="医药"></a>医药</h2><ul><li>中国医药信息查询平台：<a href="https://www.dayi.org.cn/">https://www.dayi.org.cn/</a></li></ul><h2 id="气象-地图"><a href="#气象-地图" class="headerlink" title="气象/地图"></a>气象/地图</h2><ul><li>MSN天气图：<a href="https://www.msn.cn/zh-cn/weather/maps?type=temperature">https://www.msn.cn/zh-cn/weather/maps?type=temperature</a></li></ul><h2 id="影视-or-网盘-or-图书"><a href="#影视-or-网盘-or-图书" class="headerlink" title="影视 or 网盘 or 图书"></a>影视 or 网盘 or 图书</h2><ul><li>奈飞热剧-PAN99：<a href="https://pan99.xyz/">https://pan99.xyz/</a></li><li>云盘分享社：<a href="https://www.yunpanfenxiang.cn/">https://www.yunpanfenxiang.cn/</a></li><li>耐卡-欧美剧集：<a href="https://mcar.vip/forum.php?mod=forumdisplay&fid=129">https://mcar.vip/forum.php?mod=forumdisplay&amp;fid=129</a></li><li>4K世界：<a href="https://www.4ksj.com/4k-uhd-1.html">https://www.4ksj.com/4k-uhd-1.html</a></li><li>libvio(影视)：<a href="https://www.libvio.me/">https://www.libvio.me/</a></li><li>Anna’s Archive（电子书）：<a href="https://zh.annas-archive.org/">https://zh.annas-archive.org/</a></li></ul><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><ul><li>丑搜-博客搜索：<a href="https://uglysearch.othing.xyz/">https://uglysearch.othing.xyz/</a></li></ul><h2 id="网络宽带"><a href="#网络宽带" class="headerlink" title="网络宽带"></a>网络宽带</h2><ul><li>广东电信宽带测速平台：<a href="https://10000.gd.cn/#/speed">https://10000.gd.cn/#/speed</a></li><li>中国科学技术大学测速网站：<a href="https://test.ustc.edu.cn/">https://test.ustc.edu.cn/</a></li><li>speedtest：<a href="https://www.speedtest.net/">https://www.speedtest.net/</a></li><li>speedtest.im：<a href="https://speedtest.im/">https://speedtest.im/</a></li></ul><h2 id="政企相关"><a href="#政企相关" class="headerlink" title="政企相关"></a>政企相关</h2><ul><li>广州阳光家缘：<a href="http://zfcj.gz.gov.cn/zfcj/ygjy">http://zfcj.gz.gov.cn/zfcj/ygjy</a></li><li>南沙区金洲农贸市场菜篮子零售价：<a href="https://www.gzns.gov.cn/zwgk/zdlyxxgk/jghsf/jgbz/">https://www.gzns.gov.cn/zwgk/zdlyxxgk/jghsf/jgbz/</a></li><li>中国家电网-零售监测：<a href="http://info.cheaa.com/zhoubao.shtml">http://info.cheaa.com/zhoubao.shtml</a></li></ul><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><ul><li>CS自学指南：<a href="https://csdiy.wiki/">https://csdiy.wiki/</a></li><li>AI算法工程师手册：<a href="https://www.huaxiaozhuan.com/">https://www.huaxiaozhuan.com/</a></li></ul><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li>所有时区的精确时间：<a href="https://time.is/">https://time.is/</a></li><li>中国家电网：<a href="http://www.cheaa.com/">http://www.cheaa.com/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;医药&quot;&gt;&lt;a href=&quot;#医药&quot; class=&quot;headerlink&quot; title=&quot;医药&quot;&gt;&lt;/a&gt;医药&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;中国医药信息查询平台：&lt;a href=&quot;https://www.dayi.org.cn/&quot;&gt;https://www.dayi.o</summary>
      
    
    
    
    <category term="网址" scheme="http://damao2250.com/categories/%E7%BD%91%E5%9D%80/"/>
    
    
    <category term="网址" scheme="http://damao2250.com/tags/%E7%BD%91%E5%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>人民币数字大写转换工具</title>
    <link href="http://damao2250.com/2023/11/27/%E4%BA%BA%E6%B0%91%E5%B8%81%E6%95%B0%E5%AD%97%E5%A4%A7%E5%86%99%E8%BD%AC%E6%8D%A2%E5%B7%A5%E5%85%B7/"/>
    <id>http://damao2250.com/2023/11/27/%E4%BA%BA%E6%B0%91%E5%B8%81%E6%95%B0%E5%AD%97%E5%A4%A7%E5%86%99%E8%BD%AC%E6%8D%A2%E5%B7%A5%E5%85%B7/</id>
    <published>2023-11-27T01:36:33.000Z</published>
    <updated>2023-11-27T02:22:37.975Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">convertCurrency</span><span class="token punctuation">(</span><span class="token parameter">currencyDigits</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> integral<span class="token punctuation">,</span> decimal<span class="token punctuation">,</span> outputCharacters<span class="token punctuation">,</span> parts<span class="token punctuation">,</span> digits<span class="token punctuation">,</span> radices<span class="token punctuation">,</span> bigRadices<span class="token punctuation">,</span> decimals<span class="token punctuation">,</span> zeroCount<span class="token punctuation">,</span> i<span class="token punctuation">,</span> p<span class="token punctuation">,</span> d<span class="token punctuation">,</span> ds<span class="token punctuation">,</span> quotient<span class="token punctuation">,</span> modulus<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span>currencyDigits<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'number'</span><span class="token punctuation">)</span> currencyDigits <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>currencyDigits<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">==</span> currencyDigits<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"不能为空 请输入数字金额!如：123.23"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> currencyDigits<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^,.\d]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"输入字符串中的字符无效!"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> currencyDigits<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^((\d&#123;1,3&#125;(,\d&#123;3&#125;)*(.((\d&#123;3&#125;,)*\d&#123;1,3&#125;))?)|(\d+(.\d+)?))$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"请输入正确的数字金额!"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>currencyDigits <span class="token operator">=</span> <span class="token punctuation">(</span>currencyDigits <span class="token operator">=</span> currencyDigits<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">,</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^0+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Number</span><span class="token punctuation">(</span>currencyDigits<span class="token punctuation">)</span> <span class="token operator">></span>    <span class="token number">99999999999.99</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Too large a number to convert!"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>parts <span class="token operator">=</span> currencyDigits<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token punctuation">(</span>integral <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> decimal <span class="token operator">=</span> <span class="token punctuation">(</span>decimal <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>integral <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> decimal <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span> digits <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">"零"</span><span class="token punctuation">,</span> <span class="token string">"壹"</span><span class="token punctuation">,</span> <span class="token string">"贰"</span><span class="token punctuation">,</span> <span class="token string">"叁"</span><span class="token punctuation">,</span> <span class="token string">"肆"</span><span class="token punctuation">,</span> <span class="token string">"伍"</span><span class="token punctuation">,</span> <span class="token string">"陆"</span><span class="token punctuation">,</span> <span class="token string">"柒"</span><span class="token punctuation">,</span> <span class="token string">"捌"</span><span class="token punctuation">,</span>      <span class="token string">"玖"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radices <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"拾"</span><span class="token punctuation">,</span> <span class="token string">"佰"</span><span class="token punctuation">,</span> <span class="token string">"仟"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bigRadices <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"万"</span><span class="token punctuation">,</span> <span class="token string">"亿"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> decimals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>        <span class="token string">"角"</span><span class="token punctuation">,</span> <span class="token string">"分"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> outputCharacters <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token function">Number</span><span class="token punctuation">(</span>integral<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>zeroCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> integral<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> quotient <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> integral<span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">,</span> modulus <span class="token operator">=</span> p <span class="token operator">%</span>      <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"0"</span> <span class="token operator">==</span> <span class="token punctuation">(</span>d <span class="token operator">=</span> integral<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> zeroCount<span class="token operator">++</span> <span class="token operator">:</span> <span class="token punctuation">(</span>zeroCount <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>outputCharacters <span class="token operator">+=</span> digits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        zeroCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> outputCharacters <span class="token operator">+=</span> digits<span class="token punctuation">[</span><span class="token function">Number</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> radices<span class="token punctuation">[</span>modulus<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token operator">==</span> modulus <span class="token operator">&amp;&amp;</span> zeroCount <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span>      <span class="token punctuation">(</span>outputCharacters <span class="token operator">+=</span> bigRadices<span class="token punctuation">[</span>quotient<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    outputCharacters <span class="token operator">+=</span> <span class="token string">"元"</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">!=</span> decimal<span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> decimal<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> d <span class="token operator">=</span> decimal<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ds <span class="token operator">=</span> decimal<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> outputCharacters <span class="token operator">+=</span>      <span class="token number">0</span> <span class="token operator">==</span> d <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">==</span> ds <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> digits<span class="token punctuation">[</span><span class="token function">Number</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">:</span> digits<span class="token punctuation">[</span><span class="token function">Number</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> decimals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token string">""</span> <span class="token operator">==</span> outputCharacters <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>outputCharacters <span class="token operator">=</span> <span class="token string">"零元"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span> <span class="token operator">==</span> decimal <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>outputCharacters <span class="token operator">+=</span> <span class="token string">"整"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    outputCharacters <span class="token operator">=</span> <span class="token string">""</span> <span class="token operator">+</span> outputCharacters<span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">convertCurrency</span><span class="token punctuation">(</span><span class="token string">'123.23'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 壹佰贰拾叁元贰角叁分</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">convertCurrency</span><span class="token punctuation">(</span><span class="token number">999.99</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 玖佰玖拾玖元玖角玖分</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">convertCurrency</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 零元整</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-js&quot; data-language=&quot;js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://damao2250.com/categories/JavaScript/"/>
    
    
    <category term="工具" scheme="http://damao2250.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="人民币数字大写转换" scheme="http://damao2250.com/tags/%E4%BA%BA%E6%B0%91%E5%B8%81%E6%95%B0%E5%AD%97%E5%A4%A7%E5%86%99%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>JS运算符备忘</title>
    <link href="http://damao2250.com/2023/11/17/JS%E8%BF%90%E7%AE%97%E7%AC%A6%E5%A4%87%E5%BF%98/"/>
    <id>http://damao2250.com/2023/11/17/JS%E8%BF%90%E7%AE%97%E7%AC%A6%E5%A4%87%E5%BF%98/</id>
    <published>2023-11-17T07:05:30.000Z</published>
    <updated>2023-11-17T09:13:14.217Z</updated>
    
    <content type="html"><![CDATA[<h2 id="链判断运算符"><a href="#链判断运算符" class="headerlink" title="链判断运算符 ?."></a>链判断运算符 <code>?.</code></h2><ul><li><p>读取对象内部的某个属性时，判断上层对象是否存在</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 读取message data.result.state.message</span><span class="token comment">// 正常写法</span><span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token punctuation">(</span> data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>result <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>result<span class="token punctuation">.</span>state <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>result<span class="token punctuation">.</span>state<span class="token punctuation">.</span>message <span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token comment">// 链判断运算符写法</span><span class="token keyword">const</span> message <span class="token operator">=</span> data<span class="token operator">?.</span>result<span class="token operator">?.</span>state<span class="token operator">?.</span>message <span class="token operator">||</span> <span class="token string">""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>三元运算符<code>?:</code>也常用于判断对象是否存在</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// state.code</span><span class="token keyword">const</span> code <span class="token operator">=</span> state <span class="token operator">?</span> state<span class="token punctuation">.</span>code <span class="token operator">:</span> <span class="token string">""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><code>?.</code>运算符常见形式</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">a<span class="token operator">?.</span>b<span class="token comment">// 等同于</span>a <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> a<span class="token punctuation">.</span>ba<span class="token operator">?.</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token comment">// 等同于</span>a <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> a<span class="token punctuation">[</span>x<span class="token punctuation">]</span>a<span class="token operator">?.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 等同于</span>a <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> a<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span>a<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 等同于</span>a <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Null-判断运算符-、"><a href="#Null-判断运算符-、" class="headerlink" title="Null 判断运算符 ||、??"></a>Null 判断运算符 <code>||</code>、<code>??</code></h2><ul><li><p>如果某个属性的值是<code>null</code>或<code>undefined</code>，有时候需要为它们指定默认值</p></li><li><p>常见做法是通过<code>||</code>运算符指定默认值，但是属性的值如果为空字符串或<code>false</code>或<code>0</code>，默认值也会生效，如下</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> value <span class="token operator">=</span> data<span class="token punctuation">.</span>value <span class="token operator">||</span> <span class="token string">"123"</span><span class="token comment">// 当data.value等于null、undefine、false、0或空值的时候value的值都是'123'</span><span class="token comment">// 这样会导致无法判断false、0或者空值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>通过<code>??</code>运算符，只有值为<code>null</code>或<code>undefined</code>时，才会返回右侧的值</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> value <span class="token operator">=</span> data<span class="token punctuation">.</span>value <span class="token operator">??</span> <span class="token string">"123"</span><span class="token comment">// 当data.value等于null、undefine的时候value的值才是'123'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h2 id="逻辑赋值运算符-、-amp-amp-、"><a href="#逻辑赋值运算符-、-amp-amp-、" class="headerlink" title="逻辑赋值运算符 ||=、&amp;&amp;=、??="></a>逻辑赋值运算符 <code>||=</code>、<code>&amp;&amp;=</code>、<code>??=</code></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 或赋值运算符</span>x <span class="token operator">||=</span> y<span class="token comment">// 等同于</span>x <span class="token operator">||</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> y<span class="token punctuation">)</span><span class="token comment">// 与赋值运算符</span>x <span class="token operator">&amp;&amp;=</span> y<span class="token comment">// 等同于</span>x <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> y<span class="token punctuation">)</span><span class="token comment">// Null 赋值运算符</span>x <span class="token operator">??=</span> y<span class="token comment">// 等同于</span>x <span class="token operator">??</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>写法对比</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 老的写法</span>user<span class="token punctuation">.</span>id <span class="token operator">=</span> user<span class="token punctuation">.</span>id <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 新的写法</span>user<span class="token punctuation">.</span>id <span class="token operator">||=</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>示例</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ||=  值为 null、undefined、false、0或空时取默认值</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">||=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 1</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">||=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 9</span><span class="token comment">// &amp;&amp;= 与上面相反，值不为 null、undefined、false、0或空时取默认值</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">&amp;&amp;=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 0</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">&amp;&amp;=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 1</span><span class="token comment">// ??=  ,值为 null undefined 时取默认值</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">??=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 0</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">??=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 9</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">??=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><ul><li><code>&amp;&amp;</code>与、<code>!!</code>或、<code>!</code>非，<code>!!</code>非的取反</li></ul><h2 id="逻辑位运算符"><a href="#逻辑位运算符" class="headerlink" title="逻辑位运算符"></a>逻辑位运算符</h2><ul><li><code>&amp;</code>位与、<code>|</code>位或、<code>^</code>位异或、<code>~</code>位非</li></ul><h2 id="位移运算符"><a href="#位移运算符" class="headerlink" title="位移运算符"></a>位移运算符</h2><ul><li><code>&lt;&lt;</code>左移、<code>&gt;&gt;</code>右移、<code>&gt;&gt;&gt;</code>无符号右移</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;链判断运算符&quot;&gt;&lt;a href=&quot;#链判断运算符&quot; class=&quot;headerlink&quot; title=&quot;链判断运算符 ?.&quot;&gt;&lt;/a&gt;链判断运算符 &lt;code&gt;?.&lt;/code&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;读取对象内部的某个属性时，判断上层对象是否存在&lt;/p</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://damao2250.com/categories/JavaScript/"/>
    
    
    <category term="JS" scheme="http://damao2250.com/tags/JS/"/>
    
    <category term="运算符" scheme="http://damao2250.com/tags/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>不同分辨率屏幕的适配</title>
    <link href="http://damao2250.com/2023/11/04/%E4%B8%8D%E5%90%8C%E5%88%86%E8%BE%A8%E7%8E%87%E5%B1%8F%E5%B9%95%E7%9A%84%E9%80%82%E9%85%8D/"/>
    <id>http://damao2250.com/2023/11/04/%E4%B8%8D%E5%90%8C%E5%88%86%E8%BE%A8%E7%8E%87%E5%B1%8F%E5%B9%95%E7%9A%84%E9%80%82%E9%85%8D/</id>
    <published>2023-11-04T09:40:24.000Z</published>
    <updated>2023-11-04T10:00:29.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用两个转换库"><a href="#使用两个转换库" class="headerlink" title="使用两个转换库"></a>使用两个转换库</h2><ul><li>postcss-pxtorem<pre class="line-numbers language-none"><code class="language-none">postcss-pxtorem 插件，可以从像素单位生成 rem 单位<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>amfe-flexible<pre class="line-numbers language-none"><code class="language-none">amfe-flexible 是配置可伸缩布局方案，主要是将 1rem 设为 viewWidth&#x2F;10PC端设计稿为1920时：1920&#x2F;10 &#x3D; 192移动端设计稿为750时：750&#x2F;10 &#x3D; 75<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="在项目中配置"><a href="#在项目中配置" class="headerlink" title="在项目中配置"></a>在项目中配置</h2><ul><li><p>1、安装依赖</p><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">npm install postcss-pxtoremnpm install amfe-flexible<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>2、<code>vue.config.js</code>中配置</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> postCssPxToRem <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'postcss-pxtorem'</span><span class="token punctuation">)</span><span class="token comment">// import postCssPxToRem from 'postcss-pxtorem'</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  css<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    loaderOptions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      postcss<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        plugins<span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token function">postCssPxToRem</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            rootValue<span class="token operator">:</span> <span class="token number">192</span><span class="token punctuation">,</span> <span class="token comment">// 设计稿尺寸 1rem 的大小</span>            propList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'*'</span><span class="token punctuation">]</span> <span class="token comment">// 需要转换的属性列表，*表示全部转换</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或<code>vite.config.ts</code>中配置</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> postCssPxToRem <span class="token keyword">from</span> <span class="token string">'postcss-pxtorem'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  css<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    postcss<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      plugins<span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token function">postCssPxToRem</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          rootValue<span class="token operator">:</span> <span class="token string">'192'</span><span class="token punctuation">,</span>          propList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'*'</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>3、main.js 中引入</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token string">'amfe-flexible'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用两个转换库&quot;&gt;&lt;a href=&quot;#使用两个转换库&quot; class=&quot;headerlink&quot; title=&quot;使用两个转换库&quot;&gt;&lt;/a&gt;使用两个转换库&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;postcss-pxtorem&lt;pre class=&quot;line-numbers lang</summary>
      
    
    
    
    <category term="Vue" scheme="http://damao2250.com/categories/Vue/"/>
    
    
    <category term="分辨率适配" scheme="http://damao2250.com/tags/%E5%88%86%E8%BE%A8%E7%8E%87%E9%80%82%E9%85%8D/"/>
    
  </entry>
  
</feed>
