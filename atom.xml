<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Damao</title>
  
  <subtitle>乐躬耕于陇亩兮，吾爱吾庐。聊寄傲于琴书兮，以待天时。</subtitle>
  <link href="http://damao2250.com/atom.xml" rel="self"/>
  
  <link href="http://damao2250.com/"/>
  <updated>2024-08-14T08:45:59.814Z</updated>
  <id>http://damao2250.com/</id>
  
  <author>
    <name>Damao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>go-module相关</title>
    <link href="http://damao2250.com/2024/08/14/go-module%E7%9B%B8%E5%85%B3/"/>
    <id>http://damao2250.com/2024/08/14/go-module%E7%9B%B8%E5%85%B3/</id>
    <published>2024-08-14T08:26:33.000Z</published>
    <updated>2024-08-14T08:45:59.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="go-mod-命令"><a href="#go-mod-命令" class="headerlink" title="go mod 命令"></a>go mod 命令</h2><ul><li><code>go mod init</code> 模块名初始化<code>go mod</code>，生成<code>go.mod</code>文件，后可接参数指定<code>module</code>名。</li><li><code>go mod download</code> 手动触发下载依赖包到本地cache(默认为<code>$GOPATH/pkg/mod</code>目录)</li><li><code>go mod graph</code> 打印项目的模块依赖结构</li><li><code>go mod tidy</code> 添加缺少的包，且删除无用的包</li><li><code>go mod verify</code> 校验模块是否被篡改过</li><li><code>go mod why</code> 查看为什么需要依赖</li><li><code>go mod vendor</code> 导出项目所有依赖到<code>vendor</code>下</li><li><code>go mod edit -fmt</code> 参数格式化</li><li><code>go mod edit -require=golang.org/x/text</code> 添加依赖</li><li><code>go mod edit -droprequire=golang.org/x/text</code> 删除依赖</li><li><code>go list -m -json all</code> 以json的方式打印依赖详情</li><li><code>go list -m -u all</code> 来检查可以升级的<code>package</code></li><li><code>go get -u need-upgrade-package</code> 升级后会将新的依赖版本更新到<code>go.mod</code>中</li><li><code>go get -u</code> 升级所有依赖到最新的版本</li><li><code>go get package@verison</code> 更新到指定版本</li></ul><h2 id="给项目添加依赖写进-go-mod"><a href="#给项目添加依赖写进-go-mod" class="headerlink" title="给项目添加依赖写进 go.mod"></a>给项目添加依赖写进 go.mod</h2><ul><li>在项目中有import，然后go build就会go module自动下载并添加</li><li>自己手工使用go get下载安装后，会自动加入go.mod</li></ul><h2 id="go-mod-文件"><a href="#go-mod-文件" class="headerlink" title="go.mod 文件"></a>go.mod 文件</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">module github<span class="token punctuation">.</span>com<span class="token operator">/</span>Ackites<span class="token operator">/</span>KillWxapkggo <span class="token number">1.23</span><span class="token function">require</span> <span class="token punctuation">(</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>ditashi<span class="token operator">/</span>jsbeautifier<span class="token operator">-</span>go v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20141206144643</span><span class="token operator">-</span><span class="token number">2520</span>a8026a9cgithub<span class="token punctuation">.</span>com<span class="token operator">/</span>dop251<span class="token operator">/</span>goja v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20240806095544</span><span class="token operator">-</span><span class="token number">3491</span>d4a58fbegithub<span class="token punctuation">.</span>com<span class="token operator">/</span>fsnotify<span class="token operator">/</span>fsnotify v1<span class="token punctuation">.</span><span class="token number">7.0</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>tdewolff<span class="token operator">/</span>parse<span class="token operator">/</span>v2 v2<span class="token punctuation">.</span><span class="token number">7.15</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>yosssi<span class="token operator">/</span>gohtml v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20201013000340</span><span class="token operator">-</span>ee4748c638f4golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>crypto v0<span class="token punctuation">.</span><span class="token number">26.0</span>golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>net v0<span class="token punctuation">.</span><span class="token number">28.0</span>golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>text v0<span class="token punctuation">.</span><span class="token number">17.0</span><span class="token punctuation">)</span><span class="token function">require</span> <span class="token punctuation">(</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>dlclark<span class="token operator">/</span>regexp2 v1<span class="token punctuation">.</span><span class="token number">11.4</span> <span class="token comment">// indirect</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>go<span class="token operator">-</span>sourcemap<span class="token operator">/</span>sourcemap v2<span class="token punctuation">.</span><span class="token number">1.3</span><span class="token operator">+</span>incompatible <span class="token comment">// indirect</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>google<span class="token operator">/</span>pprof v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20230207041349</span><span class="token operator">-</span><span class="token number">798e818</span>bf904 <span class="token comment">// indirect</span>golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>sys v0<span class="token punctuation">.</span><span class="token number">23.0</span> <span class="token comment">// indirect</span><span class="token punctuation">)</span><span class="token function">exclude</span><span class="token punctuation">(</span>  golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>text v0<span class="token punctuation">.</span><span class="token number">17.0</span><span class="token punctuation">)</span><span class="token function">replace</span><span class="token punctuation">(</span>  golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>text v0<span class="token punctuation">.</span><span class="token number">17.0</span> <span class="token operator">=></span> golang<span class="token punctuation">.</span>org<span class="token operator">/</span>x<span class="token operator">/</span>text v0<span class="token punctuation">.</span><span class="token number">18.0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>第一项：当前项目的模块路径</li><li>第二项：项目使用的go版本</li><li>第三项：require项目所需的直接依赖包及其版本</li><li>exclude：用于从使用中排除一个特定的模块版本</li><li>replace：用于将一个包的版本替换为另一个包版本</li><li>其中require后的indirect说明这个依赖是非直接依赖</li></ul><h2 id="go-sum文件"><a href="#go-sum文件" class="headerlink" title="go.sum文件"></a>go.sum文件</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">github<span class="token punctuation">.</span>com<span class="token operator">/</span>ditashi<span class="token operator">/</span>jsbeautifier<span class="token operator">-</span>go v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20141206144643</span><span class="token operator">-</span><span class="token number">2520</span>a8026a9c h1<span class="token operator">:</span><span class="token operator">+</span>Zo5Ca9GH0RoeVZQKzFJcTLoAixx5s5Gq3pTIS<span class="token operator">+</span>n354<span class="token operator">=</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>ditashi<span class="token operator">/</span>jsbeautifier<span class="token operator">-</span>go v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20141206144643</span><span class="token operator">-</span><span class="token number">2520</span>a8026a9c<span class="token operator">/</span>go<span class="token punctuation">.</span>mod h1<span class="token operator">:</span>HJGU9ULdREjOcVGZVPB5s6zYmHi1RxzT71l2wQyLmnE<span class="token operator">=</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>dlclark<span class="token operator">/</span>regexp2 v1<span class="token punctuation">.</span><span class="token number">11.4</span> h1<span class="token operator">:</span>rPYF9<span class="token operator">/</span>LECdNymJufQKmri9gV604RvvABwgOA8un7yAo<span class="token operator">=</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>dlclark<span class="token operator">/</span>regexp2 v1<span class="token punctuation">.</span><span class="token number">11.4</span><span class="token operator">/</span>go<span class="token punctuation">.</span>mod h1<span class="token operator">:</span>DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8<span class="token operator">=</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>dop251<span class="token operator">/</span>goja v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20240806095544</span><span class="token operator">-</span><span class="token number">3491</span>d4a58fbe h1<span class="token operator">:</span>jwFJkgsdelB87ohlXaAGSd05Cb5ALDFa9iW9IGRHcRM<span class="token operator">=</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>dop251<span class="token operator">/</span>goja v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">20240806095544</span><span class="token operator">-</span><span class="token number">3491</span>d4a58fbe<span class="token operator">/</span>go<span class="token punctuation">.</span>mod h1<span class="token operator">:</span><span class="token constant">DF</span><span class="token operator">+</span>w<span class="token operator">/</span>nLMIkvRpyhd<span class="token operator">/</span><span class="token number">0</span>K<span class="token operator">+</span>Okbh3fVZBtXLwRtS<span class="token operator">/</span>ccAa5w<span class="token operator">=</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>fsnotify<span class="token operator">/</span>fsnotify v1<span class="token punctuation">.</span><span class="token number">7.0</span> h1<span class="token operator">:</span><span class="token number">8</span>JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA<span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>每一行都是由模块路径，模块版本，哈希值组成</li><li>其中哈希值是用来保证当前缓存的模块不会被篡改</li><li>hash是以h1：开头的字符串，表示生成checksum的算法是第一版的hash算法</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;go-mod-命令&quot;&gt;&lt;a href=&quot;#go-mod-命令&quot; class=&quot;headerlink&quot; title=&quot;go mod 命令&quot;&gt;&lt;/a&gt;go mod 命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;go mod init&lt;/code&gt; 模块名初始化&lt;code</summary>
      
    
    
    
    <category term="GO" scheme="http://damao2250.com/categories/GO/"/>
    
    
    <category term="module" scheme="http://damao2250.com/tags/module/"/>
    
  </entry>
  
  <entry>
    <title>TS泛型定义实例</title>
    <link href="http://damao2250.com/2024/06/26/TS%E6%B3%9B%E5%9E%8B%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8B/"/>
    <id>http://damao2250.com/2024/06/26/TS%E6%B3%9B%E5%9E%8B%E5%AE%9A%E4%B9%89%E5%AE%9E%E4%BE%8B/</id>
    <published>2024-06-26T08:58:59.000Z</published>
    <updated>2024-06-26T09:57:38.996Z</updated>
    
    <content type="html"><![CDATA[<h2 id="定义泛型函数"><a href="#定义泛型函数" class="headerlink" title="定义泛型函数"></a>定义泛型函数</h2><ul><li>为了确保传入的类型与返回的类型相同，使用<code>类型变量T</code>表示传入参数和返回值的类型<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> identity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> arg<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>泛型函数两种调用方式：<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 指定传入参数类型</span><span class="token comment">// 事实没必要使用尖括号（&lt;>）来明确地传入类型</span><span class="token keyword">let</span> output <span class="token operator">=</span> identity<span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">"myString"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 较常用，使用 类型推论，推断传入类型和返回类型</span><span class="token comment">// 编译器可以查看myString的值，然后把T设置为它的类型</span><span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token function">identity</span><span class="token punctuation">(</span><span class="token string">"myString"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="使用泛型变量"><a href="#使用泛型变量" class="headerlink" title="使用泛型变量"></a>使用泛型变量</h2><ul><li>明确表示传入的参数为T类型的数组，确保参数有<code>.length</code>这个属性<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> loggingIdentity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 也可以这样表示</span><span class="token keyword">function</span> loggingIdentity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Array<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="泛型类型"><a href="#泛型类型" class="headerlink" title="泛型类型"></a>泛型类型</h2><ul><li><p>泛型函数的类型，只需要将类型参数写在最前面，跟函数声明一样</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> identity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> myIdentity<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token parameter">arg<span class="token operator">:</span> <span class="token constant">T</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">T</span> <span class="token operator">=</span> identity<span class="token punctuation">;</span><span class="token comment">// 也可以使用不同的泛型参数名，只要在数量上和使用方式上能对应上就可以</span><span class="token keyword">let</span> myIdentity2<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token parameter">arg<span class="token operator">:</span> <span class="token constant">U</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">U</span> <span class="token operator">=</span> identity<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>可以使用带有调用签名的对象字面量来定义泛型函数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> identity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> myIdentity<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> identity<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>上面例子里的对象字面量可以拿出来做为一个接口</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">interface</span> <span class="token class-name">GenericIdentityFn</span> <span class="token punctuation">&#123;</span>  <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> identity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> myIdentity<span class="token operator">:</span> GenericIdentityFn <span class="token operator">=</span> identity<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>把泛型参数当作整个接口的一个参数，指定<code>GenericIdentityFn</code>的类型，这样接口里的其它成员也能知道这个参数的类型</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">interface</span> <span class="token class-name">GenericIdentityFn</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> identity<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> myIdentity<span class="token operator">:</span> GenericIdentityFn<span class="token operator">&lt;</span>number<span class="token operator">></span> <span class="token operator">=</span> identity<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="泛型类"><a href="#泛型类" class="headerlink" title="泛型类"></a>泛型类</h2><ul><li><p>泛型类看上去与泛型接口差不多。 泛型类使用（ <code>&lt;&gt;</code>）括起泛型类型，跟在类名后面</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">GenericNumber</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    zeroValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>    <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token constant">T</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token constant">T</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> myGenericNumber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GenericNumber</span><span class="token operator">&lt;</span>number<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>myGenericNumber<span class="token punctuation">.</span>zeroValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>myGenericNumber<span class="token punctuation">.</span><span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>GenericNumber</code>类的使用是十分直观的，并且你可能已经注意到了，没有什么去限制它只能使用number类型。 也可以使用字符串或其它更复杂的类型</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> stringNumeric <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GenericNumber</span><span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stringNumeric<span class="token punctuation">.</span>zeroValue <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>stringNumeric<span class="token punctuation">.</span><span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringNumeric<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stringNumeric<span class="token punctuation">.</span>zeroValue<span class="token punctuation">,</span> <span class="token string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="泛型约束"><a href="#泛型约束" class="headerlink" title="泛型约束"></a>泛型约束</h2><ul><li>定义一个接口来描述约束条件。 创建一个包含<code>.length</code>属性的接口，使用这个接口和extends关键字来实现约束<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">interface</span> <span class="token class-name">Lengthwise</span> <span class="token punctuation">&#123;</span>    length<span class="token operator">:</span> number<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> loggingIdentity<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">Lengthwise</span><span class="token operator">></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> arg<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">loggingIdentity</span><span class="token punctuation">(</span><span class="token string">"good"</span><span class="token punctuation">)</span> <span class="token comment">// √</span><span class="token function">loggingIdentity</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span> <span class="token comment">// ×</span><span class="token function">loggingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>length<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment">// √</span><span class="token function">loggingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment">// ×</span><span class="token function">loggingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// √</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="在泛型约束中使用类型参数"><a href="#在泛型约束中使用类型参数" class="headerlink" title="在泛型约束中使用类型参数"></a>在泛型约束中使用类型参数</h2><ul><li>声明一个类型参数，且它被另一个类型参数所约束。 比如，现在我们想要用属性名从对象里获取这个属性。 并且我们想要确保这个属性存在于对象 obj上，因此我们需要在这两个类型之间使用约束<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token punctuation">&#123;</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> d<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">getProperty</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">getProperty</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token string">"m"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error: Argument of type 'm' isn't assignable to 'a' | 'b' | 'c' | 'd'.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;定义泛型函数&quot;&gt;&lt;a href=&quot;#定义泛型函数&quot; class=&quot;headerlink&quot; title=&quot;定义泛型函数&quot;&gt;&lt;/a&gt;定义泛型函数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;为了确保传入的类型与返回的类型相同，使用&lt;code&gt;类型变量T&lt;/code&gt;表示传入参数和返回值</summary>
      
    
    
    
    <category term="TypeScript" scheme="http://damao2250.com/categories/TypeScript/"/>
    
    
    <category term="TS" scheme="http://damao2250.com/tags/TS/"/>
    
    <category term="TypeScript" scheme="http://damao2250.com/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>浏览器渲染页面过程</title>
    <link href="http://damao2250.com/2024/06/25/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E9%A1%B5%E9%9D%A2%E8%BF%87%E7%A8%8B/"/>
    <id>http://damao2250.com/2024/06/25/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E9%A1%B5%E9%9D%A2%E8%BF%87%E7%A8%8B/</id>
    <published>2024-06-25T09:09:23.000Z</published>
    <updated>2024-06-25T09:16:45.560Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浏览器是如何渲染页面的？"><a href="#浏览器是如何渲染页面的？" class="headerlink" title="浏览器是如何渲染页面的？"></a>浏览器是如何渲染页面的？</h2><p>当浏览器的网络线程收到 HTML 文档后，会产生一个渲染任务，并将其传递给渲染主线程的消息队列。<br>在事件循环机制的作用下，渲染主线程取出消息队列中的渲染任务，开启渲染流程。</p><p>整个渲染流程分为多个阶段，分别是： HTML 解析、样式计算、布局、分层、绘制、分块、光栅化、画<br>每个阶段都有明确的输入输出，上一个阶段的输出会成为下一个阶段的输入。<br>这样，整个渲染流程就形成了一套组织严密的生产流水线。</p><h3 id="渲染的第一步是解析-HTML。"><a href="#渲染的第一步是解析-HTML。" class="headerlink" title="渲染的第一步是解析 HTML。"></a>渲染的第一步是解析 HTML。</h3><p>解析过程中遇到 CSS 解析 CSS，遇到 JS 执行 JS。为了提高解析效率，浏览器在开始解析前，会启动一个预解析的线程，率先下载 HTML 中的外部 CSS 文件和 外部的 JS 文件。<br>如果主线程解析到link位置，此时外部的 CSS 文件还没有下载解析好，主线程不会等待，继续解析后续的 HTML。这是因为下载和解析 CSS 的工作是在预解析线程中进行的。这就是 CSS 不会阻塞 HTML 解析的根本原因。<br>如果主线程解析到script位置，会停止解析 HTML，转而等待 JS 文件下载好，并将全局代码解析执行完成后，才能继续解析 HTML。这是因为 JS 代码的执行过程可能会修改当前的 DOM 树，所以 DOM 树的生成必须暂停。这就是 JS 会阻塞 HTML 解析的根本原因。<br>第一步完成后，会得到 DOM 树和 CSSOM 树，浏览器的默认样式、内部样式、外部样式、行内样式均会包含在 CSSOM 树中。</p><h3 id="渲染的下一步是样式计算。"><a href="#渲染的下一步是样式计算。" class="headerlink" title="渲染的下一步是样式计算。"></a>渲染的下一步是样式计算。</h3><p>主线程会遍历得到的 DOM 树，依次为树中的每个节点计算出它最终的样式，称之为 Computed Style。<br>在这一过程中，很多预设值会变成绝对值，比如red会变成rgb(255,0,0)；相对单位会变成绝对单位，比如em会变成px<br>这一步完成后，会得到一棵带有样式的 DOM 树。</p><h3 id="接下来是布局，布局完成后会得到布局树。"><a href="#接下来是布局，布局完成后会得到布局树。" class="headerlink" title="接下来是布局，布局完成后会得到布局树。"></a>接下来是布局，布局完成后会得到布局树。</h3><p>布局阶段会依次遍历 DOM 树的每一个节点，计算每个节点的几何信息。例如节点的宽高、相对包含块的位置。<br>大部分时候，DOM 树和布局树并非一一对应。<br>比如display:none的节点没有几何信息，因此不会生成到布局树；又比如使用了伪元素选择器，虽然 DOM 树中不存在这些伪元素节点，但它们拥有几何信息，所以会生成到布局树中。还有匿名行盒、匿名块盒等等都会导致 DOM 树和布局树无法一一对应。</p><h3 id="下一步是分层"><a href="#下一步是分层" class="headerlink" title="下一步是分层"></a>下一步是分层</h3><p>主线程会使用一套复杂的策略对整个布局树中进行分层。<br>分层的好处在于，将来某一个层改变后，仅会对该层进行后续处理，从而提升效率。<br>滚动条、堆叠上下文、transform、opacity 等样式都会或多或少的影响分层结果，也可以通过will-change属性更大程度的影响分层结果。</p><h3 id="再下一步是绘制"><a href="#再下一步是绘制" class="headerlink" title="再下一步是绘制"></a>再下一步是绘制</h3><p>主线程会为每个层单独产生绘制指令集，用于描述这一层的内容该如何画出来。<br>完成绘制后，主线程将每个图层的绘制信息提交给合成线程，剩余工作将由合成线程完成。<br>合成线程首先对每个图层进行分块，将其划分为更多的小区域。<br>它会从线程池中拿取多个线程来完成分块工作。<br>分块完成后，进入光栅化阶段。<br>合成线程会将块信息交给 GPU 进程，以极高的速度完成光栅化。<br>GPU 进程会开启多个线程来完成光栅化，并且优先处理靠近视口区域的块。<br>光栅化的结果，就是一块一块的位图</p><h3 id="最后一个阶段就是画了"><a href="#最后一个阶段就是画了" class="headerlink" title="最后一个阶段就是画了"></a>最后一个阶段就是画了</h3><p>合成线程拿到每个层、每个块的位图后，生成一个个「指引（quad）」信息。<br>指引会标识出每个位图应该画到屏幕的哪个位置，以及会考虑到旋转、缩放等变形。<br>变形发生在合成线程，与渲染主线程无关，这就是transform效率高的本质原因。<br>合成线程会把 quad 提交给 GPU 进程，由 GPU 进程产生系统调用，提交给 GPU 硬件，完成最终的屏幕成像。</p><p><a href="https://www.cnblogs.com/xw-01/p/18259655">摘自&lt;二价亚铁&gt;-你不知道的CSS之包含块-附加</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;浏览器是如何渲染页面的？&quot;&gt;&lt;a href=&quot;#浏览器是如何渲染页面的？&quot; class=&quot;headerlink&quot; title=&quot;浏览器是如何渲染页面的？&quot;&gt;&lt;/a&gt;浏览器是如何渲染页面的？&lt;/h2&gt;&lt;p&gt;当浏览器的网络线程收到 HTML 文档后，会产生一个渲染任务</summary>
      
    
    
    
    <category term="HTML" scheme="http://damao2250.com/categories/HTML/"/>
    
    
    <category term="浏览器渲染" scheme="http://damao2250.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93/"/>
    
  </entry>
  
  <entry>
    <title>Linux防火墙</title>
    <link href="http://damao2250.com/2024/05/29/Linux%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    <id>http://damao2250.com/2024/05/29/Linux%E9%98%B2%E7%81%AB%E5%A2%99/</id>
    <published>2024-05-29T07:29:07.000Z</published>
    <updated>2024-05-29T09:52:44.392Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看firewall服务状态"><a href="#查看firewall服务状态" class="headerlink" title="查看firewall服务状态"></a>查看firewall服务状态</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ systemctl status firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>出现 Active: active (running) 表示防火墙启动状态</li><li>出现 Active: inactive (dead)  表示防火墙关闭状态</li><li>出现 Unit firewalld.service could not be found. 表示没有找到防火墙，需要先安装<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Ubuntu</span><span class="token function">apt</span> <span class="token function">install</span> firewalld<span class="token comment"># CentOS</span>yum <span class="token function">install</span> firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="查看firewall的状态"><a href="#查看firewall的状态" class="headerlink" title="查看firewall的状态"></a>查看firewall的状态</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">firewall-cmd --state<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="开启、重启、关闭、firewalld-service服务"><a href="#开启、重启、关闭、firewalld-service服务" class="headerlink" title="开启、重启、关闭、firewalld.service服务"></a>开启、重启、关闭、firewalld.service服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 开启</span>$ <span class="token function">service</span> firewalld start<span class="token comment"># 重启</span>$ <span class="token function">service</span> firewalld restart<span class="token comment"># 关闭</span>$ <span class="token function">service</span> firewalld stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="查询端口是否开放"><a href="#查询端口是否开放" class="headerlink" title="查询端口是否开放"></a>查询端口是否开放</h2><ul><li>yes 表示开放 no表示不开放<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ firewall-cmd --query-port<span class="token operator">=</span><span class="token number">8080</span>/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="开放80端口"><a href="#开放80端口" class="headerlink" title="开放80端口"></a>开放80端口</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ firewall-cmd --permanent --add-port<span class="token operator">=</span><span class="token number">80</span>/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="移除端口"><a href="#移除端口" class="headerlink" title="移除端口"></a>移除端口</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ firewall-cmd --permanent --remove-port<span class="token operator">=</span><span class="token number">8080</span>/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="查看已开放的端口"><a href="#查看已开放的端口" class="headerlink" title="查看已开放的端口"></a>查看已开放的端口</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">netstat</span> -anp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a>设置开机自启</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="设置关闭开机自启动"><a href="#设置关闭开机自启动" class="headerlink" title="设置关闭开机自启动"></a>设置关闭开机自启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl disable firewalld.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="重启防火墙-修改配置后要重启防火墙"><a href="#重启防火墙-修改配置后要重启防火墙" class="headerlink" title="重启防火墙(修改配置后要重启防火墙)"></a>重启防火墙(修改配置后要重启防火墙)</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>firwall-cmd：是Linux提供的操作firewall的一个工具；</li><li>–permanent：表示设置为持久；</li><li>–add-port：标识添加的端口；</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;查看firewall服务状态&quot;&gt;&lt;a href=&quot;#查看firewall服务状态&quot; class=&quot;headerlink&quot; title=&quot;查看firewall服务状态&quot;&gt;&lt;/a&gt;查看firewall服务状态&lt;/h2&gt;&lt;pre class=&quot;line-numbers </summary>
      
    
    
    
    <category term="Linux" scheme="http://damao2250.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://damao2250.com/tags/Linux/"/>
    
    <category term="防火墙" scheme="http://damao2250.com/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>Windows常用命令</title>
    <link href="http://damao2250.com/2024/05/22/Windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://damao2250.com/2024/05/22/Windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2024-05-22T01:48:09.000Z</published>
    <updated>2024-05-22T01:59:57.012Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看路由表"><a href="#查看路由表" class="headerlink" title="查看路由表"></a>查看路由表</h2><ul><li>Windows下查看命令<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">route PRINT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>接口列表  <span class="token number">8</span><span class="token punctuation">..</span>.9e b6 d0 f6 5d 5f <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Microsoft Wi-Fi Direct Virtual Adapter  <span class="token number">6</span><span class="token punctuation">..</span>.ae b6 d0 f6 5d 5f <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Microsoft Wi-Fi Direct Virtual Adapter <span class="token comment">#2</span> <span class="token number">13</span><span class="token punctuation">..</span>.d8 9e f3 f2 08 2c <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>ASIX USB to Gigabit Ethernet Family Adapter <span class="token comment">#2</span> <span class="token number">23</span><span class="token punctuation">..</span>.9c b6 d0 f6 5d 5f <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Killer Wireless-n/a/ac <span class="token number">1535</span> Wireless Network Adapter <span class="token number">19</span><span class="token punctuation">..</span>.00 ff bf <span class="token number">92</span> 2a 5a <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Sangfor SSL VPN CS Support System VNIC  <span class="token number">1</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.Software Loopback Interface <span class="token number">1</span> <span class="token number">21</span><span class="token punctuation">..</span>.00 <span class="token number">15</span> 5d e8 e1 ee <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Hyper-V Virtual Ethernet Adapter <span class="token number">33</span><span class="token punctuation">..</span>.00 <span class="token number">15</span> 5d <span class="token number">43</span> a6 09 <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Hyper-V Virtual Ethernet Adapter <span class="token comment">#2</span> <span class="token number">40</span><span class="token punctuation">..</span>.00 <span class="token number">15</span> 5d <span class="token number">75</span> <span class="token number">16</span> ff <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Hyper-V Virtual Ethernet Adapter <span class="token comment">#3</span> <span class="token number">45</span><span class="token punctuation">..</span>.00 <span class="token number">15</span> 5d f5 0d <span class="token number">55</span> <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Hyper-V Virtual Ethernet Adapter <span class="token comment">#4</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>IPv4 路由表<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>活动路由:          网络目标        网络掩码                  网关              接口   跃点数          <span class="token number">0.0</span>.0.0          <span class="token number">0.0</span>.0.0          <span class="token number">172.18</span>.2.1     <span class="token number">172.18</span>.3.140     <span class="token number">35</span>        <span class="token number">127.0</span>.0.0        <span class="token number">255.0</span>.0.0            在链路上         <span class="token number">127.0</span>.0.1    <span class="token number">331</span>  <span class="token number">255.255</span>.255.255  <span class="token number">255.255</span>.255.255            在链路上      <span class="token number">172.30</span>.224.1   <span class="token number">5256</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>永久路由:          网络地址          网络掩码         网关地址   跃点数        <span class="token number">137.0</span>.0.0      <span class="token number">255.255</span>.0.0      <span class="token number">138.0</span>.0.250       <span class="token number">1</span>        <span class="token number">138.0</span>.0.0      <span class="token number">255.255</span>.0.0     <span class="token number">137.0</span>.23.176       <span class="token number">1</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>IPv6 路由表<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>活动路由: 接口跃点数网络目标                网关  <span class="token number">1</span>    <span class="token number">331</span> ::1/128                  在链路上 <span class="token number">13</span>    <span class="token number">291</span> fe80::/64                在链路上 <span class="token number">23</span>    <span class="token number">291</span> fe80::/64                在链路上<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>永久路由:  无<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>Linux系统中查看路由表：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ip</span> route show<span class="token comment"># or</span><span class="token function">netstat</span> -rn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;查看路由表&quot;&gt;&lt;a href=&quot;#查看路由表&quot; class=&quot;headerlink&quot; title=&quot;查看路由表&quot;&gt;&lt;/a&gt;查看路由表&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Windows下查看命令&lt;pre class=&quot;line-numbers language-bash&quot; </summary>
      
    
    
    
    <category term="Windows" scheme="http://damao2250.com/categories/Windows/"/>
    
    
    <category term="Windows" scheme="http://damao2250.com/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>GO取指针和取值</title>
    <link href="http://damao2250.com/2024/05/10/GO%E5%8F%96%E6%8C%87%E9%92%88%E5%92%8C%E5%8F%96%E5%80%BC/"/>
    <id>http://damao2250.com/2024/05/10/GO%E5%8F%96%E6%8C%87%E9%92%88%E5%92%8C%E5%8F%96%E5%80%BC/</id>
    <published>2024-05-10T08:25:24.000Z</published>
    <updated>2024-05-11T01:44:46.484Z</updated>
    
    <content type="html"><![CDATA[<ul><li>GO取值和取指针的操作<ul><li><code>*</code>是取值，即获取指针指向的值；<code>&amp;</code>取指针，即获取变量的地址<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span>func <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 取值 start</span><span class="token keyword">var</span> a int <span class="token operator">=</span> <span class="token number">666</span><span class="token keyword">var</span> b int <span class="token operator">=</span> a  <span class="token comment">// a是值传递，b取到的是a的值</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// 输出：666</span><span class="token comment">// 取值 end</span><span class="token comment">// a的类型 start</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"a的类型为：: %T\n"</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span> <span class="token comment">// a的类型为：: int</span><span class="token comment">// a的类型 end</span><span class="token comment">// 取指针 start</span><span class="token keyword">var</span> c <span class="token operator">*</span>int <span class="token operator">=</span> <span class="token operator">&amp;</span>a <span class="token comment">// c取到的是a的地址，c是一个指针，指向a的地址</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>  <span class="token comment">// 输出：0xc00000a0b8</span><span class="token comment">// 取指针 end</span><span class="token comment">// 指针类型 start</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"c的指针类型为：: %T\n"</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token comment">// c的指针类型为：: *int</span><span class="token comment">// 指针类型 end</span><span class="token comment">// 通过指针取值 start</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">*</span>c<span class="token punctuation">)</span> <span class="token comment">// 输出：666</span><span class="token comment">// 通过指针取值 end</span><span class="token comment">// 修改指针指向的值 start</span><span class="token operator">*</span>c <span class="token operator">=</span> <span class="token number">789</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">*</span>c<span class="token punctuation">)</span> <span class="token comment">// 输出：789</span><span class="token comment">// 修改指针指向的值 end</span><span class="token comment">// 指针作为参数传递并参与运算</span><span class="token function">sum1</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>func <span class="token function">sum1</span><span class="token punctuation">(</span><span class="token parameter">params <span class="token operator">*</span>int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">*</span>params<span class="token punctuation">)</span> <span class="token comment">// 输出：789</span><span class="token operator">*</span>params <span class="token operator">=</span> <span class="token operator">*</span>params <span class="token operator">+</span> <span class="token number">1</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">*</span>params<span class="token punctuation">)</span> <span class="token comment">// 输出：790</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;GO取值和取指针的操作&lt;ul&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt;是取值，即获取指针指向的值；&lt;code&gt;&amp;amp;&lt;/code&gt;取指针，即获取变量的地址&lt;pre class=&quot;line-numbers language-js&quot; data-language=&quot;</summary>
      
    
    
    
    <category term="GO" scheme="http://damao2250.com/categories/GO/"/>
    
    
    <category term="指针" scheme="http://damao2250.com/tags/%E6%8C%87%E9%92%88/"/>
    
    <category term="指针类型" scheme="http://damao2250.com/tags/%E6%8C%87%E9%92%88%E7%B1%BB%E5%9E%8B/"/>
    
    <category term="指针取值" scheme="http://damao2250.com/tags/%E6%8C%87%E9%92%88%E5%8F%96%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>JS中的groupBy</title>
    <link href="http://damao2250.com/2024/04/26/JS%E4%B8%AD%E7%9A%84groupBy/"/>
    <id>http://damao2250.com/2024/04/26/JS%E4%B8%AD%E7%9A%84groupBy/</id>
    <published>2024-04-26T03:41:01.000Z</published>
    <updated>2024-04-26T05:52:41.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="手动实现"><a href="#手动实现" class="headerlink" title="手动实现"></a>手动实现</h2><ul><li>使用 <code>reduce</code> 方法实现 <code>groupBy</code> 函数来实现将数组中的元素根据某个属性或条件分组</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">groupBy</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result<span class="token punctuation">,</span> element</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 使用 key 函数获取分组的键</span>    <span class="token keyword">const</span> groupKey <span class="token operator">=</span> <span class="token function">key</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 如果结果对象中没有这个键，就创建一个空数组</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">[</span>groupKey<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      result<span class="token punctuation">[</span>groupKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 将元素添加到对应的数组中</span>    result<span class="token punctuation">[</span>groupKey<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> people <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jane'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Joan'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 使用 groupBy 方法</span><span class="token keyword">const</span> peopleByAge <span class="token operator">=</span> <span class="token function">groupBy</span><span class="token punctuation">(</span>people<span class="token punctuation">,</span> <span class="token parameter">person</span> <span class="token operator">=></span> person<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>peopleByAge<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// `groupBy` 函数接收两个参数：一个数组和一个函数，这个函数用于从数组的每个元素中提取分组的键。</span><span class="token comment">// `reduce` 方法遍历数组，为每个不同的键创建一个新数组，并将具有相同键的元素添加到对应的数组中。</span><span class="token comment">// 输出</span><span class="token punctuation">&#123;</span>  <span class="token string">'20'</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jane'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token string">'30'</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Joan'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="原生支持-Object-groupBy"><a href="#原生支持-Object-groupBy" class="headerlink" title="原生支持 Object.groupBy"></a>原生支持 Object.groupBy</h2><ul><li><code>ECMAScript 2024（ES15）</code>提案已加入 <code>Object.groupBy</code> 方法</li><li>注意目前需要谷歌浏览器<code>117</code>以上的版本才能运行</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> people <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jane'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Joan'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 调用</span><span class="token keyword">const</span> peopleByAge <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span>people<span class="token punctuation">,</span> <span class="token parameter">person</span> <span class="token operator">=></span> person<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>peopleByAge<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 输出</span><span class="token punctuation">&#123;</span>  <span class="token string">'20'</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jane'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token string">'30'</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">'Joan'</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;手动实现&quot;&gt;&lt;a href=&quot;#手动实现&quot; class=&quot;headerlink&quot; title=&quot;手动实现&quot;&gt;&lt;/a&gt;手动实现&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;reduce&lt;/code&gt; 方法实现 &lt;code&gt;groupBy&lt;/code&gt; 函数来实现将数</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://damao2250.com/categories/JavaScript/"/>
    
    
    <category term="groupBy" scheme="http://damao2250.com/tags/groupBy/"/>
    
  </entry>
  
  <entry>
    <title>Vue中的键盘事件</title>
    <link href="http://damao2250.com/2024/03/01/Vue%E4%B8%AD%E7%9A%84%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/"/>
    <id>http://damao2250.com/2024/03/01/Vue%E4%B8%AD%E7%9A%84%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/</id>
    <published>2024-03-01T07:50:11.000Z</published>
    <updated>2024-03-01T07:54:27.161Z</updated>
    
    <content type="html"><![CDATA[<h2 id="字母键"><a href="#字母键" class="headerlink" title="字母键"></a>字母键</h2><ul><li>只有按下q键时才会执行send方法<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>input v<span class="token operator">-</span>on<span class="token operator">:</span>keyup<span class="token punctuation">.</span><span class="token constant">Q</span><span class="token operator">=</span><span class="token string">"send"</span> type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="大写锁定键"><a href="#大写锁定键" class="headerlink" title="大写锁定键"></a>大写锁定键</h2><ul><li>只有按下capslock键时才会执行send方法<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>input v<span class="token operator">-</span>on<span class="token operator">:</span>keyup<span class="token punctuation">.</span>caps<span class="token operator">-</span>lock<span class="token operator">=</span><span class="token string">"send"</span> type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="回车键"><a href="#回车键" class="headerlink" title="回车键"></a>回车键</h2><ul><li>只有按下回车键时才会执行 send 方法<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>input v<span class="token operator">-</span>on<span class="token operator">:</span>keyup<span class="token punctuation">.</span>enter<span class="token operator">=</span><span class="token string">"send"</span> type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="Alt-字母组合键"><a href="#Alt-字母组合键" class="headerlink" title="Alt+字母组合键"></a>Alt+字母组合键</h2><ul><li>keyup事件时需要同时按下组合键才会执行send方法<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>input v<span class="token operator">-</span>on<span class="token operator">:</span>keyup<span class="token punctuation">.</span>Alt<span class="token punctuation">.</span>y<span class="token operator">=</span><span class="token string">"send"</span> type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="自定义按键"><a href="#自定义按键" class="headerlink" title="自定义按键"></a>自定义按键</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 13是回车键的键码，将他的别名定义为send</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>keyCodes<span class="token punctuation">.</span>send<span class="token operator">=</span><span class="token number">13</span><span class="token comment">// 只有按下回车键时才会执行send方法</span><span class="token operator">&lt;</span>input v<span class="token operator">-</span>on<span class="token operator">:</span>keydown<span class="token punctuation">.</span>send<span class="token operator">=</span><span class="token string">"send"</span> type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;字母键&quot;&gt;&lt;a href=&quot;#字母键&quot; class=&quot;headerlink&quot; title=&quot;字母键&quot;&gt;&lt;/a&gt;字母键&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;只有按下q键时才会执行send方法&lt;pre class=&quot;line-numbers language-js&quot; data-</summary>
      
    
    
    
    <category term="Vue" scheme="http://damao2250.com/categories/Vue/"/>
    
    
    <category term="键盘事件" scheme="http://damao2250.com/tags/%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>我的2023</title>
    <link href="http://damao2250.com/2023/12/28/%E6%88%91%E7%9A%842023/"/>
    <id>http://damao2250.com/2023/12/28/%E6%88%91%E7%9A%842023/</id>
    <published>2023-12-28T01:09:26.000Z</published>
    <updated>2024-01-02T11:12:54.983Z</updated>
    
    <content type="html"><![CDATA[<p>时间飞逝，转眼又是年末，是时候掏出我去年的年终总结啦 (╯°□°）╯︵ ┻━┻</p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/a14238c613d054a0c412ddd2339e666.jpg"></p><p>哈哈，玩笑归玩笑，但今年确实重感冒了几次，不确定是不是阳了，但是能确定的是戴口罩几年体抗力是有所下降了。</p><p>过去的一年其实有不少事情值得记录以待他日回味的，但当我准备动笔记录那些忙碌的故事时，却总感到思绪断片不知从何入手，恨不得每个时刻都能流水线般全都记下，但每个精彩的瞬间又都是一段段孤立的片段，在努力回忆这一年做过的事情，希望可以拼凑出一个完整的2023。</p><h2 id="膝盖疼"><a href="#膝盖疼" class="headerlink" title="膝盖疼"></a>膝盖疼</h2><p>先说一个持续时间最长的也是困扰我最久事情吧，那就是蹲下几分钟后右脚的膝盖会超级痛，站起来无法立马伸直走动，但是左脚啥问题都没有。从22年11月中旬左右，一直到23年10月份才有好转，起初发现这个现象的时候没多在意，以为是蹲久了膝盖会有点痛而已，好家伙这一痛之后，接下来的好几个月都有这种症状。</p><p>等我反应过来的时候已经到23年2月份了（也就是过完春节后），立马寻医问诊，去医院拍片医生说没看出来有什么异常，给开了一些缓解关节疼痛的药及外贴的药膏，按照医嘱用药后是有些缓解，没那么痛了。但是这并没有持续多久，大概半个多月后又回到原来的症状。一直到到五月底，又去看了一位中医，医生说需要调理一周看看情况，给开了一周的中药（捏着鼻子喝的那种）。真别说这个中药有点效果，喝了三天之后感觉已经好了很多了，蹲个几分钟起来就只有一点点痛的感觉了，不会至于说无法伸直。但是好景不长，服完一周的药后，大概第三个星期，又回到原来的症状，跟那个中医说了情况，他回应这个是慢性病再开药调理一周，回想前面的西药服用完也差不多是这个效果，心想先不理了。</p><p>联系到平时的工作，想着是不是因为久坐的原因，于是平时坐一段时间后就起身走动走动，拒绝二郎腿，换了一个靠背支撑比较硬的椅子，持续两个月之后疼痛感已经有所好转了。再到后面10月底左右基本蹲下去再起来不会有什么疼痛感，感觉比较正常了，一直到现在虽然还会有点点感觉不一样，但是基本可以忽略不计了。可最后也还是不知道是什么原因引起的，也不知道是中药还是西药起的作用才好的。</p><p>这一整个过程是真的煎熬，有种“问天天不应，叫地地不灵”的感觉，疼痛折磨就算了，找不出个病因，心理也很折磨。咋说，还是那句老话“身体是革命的本钱”，平时还是要好好锻炼，多注意休息。</p><h2 id="毕业设计"><a href="#毕业设计" class="headerlink" title="毕业设计"></a>毕业设计</h2><p>按照时间线，应该说到我的毕业设计了，从2月份开始准备开题报告，到4月中旬的论文初稿完成，再到4月25的答辩，一路紧张准备着，终于再在7月中旬顺利拿到了仲恺农业工程学院的毕业证书。这也算是体验了一次毕设的设计修改完成的流程，毕业设计的指导老师也算是比较上心的。据他所说，我是写的比较认真的一个，所以最后抽部分人去答辩里面有我一个名额。因为都是自己写的项目，答辩的时候基本没什么压力。再说到这个毕业证书，然后用处不是很大了，但也胜过没有。从此我也是仲恺的校友之一了，哈哈u(￣▽￣)”</p><h2 id="求婚-amp-领证"><a href="#求婚-amp-领证" class="headerlink" title="求婚&amp;领证"></a>求婚&amp;领证</h2><p>接下来就是比较重要的两件事情了——求婚和领证。求婚这个事情早在六月初的时候就开始规划了，设想过很多种方案，网上看了很多攻略，知道最重要的就是道具和氛围，于是马上购买了必备的求婚钻石戒指（哈哈，当然是莫桑石戒指）。因为当时我俩比较喜欢去灵山岛那边露营，灵山岛风景又很优美，设想过在那边直接让外卖送一大束花过来，然后自己掏出戒指开始求婚，现场很多免费的演员，只要自己大声喊出来，一定会有很多吃瓜群众过来凑热闹的，于是后面好几次去灵山岛我都在背包里放着我的“钻戒”带过去。但是去到那边我才发现这也太空旷了，“群众演员”也是三三两两比较稀疏，如果是外卖送过来的花必定显得太单薄，而且最最最重要的一点是我忘记了自己不是一头“社牛”，完全没有这个勇气，这个想法只能告一段落。</p><p>又过了段时间依然没有其他头绪，于是网上找了很多那些所谓的求婚现场布置团队，跟人家一聊，报价2k+还需要提供场地。一来没预算，二来没场地，租场地又要支出一笔钱，后来灵光一闪，灵山岛不就是一个免费的场地嘛？纠集了好久还是放弃了，一个费钱，一个指引她到场地需要确保万无一失，还需要一些熟人来捧场，不然会比较尬场。</p><p>纠结来纠结去，时间就到了九月份，正好9月21日是她生日，那不如就趁着这个机会生日加求婚一起进行。这样一举两得，自己网上买道具回来可比请人来要划算得多，两百多就搞定生日道具跟求婚用的道具。当你以为万事俱备只欠东风的时候，意外情况就出现了。她生日那天是星期四，但是按照惯例她星期二出差星期五才回来呀！既然是这样，那我就先摆好道具，定好蛋糕周五送过来，等周五她回来的时候就给她一个惊喜也可以，OK，那就这么愉快的决定了。但是，凡事都有个但是，你以为这就完了嘛？我公司三十周年庆活动刚好也选在了周五这一天，全公司人员都需要到接近增城那边举办半马活动！这真是双重打击。可是我的道具都已经买好了呀，而且错过了这个时间，都不知道排到什么时候了。</p><p>于是在她生日那天请了一天假，跟她说太累想休息一天，她也没太多注意，然后打了大半天的气球，绑出一个心形得形状，在客订摆放好生日用的道具，在卧室摆放好求婚用的道具，把所有的道具都摆好。设想到时她回来先在客厅看到给她生日布置的场景，然后在引导她到卧室看到求婚的场景，接着自己跟求婚。嗯，堪称非常完美，绝对万无一失了！她生日的当天晚上，当然还是得拍一下我精心布置的生日场景给她，祝福她生日快乐，当晚我也订了一束鲜艳的玫瑰花（记住这束花，后面要考），拍照给她看，她乐呵得发朋友圈夸我突然变得浪漫。当天晚上也忙着摆道具到凌晨，忙完倒头就睡了。</p><p>第二天早早起来把昨晚的那一束花放到卧室，开着空调不让它萎蔫，然后参加公司下午举办的半马活动，想着参加完就立马回来把所有的一切都准备好，等她回来，给她一个惊喜。但是现实先给我一个惊喜，当天下午她居然说这次要提早回来！啊？？？那我准备的不是白费了？看到她给我发这个消息的时候，我的半马才跑了一半，一看时间，我跑完结束的时候她差不多到南站，于是跟她说让她等我一起回去，她答应说可以，于是我赶紧来跑完，但是越往后面跑就越没体力了，肯本跑不动，只能慢慢跑，跑完之后发现她已经在七号线等我了，但我从我的位置到她在七号线等我的位置还要接近一个半小时的时间。她等了半个小时之后已经不耐烦了，说要先回去，我左磨右磨才劝得住她等我。她能等我我已经很不错了，我已经不在想着有啥惊喜了，回去到门口就直接告诉她我给她准备的一些惊喜。</p><p>此时我已经没抱有让她特别惊喜的想念了。然而柳暗花明又一村，我又看到希望了，她在等我的时候跟我说她妹妹今天也要去我们那里，而且已经准备到了，哈哈哈，我大喜，天助我也！赶紧跟她妹妹联系，说明我的计划，让她帮我提前帮我弄好灯光，到此一切准备就绪。回去的路上把那些想好的台词重复n次，心里依然觉得很紧张，哈哈哈… 回去后，按计划她先看到布置的生日场景，她很开心，接着我跟她说“你知道我昨晚拍照给你花放在哪里了嘛？我把它放在卧室里开了一天的空调等你回来，你可以进去帮我拿出来吗？”于是她就进卧室了，我赶紧把我的求婚戒指拿出来，她开门的那个一刻给惊喜到了，她回头的时候我已经准备好求婚的仪式，正式跟她求婚，到此完成了我的求婚仪式</p><p>求完婚后我们也确定了领证的日子，定在了23023年10月23日。领证就比较流水线了，提前跟民政局预约好时间，预约好婚检。当天就是约好化妆师、跟拍，化完妆后直接去民政局排队领证，跟拍全程在摄影拍照。当时也是叫了双方的亲戚过来吃晚饭，晚饭的过程我们还搞了一些活动，一人一张彩票加一张刮刮乐，后面还有抽奖部分人能拿到面额更大的刮刮乐（该说不说，刮刮乐我买了一本多一点，全都刮完了，没有回本），大家都很开心，我也终于走到了我人生一个比较大的转折点</p><p>来两张配图：<br><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/0a86b0c28ecf90c065c4b63ac7ae01e.jpg"></p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/839e159021fccbbead32e5032eb5c17.jpg"></p><h2 id="收楼"><a href="#收楼" class="headerlink" title="收楼"></a>收楼</h2><p>最后一个要说的就是我们赶在2023年12月29日收楼啦，收楼过程算是比较顺利，没啥大问题。终于可以开始打造属于我们温暖的小窝啦！</p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/1704193905798.jpg"></p><p><img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/715b43d33f3fb4c1c3d384085e88d18.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;时间飞逝，转眼又是年末，是时候掏出我去年的年终总结啦 (╯°□°）╯︵ ┻━┻&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Damao2250/FileTransfer/master/a14238c613d054a0</summary>
      
    
    
    
    <category term="总结" scheme="http://damao2250.com/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="2023" scheme="http://damao2250.com/tags/2023/"/>
    
  </entry>
  
  <entry>
    <title>常用网址记录</title>
    <link href="http://damao2250.com/2023/12/19/%E5%B8%B8%E7%94%A8%E7%BD%91%E5%9D%80%E8%AE%B0%E5%BD%95/"/>
    <id>http://damao2250.com/2023/12/19/%E5%B8%B8%E7%94%A8%E7%BD%91%E5%9D%80%E8%AE%B0%E5%BD%95/</id>
    <published>2023-12-19T10:55:35.000Z</published>
    <updated>2024-03-06T03:52:58.297Z</updated>
    
    <content type="html"><![CDATA[<h2 id="医药"><a href="#医药" class="headerlink" title="医药"></a>医药</h2><ul><li>中国医药信息查询平台：<a href="https://www.dayi.org.cn/">https://www.dayi.org.cn/</a></li></ul><h2 id="气象-地图"><a href="#气象-地图" class="headerlink" title="气象/地图"></a>气象/地图</h2><ul><li>MSN天气图：<a href="https://www.msn.cn/zh-cn/weather/maps?type=temperature">https://www.msn.cn/zh-cn/weather/maps?type=temperature</a></li></ul><h2 id="影视-or-网盘-or-图书"><a href="#影视-or-网盘-or-图书" class="headerlink" title="影视 or 网盘 or 图书"></a>影视 or 网盘 or 图书</h2><ul><li>奈飞热剧-PAN99：<a href="https://pan99.xyz/">https://pan99.xyz/</a></li><li>云盘分享社：<a href="https://www.yunpanfenxiang.cn/">https://www.yunpanfenxiang.cn/</a></li><li>耐卡-欧美剧集：<a href="https://mcar.vip/forum.php?mod=forumdisplay&fid=129">https://mcar.vip/forum.php?mod=forumdisplay&amp;fid=129</a></li><li>4K世界：<a href="https://www.4ksj.com/4k-uhd-1.html">https://www.4ksj.com/4k-uhd-1.html</a></li><li>libvio(影视)：<a href="https://www.libvio.me/">https://www.libvio.me/</a></li><li>Anna’s Archive（电子书）：<a href="https://zh.annas-archive.org/">https://zh.annas-archive.org/</a></li></ul><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><ul><li>丑搜-博客搜索：<a href="https://uglysearch.othing.xyz/">https://uglysearch.othing.xyz/</a></li></ul><h2 id="网络宽带"><a href="#网络宽带" class="headerlink" title="网络宽带"></a>网络宽带</h2><ul><li>广东电信宽带测速平台：<a href="https://10000.gd.cn/#/speed">https://10000.gd.cn/#/speed</a></li><li>中国科学技术大学测速网站：<a href="https://test.ustc.edu.cn/">https://test.ustc.edu.cn/</a></li><li>speedtest：<a href="https://www.speedtest.net/">https://www.speedtest.net/</a></li><li>speedtest.im：<a href="https://speedtest.im/">https://speedtest.im/</a></li></ul><h2 id="政企相关"><a href="#政企相关" class="headerlink" title="政企相关"></a>政企相关</h2><ul><li>广州阳光家缘：<a href="http://zfcj.gz.gov.cn/zfcj/ygjy">http://zfcj.gz.gov.cn/zfcj/ygjy</a></li><li>南沙区金洲农贸市场菜篮子零售价：<a href="https://www.gzns.gov.cn/zwgk/zdlyxxgk/jghsf/jgbz/">https://www.gzns.gov.cn/zwgk/zdlyxxgk/jghsf/jgbz/</a></li><li>中国家电网-零售监测：<a href="http://info.cheaa.com/zhoubao.shtml">http://info.cheaa.com/zhoubao.shtml</a></li></ul><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><ul><li>CS自学指南：<a href="https://csdiy.wiki/">https://csdiy.wiki/</a></li><li>AI算法工程师手册：<a href="https://www.huaxiaozhuan.com/">https://www.huaxiaozhuan.com/</a></li></ul><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li>所有时区的精确时间：<a href="https://time.is/">https://time.is/</a></li><li>中国家电网：<a href="http://www.cheaa.com/">http://www.cheaa.com/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;医药&quot;&gt;&lt;a href=&quot;#医药&quot; class=&quot;headerlink&quot; title=&quot;医药&quot;&gt;&lt;/a&gt;医药&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;中国医药信息查询平台：&lt;a href=&quot;https://www.dayi.org.cn/&quot;&gt;https://www.dayi.o</summary>
      
    
    
    
    <category term="网址" scheme="http://damao2250.com/categories/%E7%BD%91%E5%9D%80/"/>
    
    
    <category term="网址" scheme="http://damao2250.com/tags/%E7%BD%91%E5%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>人民币数字大写转换工具</title>
    <link href="http://damao2250.com/2023/11/27/%E4%BA%BA%E6%B0%91%E5%B8%81%E6%95%B0%E5%AD%97%E5%A4%A7%E5%86%99%E8%BD%AC%E6%8D%A2%E5%B7%A5%E5%85%B7/"/>
    <id>http://damao2250.com/2023/11/27/%E4%BA%BA%E6%B0%91%E5%B8%81%E6%95%B0%E5%AD%97%E5%A4%A7%E5%86%99%E8%BD%AC%E6%8D%A2%E5%B7%A5%E5%85%B7/</id>
    <published>2023-11-27T01:36:33.000Z</published>
    <updated>2023-11-27T02:22:37.975Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">convertCurrency</span><span class="token punctuation">(</span><span class="token parameter">currencyDigits</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> integral<span class="token punctuation">,</span> decimal<span class="token punctuation">,</span> outputCharacters<span class="token punctuation">,</span> parts<span class="token punctuation">,</span> digits<span class="token punctuation">,</span> radices<span class="token punctuation">,</span> bigRadices<span class="token punctuation">,</span> decimals<span class="token punctuation">,</span> zeroCount<span class="token punctuation">,</span> i<span class="token punctuation">,</span> p<span class="token punctuation">,</span> d<span class="token punctuation">,</span> ds<span class="token punctuation">,</span> quotient<span class="token punctuation">,</span> modulus<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span>currencyDigits<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'number'</span><span class="token punctuation">)</span> currencyDigits <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>currencyDigits<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">==</span> currencyDigits<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"不能为空 请输入数字金额!如：123.23"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> currencyDigits<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^,.\d]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"输入字符串中的字符无效!"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> currencyDigits<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^((\d&#123;1,3&#125;(,\d&#123;3&#125;)*(.((\d&#123;3&#125;,)*\d&#123;1,3&#125;))?)|(\d+(.\d+)?))$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"请输入正确的数字金额!"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>currencyDigits <span class="token operator">=</span> <span class="token punctuation">(</span>currencyDigits <span class="token operator">=</span> currencyDigits<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">,</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^0+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Number</span><span class="token punctuation">(</span>currencyDigits<span class="token punctuation">)</span> <span class="token operator">></span>    <span class="token number">99999999999.99</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Too large a number to convert!"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>parts <span class="token operator">=</span> currencyDigits<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token punctuation">(</span>integral <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> decimal <span class="token operator">=</span> <span class="token punctuation">(</span>decimal <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>integral <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> decimal <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span> digits <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">"零"</span><span class="token punctuation">,</span> <span class="token string">"壹"</span><span class="token punctuation">,</span> <span class="token string">"贰"</span><span class="token punctuation">,</span> <span class="token string">"叁"</span><span class="token punctuation">,</span> <span class="token string">"肆"</span><span class="token punctuation">,</span> <span class="token string">"伍"</span><span class="token punctuation">,</span> <span class="token string">"陆"</span><span class="token punctuation">,</span> <span class="token string">"柒"</span><span class="token punctuation">,</span> <span class="token string">"捌"</span><span class="token punctuation">,</span>      <span class="token string">"玖"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radices <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"拾"</span><span class="token punctuation">,</span> <span class="token string">"佰"</span><span class="token punctuation">,</span> <span class="token string">"仟"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bigRadices <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"万"</span><span class="token punctuation">,</span> <span class="token string">"亿"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> decimals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>        <span class="token string">"角"</span><span class="token punctuation">,</span> <span class="token string">"分"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> outputCharacters <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token function">Number</span><span class="token punctuation">(</span>integral<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>zeroCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> integral<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> quotient <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> integral<span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">,</span> modulus <span class="token operator">=</span> p <span class="token operator">%</span>      <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"0"</span> <span class="token operator">==</span> <span class="token punctuation">(</span>d <span class="token operator">=</span> integral<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> zeroCount<span class="token operator">++</span> <span class="token operator">:</span> <span class="token punctuation">(</span>zeroCount <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>outputCharacters <span class="token operator">+=</span> digits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        zeroCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> outputCharacters <span class="token operator">+=</span> digits<span class="token punctuation">[</span><span class="token function">Number</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> radices<span class="token punctuation">[</span>modulus<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token operator">==</span> modulus <span class="token operator">&amp;&amp;</span> zeroCount <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span>      <span class="token punctuation">(</span>outputCharacters <span class="token operator">+=</span> bigRadices<span class="token punctuation">[</span>quotient<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    outputCharacters <span class="token operator">+=</span> <span class="token string">"元"</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">""</span> <span class="token operator">!=</span> decimal<span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> decimal<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> d <span class="token operator">=</span> decimal<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ds <span class="token operator">=</span> decimal<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> outputCharacters <span class="token operator">+=</span>      <span class="token number">0</span> <span class="token operator">==</span> d <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">==</span> ds <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> digits<span class="token punctuation">[</span><span class="token function">Number</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">:</span> digits<span class="token punctuation">[</span><span class="token function">Number</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> decimals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token string">""</span> <span class="token operator">==</span> outputCharacters <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>outputCharacters <span class="token operator">=</span> <span class="token string">"零元"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">""</span> <span class="token operator">==</span> decimal <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>outputCharacters <span class="token operator">+=</span> <span class="token string">"整"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    outputCharacters <span class="token operator">=</span> <span class="token string">""</span> <span class="token operator">+</span> outputCharacters<span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">convertCurrency</span><span class="token punctuation">(</span><span class="token string">'123.23'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 壹佰贰拾叁元贰角叁分</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">convertCurrency</span><span class="token punctuation">(</span><span class="token number">999.99</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 玖佰玖拾玖元玖角玖分</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">convertCurrency</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 零元整</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-js&quot; data-language=&quot;js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://damao2250.com/categories/JavaScript/"/>
    
    
    <category term="工具" scheme="http://damao2250.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="人民币数字大写转换" scheme="http://damao2250.com/tags/%E4%BA%BA%E6%B0%91%E5%B8%81%E6%95%B0%E5%AD%97%E5%A4%A7%E5%86%99%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>JS运算符备忘</title>
    <link href="http://damao2250.com/2023/11/17/JS%E8%BF%90%E7%AE%97%E7%AC%A6%E5%A4%87%E5%BF%98/"/>
    <id>http://damao2250.com/2023/11/17/JS%E8%BF%90%E7%AE%97%E7%AC%A6%E5%A4%87%E5%BF%98/</id>
    <published>2023-11-17T07:05:30.000Z</published>
    <updated>2023-11-17T09:13:14.217Z</updated>
    
    <content type="html"><![CDATA[<h2 id="链判断运算符"><a href="#链判断运算符" class="headerlink" title="链判断运算符 ?."></a>链判断运算符 <code>?.</code></h2><ul><li><p>读取对象内部的某个属性时，判断上层对象是否存在</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 读取message data.result.state.message</span><span class="token comment">// 正常写法</span><span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token punctuation">(</span> data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>result <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>result<span class="token punctuation">.</span>state <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>result<span class="token punctuation">.</span>state<span class="token punctuation">.</span>message <span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token comment">// 链判断运算符写法</span><span class="token keyword">const</span> message <span class="token operator">=</span> data<span class="token operator">?.</span>result<span class="token operator">?.</span>state<span class="token operator">?.</span>message <span class="token operator">||</span> <span class="token string">""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>三元运算符<code>?:</code>也常用于判断对象是否存在</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// state.code</span><span class="token keyword">const</span> code <span class="token operator">=</span> state <span class="token operator">?</span> state<span class="token punctuation">.</span>code <span class="token operator">:</span> <span class="token string">""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><code>?.</code>运算符常见形式</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">a<span class="token operator">?.</span>b<span class="token comment">// 等同于</span>a <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> a<span class="token punctuation">.</span>ba<span class="token operator">?.</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token comment">// 等同于</span>a <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> a<span class="token punctuation">[</span>x<span class="token punctuation">]</span>a<span class="token operator">?.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 等同于</span>a <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> a<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span>a<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 等同于</span>a <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Null-判断运算符-、"><a href="#Null-判断运算符-、" class="headerlink" title="Null 判断运算符 ||、??"></a>Null 判断运算符 <code>||</code>、<code>??</code></h2><ul><li><p>如果某个属性的值是<code>null</code>或<code>undefined</code>，有时候需要为它们指定默认值</p></li><li><p>常见做法是通过<code>||</code>运算符指定默认值，但是属性的值如果为空字符串或<code>false</code>或<code>0</code>，默认值也会生效，如下</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> value <span class="token operator">=</span> data<span class="token punctuation">.</span>value <span class="token operator">||</span> <span class="token string">"123"</span><span class="token comment">// 当data.value等于null、undefine、false、0或空值的时候value的值都是'123'</span><span class="token comment">// 这样会导致无法判断false、0或者空值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>通过<code>??</code>运算符，只有值为<code>null</code>或<code>undefined</code>时，才会返回右侧的值</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> value <span class="token operator">=</span> data<span class="token punctuation">.</span>value <span class="token operator">??</span> <span class="token string">"123"</span><span class="token comment">// 当data.value等于null、undefine的时候value的值才是'123'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h2 id="逻辑赋值运算符-、-amp-amp-、"><a href="#逻辑赋值运算符-、-amp-amp-、" class="headerlink" title="逻辑赋值运算符 ||=、&amp;&amp;=、??="></a>逻辑赋值运算符 <code>||=</code>、<code>&amp;&amp;=</code>、<code>??=</code></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 或赋值运算符</span>x <span class="token operator">||=</span> y<span class="token comment">// 等同于</span>x <span class="token operator">||</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> y<span class="token punctuation">)</span><span class="token comment">// 与赋值运算符</span>x <span class="token operator">&amp;&amp;=</span> y<span class="token comment">// 等同于</span>x <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> y<span class="token punctuation">)</span><span class="token comment">// Null 赋值运算符</span>x <span class="token operator">??=</span> y<span class="token comment">// 等同于</span>x <span class="token operator">??</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>写法对比</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 老的写法</span>user<span class="token punctuation">.</span>id <span class="token operator">=</span> user<span class="token punctuation">.</span>id <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 新的写法</span>user<span class="token punctuation">.</span>id <span class="token operator">||=</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>示例</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ||=  值为 null、undefined、false、0或空时取默认值</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">||=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 1</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">||=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 9</span><span class="token comment">// &amp;&amp;= 与上面相反，值不为 null、undefined、false、0或空时取默认值</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">&amp;&amp;=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 0</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">&amp;&amp;=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 1</span><span class="token comment">// ??=  ,值为 null undefined 时取默认值</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">??=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 0</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">??=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 9</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span>user<span class="token punctuation">.</span>id <span class="token operator">??=</span> <span class="token number">1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">// 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><ul><li><code>&amp;&amp;</code>与、<code>!!</code>或、<code>!</code>非，<code>!!</code>非的取反</li></ul><h2 id="逻辑位运算符"><a href="#逻辑位运算符" class="headerlink" title="逻辑位运算符"></a>逻辑位运算符</h2><ul><li><code>&amp;</code>位与、<code>|</code>位或、<code>^</code>位异或、<code>~</code>位非</li></ul><h2 id="位移运算符"><a href="#位移运算符" class="headerlink" title="位移运算符"></a>位移运算符</h2><ul><li><code>&lt;&lt;</code>左移、<code>&gt;&gt;</code>右移、<code>&gt;&gt;&gt;</code>无符号右移</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;链判断运算符&quot;&gt;&lt;a href=&quot;#链判断运算符&quot; class=&quot;headerlink&quot; title=&quot;链判断运算符 ?.&quot;&gt;&lt;/a&gt;链判断运算符 &lt;code&gt;?.&lt;/code&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;读取对象内部的某个属性时，判断上层对象是否存在&lt;/p</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://damao2250.com/categories/JavaScript/"/>
    
    
    <category term="JS" scheme="http://damao2250.com/tags/JS/"/>
    
    <category term="运算符" scheme="http://damao2250.com/tags/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>不同分辨率屏幕的适配</title>
    <link href="http://damao2250.com/2023/11/04/%E4%B8%8D%E5%90%8C%E5%88%86%E8%BE%A8%E7%8E%87%E5%B1%8F%E5%B9%95%E7%9A%84%E9%80%82%E9%85%8D/"/>
    <id>http://damao2250.com/2023/11/04/%E4%B8%8D%E5%90%8C%E5%88%86%E8%BE%A8%E7%8E%87%E5%B1%8F%E5%B9%95%E7%9A%84%E9%80%82%E9%85%8D/</id>
    <published>2023-11-04T09:40:24.000Z</published>
    <updated>2023-11-04T10:00:29.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用两个转换库"><a href="#使用两个转换库" class="headerlink" title="使用两个转换库"></a>使用两个转换库</h2><ul><li>postcss-pxtorem<pre class="line-numbers language-none"><code class="language-none">postcss-pxtorem 插件，可以从像素单位生成 rem 单位<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>amfe-flexible<pre class="line-numbers language-none"><code class="language-none">amfe-flexible 是配置可伸缩布局方案，主要是将 1rem 设为 viewWidth&#x2F;10PC端设计稿为1920时：1920&#x2F;10 &#x3D; 192移动端设计稿为750时：750&#x2F;10 &#x3D; 75<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="在项目中配置"><a href="#在项目中配置" class="headerlink" title="在项目中配置"></a>在项目中配置</h2><ul><li><p>1、安装依赖</p><pre class="line-numbers language-ps" data-language="ps"><code class="language-ps">npm install postcss-pxtoremnpm install amfe-flexible<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>2、<code>vue.config.js</code>中配置</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> postCssPxToRem <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'postcss-pxtorem'</span><span class="token punctuation">)</span><span class="token comment">// import postCssPxToRem from 'postcss-pxtorem'</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  css<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    loaderOptions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      postcss<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        plugins<span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token function">postCssPxToRem</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            rootValue<span class="token operator">:</span> <span class="token number">192</span><span class="token punctuation">,</span> <span class="token comment">// 设计稿尺寸 1rem 的大小</span>            propList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'*'</span><span class="token punctuation">]</span> <span class="token comment">// 需要转换的属性列表，*表示全部转换</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或<code>vite.config.ts</code>中配置</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> postCssPxToRem <span class="token keyword">from</span> <span class="token string">'postcss-pxtorem'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  css<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    postcss<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      plugins<span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token function">postCssPxToRem</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          rootValue<span class="token operator">:</span> <span class="token string">'192'</span><span class="token punctuation">,</span>          propList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'*'</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>3、main.js 中引入</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token string">'amfe-flexible'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用两个转换库&quot;&gt;&lt;a href=&quot;#使用两个转换库&quot; class=&quot;headerlink&quot; title=&quot;使用两个转换库&quot;&gt;&lt;/a&gt;使用两个转换库&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;postcss-pxtorem&lt;pre class=&quot;line-numbers lang</summary>
      
    
    
    
    <category term="Vue" scheme="http://damao2250.com/categories/Vue/"/>
    
    
    <category term="分辨率适配" scheme="http://damao2250.com/tags/%E5%88%86%E8%BE%A8%E7%8E%87%E9%80%82%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>CF方案</title>
    <link href="http://damao2250.com/2023/10/27/CF%E6%96%B9%E6%A1%88/"/>
    <id>http://damao2250.com/2023/10/27/CF%E6%96%B9%E6%A1%88/</id>
    <published>2023-10-27T07:16:49.000Z</published>
    <updated>2024-02-21T09:23:55.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-准备-v2rayN"><a href="#1-准备-v2rayN" class="headerlink" title="1. 准备 v2rayN"></a>1. 准备 v2rayN</h2><ul><li>下载安装 <a href="https://github.com/2dust/v2rayN/releases">v2rayN最新版</a></li></ul><h2 id="2-cloudflare"><a href="#2-cloudflare" class="headerlink" title="2. cloudflare"></a>2. cloudflare</h2><ul><li><p>访问 <a href="https://dash.cloudflare.com/">cloudflare</a>，使用临时邮箱或自己的邮箱注册一个账号</p></li><li><p>临时邮箱：<a href="https://www.linshiyouxiang.net/">https://www.linshiyouxiang.net/</a></p></li><li><p>注册好cloudflare后，选择添加站点，选择workers和pages，然后重新验证邮箱，去邮箱点击验证的链接即可</p></li><li><p>验证邮箱后，点击创建worker，修改worker名称，点击部署，点击配置worker，点击快速编辑</p></li><li><p>进入配置worker页面后，点击快速编辑，把worker.js的代码全部删除，然后复制<a href="https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js">部署代码https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js</a> 粘贴到worker.js</p></li><li><p>粘贴完worker.js后，需要修改第七行的<code>userID</code>，需要先去<a href="https://1024tools.com/uuid">uuid生成：https://1024tools.com/uuid</a>，生成后选择一组复制粘贴到第七行的<code>userID</code></p></li><li><p>worker.js的第九行的<code>proxyIP</code>，使用下面其中一组代理即可</p><pre class="line-numbers language-none"><code class="language-none">cdn-all.xn--b6gac.eu.orgcdn.xn--b6gac.eu.org cdn-b100.xn--b6gac.eu.org edgetunnel.anycast.eu.org cdn.anycast.eu.org （亚洲地区）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>完成userID和proxyIP配置后，点击保存并部署，部署完后点击 发送 按钮，看右边能正常返回来json说明部署成功</p></li><li><p>将刚刚点击发送的URL与userID拼接成url地址访问，如：<a href="https://worker007.u1-kejy8.workers.dev/299a134c-c7b7-45f8-b8a8-649c86%EF%BC%8C%E7%84%B6%E5%90%8E%E5%B0%86%60vless://%60%E5%BC%80%E5%A4%B4%E7%9A%84%E9%82%A3%E4%B8%80%E8%A1%8C%E5%85%A8%E9%83%A8%E5%A4%8D%E5%88%B6%E5%88%B0v2rayN">https://worker007.u1-kejy8.workers.dev/299a134c-c7b7-45f8-b8a8-649c86，然后将`vless://`开头的那一行全部复制到v2rayN</a></p></li><li><p>打开v2rayN，点击服务器，点击从剪贴板导入批量URL，导入后可以看到节点，然后双击节点，传输层安全选择空，端口改为80或者2052</p></li><li><p>地址需要使用到邮箱IP，使用workers win专用<a href="https://jdssl.top/wp-content/uploads/2023/07/works%E4%B8%93%E7%94%A8ip%E4%BC%98%E9%80%89.zip">ip优选 https://jdssl.top/wp-content/uploads/2023/07/works%E4%B8%93%E7%94%A8ip%E4%BC%98%E9%80%89.zip</a>，下载后打开文件夹，随便双击一个bat结尾的文件，双击前需要确保所有的科学上网工具都是关闭的，地址改为优选IP</p></li><li><p>无法优选ip 可以使用这个（youxuan.jdssl.link）域名在v2ray 填优选ip处填写，把端口改为：80 并把下面的tls关闭</p></li></ul><h2 id="参考：https-blog-taoshuge-eu-org-post-4"><a href="#参考：https-blog-taoshuge-eu-org-post-4" class="headerlink" title="参考：https://blog.taoshuge.eu.org/post/4/"></a>参考：<a href="https://blog.taoshuge.eu.org/post/4/">https://blog.taoshuge.eu.org/post/4/</a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-准备-v2rayN&quot;&gt;&lt;a href=&quot;#1-准备-v2rayN&quot; class=&quot;headerlink&quot; title=&quot;1. 准备 v2rayN&quot;&gt;&lt;/a&gt;1. 准备 v2rayN&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;下载安装 &lt;a href=&quot;https://gith</summary>
      
    
    
    
    <category term="cloudflare" scheme="http://damao2250.com/categories/cloudflare/"/>
    
    
    <category term="cloudflare" scheme="http://damao2250.com/tags/cloudflare/"/>
    
    <category term="CF" scheme="http://damao2250.com/tags/CF/"/>
    
  </entry>
  
  <entry>
    <title>css自定义有序列表</title>
    <link href="http://damao2250.com/2023/09/13/css%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%89%E5%BA%8F%E5%88%97%E8%A1%A8/"/>
    <id>http://damao2250.com/2023/09/13/css%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%89%E5%BA%8F%E5%88%97%E8%A1%A8/</id>
    <published>2023-09-13T00:45:18.000Z</published>
    <updated>2023-09-13T02:10:10.289Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSS-属性-list-style-type"><a href="#CSS-属性-list-style-type" class="headerlink" title="CSS 属性 list-style-type"></a>CSS 属性 list-style-type</h2><ul><li><code>list-style-type</code>可以设置列表元素的 marker（比如圆点、符号、或者自定义计数器样式）, 默认为disc实心圆点</li><li>参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/list-style-type">MDN</a></li></ul><h2 id="常见属性"><a href="#常见属性" class="headerlink" title="常见属性"></a>常见属性</h2><ul><li><code>none</code> 不显示<pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: none;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:none !important;">  <li style="list-style-type:none !important;">白日依山尽</li>  <li style="list-style-type:none !important;">黄河入海流</li>  <li style="list-style-type:none !important;">欲穷千里目</li>  <li style="list-style-type:none !important;">更上一层楼</li></ul></li><li><code>disc</code> 实心圆(默认)<pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: disc;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:disc !important;">  <li style="list-style-type:disc !important;">白日依山尽</li>  <li style="list-style-type:disc !important;">黄河入海流</li>  <li style="list-style-type:disc !important;">欲穷千里目</li>  <li style="list-style-type:disc !important;">更上一层楼</li></ul></li><li><code>circle</code> 空心圆<pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: circle;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:circle !important;">  <li style="list-style-type:circle !important;">白日依山尽</li>  <li style="list-style-type:circle !important;">黄河入海流</li>  <li style="list-style-type:circle !important;">欲穷千里目</li>  <li style="list-style-type:circle !important;">更上一层楼</li></ul></li><li><code>square</code> 实心方块<pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: square;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:square !important;">  <li style="list-style-type:square !important;">白日依山尽</li>  <li style="list-style-type:square !important;">黄河入海流</li>  <li style="list-style-type:square !important;">欲穷千里目</li>  <li style="list-style-type:square !important;">更上一层楼</li></ul></li><li><code>decimal</code> 十进制阿拉伯数字<pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: decimal;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:decimal !important;">  <li style="list-style-type:decimal !important;">白日依山尽</li>  <li style="list-style-type:decimal !important;">黄河入海流</li>  <li style="list-style-type:decimal !important;">欲穷千里目</li>  <li style="list-style-type:decimal !important;">更上一层楼</li></ul></li><li><code>cjk-decimal</code> 十进制数大写<pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: cjk-decimal;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:cjk-decimal !important;">  <li style="list-style-type:cjk-decimal !important;">白日依山尽</li>  <li style="list-style-type:cjk-decimal !important;">黄河入海流</li>  <li style="list-style-type:cjk-decimal !important;">欲穷千里目</li>  <li style="list-style-type:cjk-decimal !important;">更上一层楼</li></ul></li><li><code>decimal-leading-zero</code> 十进制阿拉伯数字(个位数前面补零)<pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: decimal-leading-zero;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:decimal-leading-zero !important;">  <li style="list-style-type:decimal-leading-zero !important;">白日依山尽</li>  <li style="list-style-type:decimal-leading-zero !important;">黄河入海流</li>  <li style="list-style-type:decimal-leading-zero !important;">欲穷千里目</li>  <li style="list-style-type:decimal-leading-zero !important;">更上一层楼</li></ul></li><li><code>lower-roman</code> 小写的罗马数字<pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: lower-roman;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:lower-roman !important;">  <li style="list-style-type:lower-roman !important;">白日依山尽</li>  <li style="list-style-type:lower-roman !important;">黄河入海流</li>  <li style="list-style-type:lower-roman !important;">欲穷千里目</li>  <li style="list-style-type:lower-roman !important;">更上一层楼</li></ul></li><li><code>upper-roman</code> 大写的罗马数字<pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: upper-roman;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:upper-roman !important;">  <li style="list-style-type:upper-roman !important;">白日依山尽</li>  <li style="list-style-type:upper-roman !important;">黄河入海流</li>  <li style="list-style-type:upper-roman !important;">欲穷千里目</li>  <li style="list-style-type:upper-roman !important;">更上一层楼</li></ul></li><li>其他<ul><li>lower-greek 小写古典希腊文</li><li>lower-alpha, lower-latin 小写ASCII字母</li><li>upper-alpha, upper-latin 大写ASCII字母</li><li>其他非常用的属性值：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/list-style-type#%E8%AF%AD%E6%B3%95">语法取值</a></li></ul></li></ul><h2 id="特殊属性"><a href="#特殊属性" class="headerlink" title="特殊属性"></a>特殊属性</h2><ul><li><p>取值为 <code>cjk-decimal</code>, <code>cjk-ideographic</code>, <code>japanese-informal</code>, <code>korean-hanja-informal</code>, <code>trad-chinese-informal</code>时，个位都是 一、二、三…</p><pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: cjk-decimal;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:cjk-decimal !important;">  <li style="list-style-type:cjk-decimal !important;">白日依山尽</li>  <li style="list-style-type:cjk-decimal !important;">黄河入海流</li>  <li style="list-style-type:cjk-decimal !important;">欲穷千里目</li>  <li style="list-style-type:cjk-decimal !important;">更上一层楼</li></ul></li><li><p>取值为 <code>korean-hanja-formal</code>, <code>simp-chinese-formal</code>, <code>trad-chinese-formal</code>时，个位都是 壹、贰、叁…</p><pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: simp-chinese-formal;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:simp-chinese-formal !important;">  <li style="list-style-type:simp-chinese-formal !important;">白日依山尽</li>  <li style="list-style-type:simp-chinese-formal !important;">黄河入海流</li>  <li style="list-style-type:simp-chinese-formal !important;">欲穷千里目</li>  <li style="list-style-type:simp-chinese-formal !important;">更上一层楼</li></ul></li><li><p><code>cjk-earthly-branch</code>：子、丑、寅…（地支序号）</p><ul><li>地支超过十二时会自动排序：子子、子丑、子寅…（天干同理）<pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: cjk-earthly-branch;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:cjk-earthly-branch !important;"><li style="list-style-type:cjk-earthly-branch !important;">白日依山尽</li><li style="list-style-type:cjk-earthly-branch !important;">黄河入海流</li><li style="list-style-type:cjk-earthly-branch !important;">欲穷千里目</li><li style="list-style-type:cjk-earthly-branch !important;">更上一层楼</li></ul></li></ul></li><li><p><code>cjk-heavenly-stem</code>：子、丑、寅…（天干序号）</p><pre class="line-numbers language-none"><code class="language-none">&lt;ul style&#x3D;&quot;list-style-type: cjk-heavenly-stem;&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul style="list-style-type:cjk-heavenly-stem !important;">  <li style="list-style-type:cjk-heavenly-stem !important;">白日依山尽</li>  <li style="list-style-type:cjk-heavenly-stem !important;">黄河入海流</li>  <li style="list-style-type:cjk-heavenly-stem !important;">欲穷千里目</li>  <li style="list-style-type:cjk-heavenly-stem !important;">更上一层楼</li></ul></li></ul><h2 id="自定义序号"><a href="#自定义序号" class="headerlink" title="自定义序号"></a>自定义序号</h2><h3 id="自定义数字"><a href="#自定义数字" class="headerlink" title="自定义数字"></a>自定义数字</h3>  <pre class="line-numbers language-none"><code class="language-none">&lt;style&gt;  @counter-style circled-simp-chinese-informal &#123;    system: additive;    suffix: &quot; &quot;;    additive-symbols: ㊉ 10, ㊈ 9, ㊇ 8, ㊆ 7, ㊅ 6, ㊄ 5, ㊃ 4, ㊂ 3, ㊁ 2, ㊀ 1;  &#125;  .origin &#123;    list-style: circled-simp-chinese-informal;  &#125;&lt;&#x2F;style&gt;&lt;ul class&#x3D;&quot;origin&quot;&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;  &lt;li&gt;白日依山尽&lt;&#x2F;li&gt;  &lt;li&gt;黄河入海流&lt;&#x2F;li&gt;  &lt;li&gt;欲穷千里目&lt;&#x2F;li&gt;  &lt;li&gt;更上一层楼&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>  <style>    @counter-style circled-simp-chinese-informal {      system: additive;      suffix: " ";      additive-symbols: ㊉ 10, ㊈ 9, ㊇ 8, ㊆ 7, ㊅ 6, ㊄ 5, ㊃ 4, ㊂ 3, ㊁ 2, ㊀ 1;    }    .origin {      list-style: circled-simp-chinese-informal  !important;    }  </style>  <ul class="origin">    <li class="origin">白日依山尽</li>    <li class="origin">黄河入海流</li>    <li class="origin">欲穷千里目</li>    <li class="origin">更上一层楼</li>    <li class="origin">白日依山尽</li>    <li class="origin">黄河入海流</li>    <li class="origin">欲穷千里目</li>    <li class="origin">更上一层楼</li>    <li class="origin">白日依山尽</li>    <li class="origin">黄河入海流</li>    <li class="origin">欲穷千里目</li>    <li class="origin">更上一层楼</li>    <li class="origin">白日依山尽</li>    <li class="origin">黄河入海流</li>    <li class="origin">欲穷千里目</li>    <li class="origin">更上一层楼</li>    <li class="origin">白日依山尽</li>    <li class="origin">黄河入海流</li>    <li class="origin">欲穷千里目</li>    <li class="origin">更上一层楼</li>    <li class="origin">白日依山尽</li>    <li class="origin">黄河入海流</li>    <li class="origin">欲穷千里目</li>    <li class="origin">更上一层楼</li>  </ul><h3 id="自定义表情"><a href="#自定义表情" class="headerlink" title="自定义表情"></a>自定义表情</h3>  <pre class="line-numbers language-none"><code class="language-none">&lt;style&gt;  @counter-style emoji-test &#123;    system: additive;    suffix: &quot; &quot;;    additive-symbols: 😍 10, 😜 9, 😂 8, 😅 7, 😁 6, 🙂 5, 😐 4, 🙁 3, 😨 2, 😭 1;  &#125;  .emoji &#123;    list-style: emoji-test;  &#125;&lt;&#x2F;style&gt;&lt;ul class&#x3D;&quot;emoji&quot;&gt;  &lt;li&gt;君不见，黄河之水天上来，奔流到海不复回&lt;&#x2F;li&gt;  &lt;li&gt;君不见，高堂明镜悲白发，朝如青丝暮成雪&lt;&#x2F;li&gt;  &lt;li&gt;人生得意须尽欢，莫使金樽空对月&lt;&#x2F;li&gt;  &lt;li&gt;天生我材必有用，千金散尽还复来&lt;&#x2F;li&gt;  &lt;li&gt;烹羊宰牛且为乐，会须一饮三百杯&lt;&#x2F;li&gt;  &lt;li&gt;岑夫子，丹丘生，将进酒，杯莫停&lt;&#x2F;li&gt;  &lt;li&gt;与君歌一曲，请君为我倾耳听&lt;&#x2F;li&gt;  &lt;li&gt;钟鼓馔玉不足贵，但愿长醉不愿醒&lt;&#x2F;li&gt;  &lt;li&gt;古来圣贤皆寂寞，惟有饮者留其名&lt;&#x2F;li&gt;  &lt;li&gt;陈王昔时宴平乐，斗酒十千恣欢谑&lt;&#x2F;li&gt;  &lt;li&gt;主人何为言少钱，径须沽取对君酌&lt;&#x2F;li&gt;  &lt;li&gt;五花马，千金裘，呼儿将出换美酒，与尔同销万古愁&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>  <style>    @counter-style emoji-test {      system: additive;      suffix: " ";      additive-symbols: 😍 10, 😜 9, 😂 8, 😅 7, 😁 6, 🙂 5, 😐 4, 🙁 3, 😨 2, 😭 1;    }    .emoji {      list-style: emoji-test  !important;    }  </style>  <ul class="emoji">    <li class="emoji">君不见，黄河之水天上来，奔流到海不复回</li>    <li class="emoji">君不见，高堂明镜悲白发，朝如青丝暮成雪</li>    <li class="emoji">人生得意须尽欢，莫使金樽空对月</li>    <li class="emoji">天生我材必有用，千金散尽还复来</li>    <li class="emoji">烹羊宰牛且为乐，会须一饮三百杯</li>    <li class="emoji">岑夫子，丹丘生，将进酒，杯莫停</li>    <li class="emoji">与君歌一曲，请君为我倾耳听</li>    <li class="emoji">钟鼓馔玉不足贵，但愿长醉不愿醒</li>    <li class="emoji">古来圣贤皆寂寞，惟有饮者留其名</li>    <li class="emoji">陈王昔时宴平乐，斗酒十千恣欢谑</li>    <li class="emoji">主人何为言少钱，径须沽取对君酌</li>    <li class="emoji">五花马，千金裘，呼儿将出换美酒，与尔同销万古愁</li>  </ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;CSS-属性-list-style-type&quot;&gt;&lt;a href=&quot;#CSS-属性-list-style-type&quot; class=&quot;headerlink&quot; title=&quot;CSS 属性 list-style-type&quot;&gt;&lt;/a&gt;CSS 属性 list-style-ty</summary>
      
    
    
    
    <category term="CSS" scheme="http://damao2250.com/categories/CSS/"/>
    
    
    <category term="CSS" scheme="http://damao2250.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>chrome允许跨域</title>
    <link href="http://damao2250.com/2023/08/29/chrome%E5%85%81%E8%AE%B8%E8%B7%A8%E5%9F%9F/"/>
    <id>http://damao2250.com/2023/08/29/chrome%E5%85%81%E8%AE%B8%E8%B7%A8%E5%9F%9F/</id>
    <published>2023-08-29T01:47:09.000Z</published>
    <updated>2023-08-29T02:19:46.864Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows-下"><a href="#Windows-下" class="headerlink" title="Windows 下"></a>Windows 下</h2><ul><li>复制一个 chrome 浏览器的快捷方式，在属性中找到打开路径，在 …chrome.exe 后面加上<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">--</span>args <span class="token operator">--</span>disable<span class="token operator">-</span>web<span class="token operator">-</span>security <span class="token operator">--</span>user<span class="token operator">-</span>data<span class="token operator">-</span>dir<span class="token operator">=</span><span class="token string">"C:/ChromeDevSession"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="Mac-下"><a href="#Mac-下" class="headerlink" title="Mac 下"></a>Mac 下</h2><ul><li>在终端中执行命令<pre class="line-numbers language-js" data-language="js"><code class="language-js">open <span class="token operator">-</span>a <span class="token string">'Google Chrome'</span> <span class="token operator">--</span>args <span class="token operator">--</span>disable<span class="token operator">-</span>web<span class="token operator">-</span>security <span class="token operator">--</span>user<span class="token operator">-</span>data<span class="token operator">-</span>dir<span class="token operator">=</span><span class="token operator">/</span>tmp<span class="token operator">/</span>chrome_dev_test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="扩展程序的方式"><a href="#扩展程序的方式" class="headerlink" title="扩展程序的方式"></a>扩展程序的方式</h2><ul><li><p>Chrome: <a href="https://chrome.google.com/webstore/detail/cros-anywhere/gcagclbpmooihllccniifbdekfeneebm?hl=zh-CN">cros-anywhere</a></p></li><li><p>Firefox ：<a href="https://addons.mozilla.org/en-US/firefox/addon/cors-everywhere/">cros-anywhere</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Windows-下&quot;&gt;&lt;a href=&quot;#Windows-下&quot; class=&quot;headerlink&quot; title=&quot;Windows 下&quot;&gt;&lt;/a&gt;Windows 下&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;复制一个 chrome 浏览器的快捷方式，在属性中找到打开路径，在 …c</summary>
      
    
    
    
    <category term="小技巧" scheme="http://damao2250.com/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="Chrome" scheme="http://damao2250.com/tags/Chrome/"/>
    
    <category term="跨域" scheme="http://damao2250.com/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>Kodi相关</title>
    <link href="http://damao2250.com/2023/06/14/Kodi%E7%9B%B8%E5%85%B3/"/>
    <id>http://damao2250.com/2023/06/14/Kodi%E7%9B%B8%E5%85%B3/</id>
    <published>2023-06-14T08:47:10.000Z</published>
    <updated>2023-06-14T10:28:17.518Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Kodi下载"><a href="#Kodi下载" class="headerlink" title="Kodi下载"></a>Kodi下载</h2><ul><li><a href="https://kodi.tv/download/">Kodi</a></li></ul><h2 id="一些技巧"><a href="#一些技巧" class="headerlink" title="一些技巧"></a>一些技巧</h2><details>  <summary>在智能电视上免费看万千影视，只需要在Kodi上安装这个The Crew插件</summary><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E5%9C%A8%E6%99%BA%E8%83%BD%E7%94%B5%E8%A7%86%E4%B8%8A%E5%85%8D%E8%B4%B9%E7%9C%8B%E4%B8%87%E5%8D%83%E5%BD%B1%E8%A7%86%EF%BC%8C%E5%8F%AA%E9%9C%80%E8%A6%81%E5%9C%A8Kodi%E4%B8%8A%E5%AE%89%E8%A3%85%E8%BF%99%E4%B8%AAThe%20Crew%E6%8F%92%E4%BB%B61.png" alt="在智能电视上免费看万千影视，只需要在Kodi上安装这个The Crew插件"></p><p>  <a href="https://www.luckydesigner.space/smarttv-to-watch-everythings-movie-via-kodi/">转自：https://www.luckydesigner.space/smarttv-to-watch-everythings-movie-via-kodi/</a></p></details><details>  <summary>智能电视上kodi观影之如何安装支持中文字幕插件</summary><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E6%99%BA%E8%83%BD%E7%94%B5%E8%A7%86%E4%B8%8Akodi%E8%A7%82%E5%BD%B1%E4%B9%8B%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E6%94%AF%E6%8C%81%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95%E6%8F%92%E4%BB%B6.png" alt="智能电视上kodi观影之如何安装支持中文字幕插件"></p><p>  <a href="https://www.luckydesigner.space/how-to-install-chinese-subtitle-in-kodi/">转自：https://www.luckydesigner.space/how-to-install-chinese-subtitle-in-kodi/</a></p></details><details>  <summary>如何在电视上用kodi自定义看各国上万直播源</summary><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E5%A6%82%E4%BD%95%E5%9C%A8%E7%94%B5%E8%A7%86%E4%B8%8A%E7%94%A8kodi%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9C%8B%E5%90%84%E5%9B%BD%E4%B8%8A%E4%B8%87%E7%9B%B4%E6%92%AD%E6%BA%90.png" alt="如何在电视上用kodi自定义看各国上万直播源"></p><p>  <a href="https://www.luckydesigner.space/kodi-software-to-watch-online-tv/">转自：https://www.luckydesigner.space/kodi-software-to-watch-online-tv/</a></p></details><details>  <summary>过年就该和家人玩游戏使用kodi在智能电视上玩万种电视游戏</summary><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E8%BF%87%E5%B9%B4%E5%B0%B1%E8%AF%A5%E5%92%8C%E5%AE%B6%E4%BA%BA%E7%8E%A9%E6%B8%B8%E6%88%8F%E4%BD%BF%E7%94%A8kodi%E5%9C%A8%E6%99%BA%E8%83%BD%E7%94%B5%E8%A7%86%E4%B8%8A%E7%8E%A9%E4%B8%87%E7%A7%8D%E7%94%B5%E8%A7%86%E6%B8%B8%E6%88%8F.png" alt="过年就该和家人玩游戏使用kodi在智能电视上玩万种电视游戏"></p><p>  <a href="https://www.luckydesigner.space/play-tv-game-online-with-kodi/">转自：https://www.luckydesigner.space/play-tv-game-online-with-kodi/</a></p></details><details>  <summary>在智能电视上如何看Youtube视频，使用Kodi你就能做到</summary><p>  <img src="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/%E5%9C%A8%E6%99%BA%E8%83%BD%E7%94%B5%E8%A7%86%E4%B8%8A%E5%A6%82%E4%BD%95%E7%9C%8BYoutube%E8%A7%86%E9%A2%91%EF%BC%8C%E4%BD%BF%E7%94%A8Kodi%E4%BD%A0%E5%B0%B1%E8%83%BD%E5%81%9A%E5%88%B0.png" alt="在智能电视上如何看Youtube视频，使用Kodi你就能做到"></p><p>  <a href="https://www.luckydesigner.space/how-to-watch-youtube-on-tv-via-kodi/">转自：https://www.luckydesigner.space/how-to-watch-youtube-on-tv-via-kodi/</a></p></details>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Kodi下载&quot;&gt;&lt;a href=&quot;#Kodi下载&quot; class=&quot;headerlink&quot; title=&quot;Kodi下载&quot;&gt;&lt;/a&gt;Kodi下载&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://kodi.tv/download/&quot;&gt;Kodi&lt;/a&gt;&lt;/li</summary>
      
    
    
    
    <category term="Kodi" scheme="http://damao2250.com/categories/Kodi/"/>
    
    
    <category term="软件" scheme="http://damao2250.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Mac软件安装记录</title>
    <link href="http://damao2250.com/2023/05/23/Mac%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/"/>
    <id>http://damao2250.com/2023/05/23/Mac%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/</id>
    <published>2023-05-23T00:56:11.000Z</published>
    <updated>2023-08-30T01:13:11.982Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Office-2019-for-Mac-安装教程"><a href="#Office-2019-for-Mac-安装教程" class="headerlink" title="Office 2019 for Mac 安装教程"></a>Office 2019 for Mac 安装教程</h1><h2 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h2><ul><li><a href="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/Office%202019%20for%20Mac%20%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.docx">Office 2019 for Mac 安装教程</a></li><li><a href="https://raw.githubusercontent.com/Damao2250/FileTransfer/master/SWDVD5_Office_Mac_Serializer_2019_MLF_X21-88135.ISO">SWDVD5_OfficeMac_Serializer_2019 MLFX21-88135.ISO</a></li><li>Office 2019 for Mac （文件太大，未上传）</li></ul><h2 id="激活软件安装"><a href="#激活软件安装" class="headerlink" title="激活软件安装"></a>激活软件安装</h2><ol><li>解压：<code>SWDVD5_OfficeMac_Serializer_2019 MLFX21-88135.ISO</code><ul><li>右键一打开方式一选择一个解压工具打开如果未下载解压工具，可从App Store下载如图的The Unarchiver</li></ul></li><li>打开解压后的文件夹，双击安装<code>Microsoft_Office_2019_VL_Serializer.pkg</code></li></ol><h2 id="office安装"><a href="#office安装" class="headerlink" title="office安装"></a>office安装</h2><ol><li>双击安装：<code>Microsoft Office 16.46.21021202 Installer.pkg</code></li><li>安装完成后必须点击更新，等待全部软件更新，不然会显示未激活</li></ol><h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><ol><li><p>安装完后打开Office组件后左下角不再有激活的选项，成为已激活状态。如果仍有激活选项，请再运行一次步骤2。</p></li><li><p>此前已注册的个人Microsoft账号仍可继续登录使用，如有问题可登陆官网更改资料或重设密码等。</p></li><li><p>仅支持macOS版本10.14.0或者更高版本。</p></li><li><p>如果显示Office打开错误可能是由于未完全卸载，仅删除了应用程序，仍然有遗留的支持文件和许可文件等，请完全卸载后重启电脑，再重新安装即可成功。</p></li></ol><h2 id="完全卸载Office"><a href="#完全卸载Office" class="headerlink" title="完全卸载Office"></a>完全卸载Office</h2><ol><li>删除 Office 2019 for Mac 应用程序</li></ol><ul><li>打开 Finder，然后单击“应用程序”</li><li>按住 Command 命令的同时单击以选择所有 Office 2019 for Mac 应用程序</li><li>按住 Ctrl 的同时单击或右键单击所选应用程序，然后单击“移到废纸等”</li></ul><ol start="2"><li>资源库中删除支持文件</li></ol><ul><li>打开 Finder，单击“前往”&gt;“电脑”找到“Macintosh HD”&gt;“资源库</li><li>在“资源库”文件夹，找到“LaunchDaemns”文件夹中，如果存在下面两个文件单击“移到废纸等”删除下面两个文件<ul><li>com.microsoft.office.licensingV2.helper.plist (如果存在)</li><li>com.microsoft.autoupdate.helper.plist (如果存在)</li></ul></li><li>在“资源库”&gt;“PrivilegedHelperTools”，如果存在下面两个文件单击“移到废纸等”删除下面两个文件<ul><li>com.microsoft.office.licensingV2.helper (如果存在)</li><li>com.microsoft.autoupdate.helper (如果存在)</li></ul></li></ul><ol start="3"><li>删除破解或无效许可文件</li></ol><ul><li>按照如何删除 Mac 上的 破解版Ofice 许可证文件”中的说明使用许可证删除工具。此工具可完全删除 Mac 上的许可证文件.</li><li>参考链接: <a href="https://support.microsoft.com/zh-cn/office/%E5%A6%82%E4%BD%95%E5%88%A0%E9%99%A4-mac-%E4%B8%8A%E7%9A%84-office-%E8%AE%B8%E5%8F%AF%E8%AF%81%E6%96%87%E4%BB%B6-b032c0f6-a431-4dad-83a9-6b727c03b193">删除Mac上的激活许可文件</a></li></ul><ol start="4"><li>从 DockQ 中删除 Office 2019 for Mac 图标</li></ol><ul><li>如果你已将 Ofice 图标添加到 Dock，在你卸载 Ofice 2019 for Mac 之后，它们可能会变为问号.</li><li>若要删除这些图标，请在按住 Control 的同时单击或右键单击图标，然后单击“选项”&gt;“从 Dock 中移除”.</li></ul><ol start="5"><li>清空废纸等，重新启动计算机</li></ol><ul><li>做完以上步骤之后，请右击“废纸等”清空“废纸等”并重新启动计算机</li></ul><h3 id="文章参考"><a href="#文章参考" class="headerlink" title="文章参考"></a>文章参考</h3><ul><li><a href="https://itc.shisu.edu.cn/78/6a/c10035a161898/page.htm">Office 2019 for Mac 安装激活教程</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Office-2019-for-Mac-安装教程&quot;&gt;&lt;a href=&quot;#Office-2019-for-Mac-安装教程&quot; class=&quot;headerlink&quot; title=&quot;Office 2019 for Mac 安装教程&quot;&gt;&lt;/a&gt;Office 2019 fo</summary>
      
    
    
    
    <category term="MAC" scheme="http://damao2250.com/categories/MAC/"/>
    
    
    <category term="软件" scheme="http://damao2250.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>在浏览器控制台安装npm包</title>
    <link href="http://damao2250.com/2023/05/05/%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%AE%89%E8%A3%85npm%E5%8C%85/"/>
    <id>http://damao2250.com/2023/05/05/%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%AE%89%E8%A3%85npm%E5%8C%85/</id>
    <published>2023-05-05T10:57:32.000Z</published>
    <updated>2023-05-05T11:10:47.478Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><ul><li>通过 <code>&lt;script /&gt;</code>标签在HTML页面上引入CDN资源</li><li>通过CND连接搜索相应的资源，如：<a href="https://api.cdnjs.com/libraries?search=jquery">https://api.cdnjs.com/libraries?search=jquery</a></li></ul><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 存储原始传入的名称</span><span class="token keyword">let</span> pkg_name_origin <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">npmInstall</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">originName</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> name <span class="token operator">=</span> originName<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  pkg_name_origin <span class="token operator">=</span> name<span class="token punctuation">;</span>  <span class="token comment">// 三种引入方式</span>  <span class="token comment">// 如果是一个有效的URL，直接通过&lt;script />标签插入</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^https?:\/\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">injectScript</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 如果指定了版本，尝试使用unpkg加载</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'@'</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">unpkg</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 否则，尝试使用cdnjs搜索</span>  <span class="token keyword">return</span> <span class="token function">cdnjs</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 在页面中插入&lt;script />标签</span><span class="token keyword">const</span> <span class="token function-variable function">injectScript</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  script<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>  script<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pkg_name_origin<span class="token punctuation">,</span> <span class="token string">' 安装成功。'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  script<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pkg_name_origin<span class="token punctuation">,</span> <span class="token string">' 安装失败。'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// document.body.removeChild(script);</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">unpkg</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token function">injectScript</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://unpkg.com/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">cdnjs</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> searchPromise <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://api.cdnjs.com/libraries?search=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>    <span class="token comment">// 不显示referrer的任何信息在请求头中</span>    <span class="token punctuation">&#123;</span> referrerPolicy<span class="token operator">:</span> <span class="token string">'no-referrer'</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> results<span class="token punctuation">,</span> total <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> searchPromise<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>total <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Sorry, '</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token string">' not found, please try another keyword.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 取结果中最相关的一条</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> exactName<span class="token punctuation">,</span> latest<span class="token operator">:</span> url <span class="token punctuation">&#125;</span> <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">!==</span> exactName<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">' not found, import '</span><span class="token punctuation">,</span> exactName<span class="token punctuation">,</span> <span class="token string">' instead.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 通过&lt;script />标签插入</span>  <span class="token function">injectScript</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">npmInstall</span><span class="token punctuation">(</span><span class="token string">'moment'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 直接引入</span><span class="token function">npmInstall</span><span class="token punctuation">(</span><span class="token string">'moment@2.29.4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 指定版本</span><span class="token function">npmInstall</span><span class="token punctuation">(</span><span class="token string">'https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 引入cdn地址</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实现原理&quot;&gt;&lt;a href=&quot;#实现原理&quot; class=&quot;headerlink&quot; title=&quot;实现原理&quot;&gt;&lt;/a&gt;实现原理&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过 &lt;code&gt;&amp;lt;script /&amp;gt;&lt;/code&gt;标签在HTML页面上引入CDN资源&lt;/li&gt;
&lt;</summary>
      
    
    
    
    <category term="小技巧" scheme="http://damao2250.com/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="浏览器控制台" scheme="http://damao2250.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8E%A7%E5%88%B6%E5%8F%B0/"/>
    
    <category term="安装npm包" scheme="http://damao2250.com/tags/%E5%AE%89%E8%A3%85npm%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>无法删除的水印方案</title>
    <link href="http://damao2250.com/2023/03/31/%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4%E7%9A%84%E6%B0%B4%E5%8D%B0%E6%96%B9%E6%A1%88/"/>
    <id>http://damao2250.com/2023/03/31/%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4%E7%9A%84%E6%B0%B4%E5%8D%B0%E6%96%B9%E6%A1%88/</id>
    <published>2023-03-31T06:11:50.000Z</published>
    <updated>2023-04-10T08:13:13.100Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">WaterMark</span> <span class="token punctuation">&#123;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 默认样式</span>    <span class="token keyword">const</span> defaultStyles <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      transform<span class="token operator">:</span> <span class="token string">'rotate(-15deg)'</span><span class="token punctuation">,</span>      position<span class="token operator">:</span> <span class="token string">'absolute'</span><span class="token punctuation">,</span>      overflow<span class="token operator">:</span> <span class="token string">'hidden'</span><span class="token punctuation">,</span>      zIndex<span class="token operator">:</span> <span class="token number">9999999</span><span class="token punctuation">,</span>      opacity<span class="token operator">:</span> <span class="token number">0.2</span><span class="token punctuation">,</span>      fontFamily<span class="token operator">:</span> <span class="token string">'微软雅黑'</span><span class="token punctuation">,</span>      color<span class="token operator">:</span> <span class="token string">'black'</span><span class="token punctuation">,</span>      textAlign<span class="token operator">:</span> <span class="token string">'center'</span><span class="token punctuation">,</span>      padding<span class="token operator">:</span> <span class="token string">'10px 10px'</span><span class="token punctuation">,</span>      whiteSpace<span class="token operator">:</span> <span class="token string">'nowrap'</span><span class="token punctuation">,</span>      display<span class="token operator">:</span> <span class="token string">'block'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 覆盖默认样式</span>    <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> left <span class="token operator">=</span> <span class="token number">220</span><span class="token punctuation">,</span> top <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">,</span> fontSize <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">,</span> id <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span> styles <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token operator">=</span> options    <span class="token keyword">this</span><span class="token punctuation">.</span>styles <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span>defaultStyles<span class="token punctuation">,</span> <span class="token operator">...</span>styles <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>text <span class="token operator">=</span> text<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>top<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createWatermark</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleResize<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">createMaskDiv</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> top</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> maskDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    maskDiv<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">'water_mask_id_0'</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> styles <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>styles<span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>left<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> top<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>top<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> fontSize<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>fontSize<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px</span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> styles<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      maskDiv<span class="token punctuation">.</span>style<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> styles<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    maskDiv<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>text<span class="token punctuation">;</span>    <span class="token keyword">return</span> maskDiv<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">createWatermark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> maskDiv <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createMaskDiv</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>maskDiv<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> width <span class="token operator">=</span> maskDiv<span class="token punctuation">.</span>offsetWidth    <span class="token keyword">let</span> height <span class="token operator">=</span> maskDiv<span class="token punctuation">.</span>offsetHeight    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>maskDiv<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    div<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">'eb-watermark'</span><span class="token punctuation">;</span>    div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">pointer-events: none !important; display: block !important; visibility: visible !important; position: fixed !important; top: 0 !important; left: 0 !important; opacity: 1 !important; z-index: 0 !important; transform: translateX(0) !important;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token keyword">const</span> shadowRoot <span class="token operator">=</span> div<span class="token punctuation">.</span><span class="token function">attachShadow</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> mode<span class="token operator">:</span> <span class="token string">'open'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> left <span class="token operator">=</span> width <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>left    <span class="token keyword">let</span> top <span class="token operator">=</span> height <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>top    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span> i <span class="token operator">+=</span> left<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span> j <span class="token operator">+=</span> top<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        shadowRoot<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createMaskDiv</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> observerConfig <span class="token operator">=</span> <span class="token punctuation">&#123;</span> childList<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> subtree<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> attributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> attributeFilter<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">,</span> <span class="token string">'style'</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 监听DOM改变</span>    <span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleMutation</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> observerConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置characterData监听元素的innerText改变</span>    <span class="token keyword">const</span> shadowRootObserver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">mutations</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleShadowRootMutation</span><span class="token punctuation">(</span>mutations<span class="token punctuation">,</span> shadowRoot<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    shadowRootObserver<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>shadowRoot<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span>observerConfig<span class="token punctuation">,</span> characterData<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">handleMutation</span><span class="token punctuation">(</span><span class="token parameter">mutations</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    mutations<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">mutation</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> watermark <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'eb-watermark'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>removedNodes<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">||</span> mutation<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id <span class="token operator">===</span> <span class="token string">'eb-watermark'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>watermark<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createWatermark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'attributes'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id <span class="token operator">===</span> <span class="token string">'eb-watermark'</span> <span class="token operator">||</span> mutation<span class="token punctuation">.</span>attributeName <span class="token operator">===</span> <span class="token string">'style'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>watermark<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          watermark<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createWatermark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> watermark <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#eb-watermark'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>watermark <span class="token operator">||</span> watermark<span class="token punctuation">.</span>parentElement <span class="token operator">!==</span> document<span class="token punctuation">.</span>body <span class="token operator">||</span> <span class="token operator">!</span>watermark<span class="token punctuation">.</span>shadowRoot <span class="token operator">||</span> <span class="token operator">!</span>watermark<span class="token punctuation">.</span>shadowRoot<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#water_mask_id_0'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>watermark<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        watermark<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createWatermark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">handleShadowRootMutation</span><span class="token punctuation">(</span><span class="token parameter">mutations<span class="token punctuation">,</span> shadowRoot</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    mutations<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">mutation</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>removedNodes<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">||</span> mutation<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'attributes'</span> <span class="token operator">||</span> <span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'characterData'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>target<span class="token punctuation">.</span>parentNode <span class="token operator">===</span> shadowRoot <span class="token operator">||</span> mutation<span class="token punctuation">.</span>target<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode <span class="token operator">===</span> shadowRoot<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> watermark <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'eb-watermark'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>watermark<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          watermark<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createWatermark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">handleResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> watermark <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'eb-watermark'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>watermark<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      watermark<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createWatermark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> WaterMark<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> WaterMark <span class="token keyword">from</span> <span class="token string">'./watermark'</span><span class="token punctuation">;</span><span class="token keyword">new</span> <span class="token class-name">WaterMark</span><span class="token punctuation">(</span><span class="token string">'我是水印啊'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="待优化"><a href="#待优化" class="headerlink" title="待优化"></a>待优化</h2><ul><li>目前只支持插入到body的全屏水印，下一步优化支持指定id的div水印</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实现代码&quot;&gt;&lt;a href=&quot;#实现代码&quot; class=&quot;headerlink&quot; title=&quot;实现代码&quot;&gt;&lt;/a&gt;实现代码&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-js&quot; data-language=&quot;js&quot;&gt;&lt;code cl</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://damao2250.com/categories/JavaScript/"/>
    
    
    <category term="水印" scheme="http://damao2250.com/tags/%E6%B0%B4%E5%8D%B0/"/>
    
  </entry>
  
</feed>
